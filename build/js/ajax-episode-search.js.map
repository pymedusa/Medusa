{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/static/js/ajax-episode-search.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","searchStatusUrl","failedDownload","qualityDownload","selectedEpisode","PNotify","prototype","options","maxonscreen","$","fn","forcedSearches","enableLink","el","on","prop","fadeTo","disableLink","off","checkManualSearches","showId","val","url","undefined","pollInterval","ajax","[object Object]","type","dataType","setTimeout","timeout","done","data","episodes","each","name","ep","loadingImage","htmlContent","show","season","episode","img","children","parent","rSearchTerm","searchstatus","toLowerCase","status","replace","quality","closest","overview","siblings","html","elementCompleteEpisodes","imageCompleteEpisodes","remove","document","ready","ajaxEpSearch","extend","size","colorRow","queuedImage","noImage","yesImage","event","preventDefault","this","modal","forcedSearch","imageName","imageResult","link","indexOf","getJSON","result","removeClass","addClass","hasClass","href","shiftKey","ctrlKey","which","window","open","location","text"],"mappings":"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","file":"ajax-episode-search.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const searchStatusUrl = 'home/getManualSearchStatus';\nlet failedDownload = false;\nlet qualityDownload = false;\nlet selectedEpisode = '';\nPNotify.prototype.options.maxonscreen = 5;\n\n$.fn.forcedSearches = [];\n\nconst enableLink = el => {\n    el.on('click.disabled', false);\n    el.prop('enableClick', '1');\n    el.fadeTo('fast', 1);\n};\n\nconst disableLink = el => {\n    el.off('click.disabled');\n    el.prop('enableClick', '0');\n    el.fadeTo('fast', 0.5);\n};\n\nconst updateImages = data => {\n    $.each(data.episodes, (name, ep) => {\n        // Get td element for current ep\n        const loadingImage = 'loading16.gif';\n        const queuedImage = 'queued.png';\n        const searchImage = 'search16.png';\n        let htmlContent = '';\n        // Try to get the <a> Element\n        const el = $('a[id=' + ep.show + 'x' + ep.season + 'x' + ep.episode + ']');\n        const img = el.children('img[data-ep-search]');\n        const parent = el.parent();\n        if (el) {\n            let rSearchTerm = '';\n            if (ep.searchstatus.toLowerCase() === 'searching') {\n                //\n                // el=$('td#' + ep.season + 'x' + ep.episode + '.search img');\n                img.prop('title', 'Searching');\n                img.prop('alt', 'Searching');\n                img.prop('src', 'images/' + loadingImage);\n                disableLink(el);\n                htmlContent = ep.searchstatus;\n            } else if (ep.searchstatus.toLowerCase() === 'queued') {\n                //\n                // el=$('td#' + ep.season + 'x' + ep.episode + '.search img');\n                img.prop('title', 'Queued');\n                img.prop('alt', 'queued');\n                img.prop('src', 'images/' + queuedImage);\n                disableLink(el);\n                htmlContent = ep.searchstatus;\n            } else if (ep.searchstatus.toLowerCase() === 'finished') {\n                //\n                // el=$('td#' + ep.season + 'x' + ep.episode + '.search img');\n                img.prop('title', 'Searching');\n                img.prop('alt', 'searching');\n                img.parent().prop('class', 'epRetry');\n                img.prop('src', 'images/' + searchImage);\n                enableLink(el);\n\n                // Update Status and Quality\n                rSearchTerm = /(\\w+(\\s\\((\\bBest\\b|\\bProper\\b)\\))?)\\s\\((.+?)\\)/;\n                htmlContent = ep.status.replace(rSearchTerm, \"$1\" + ' <span class=\"quality ' + ep.quality + '\">' + \"$4\" + '</span>'); // eslint-disable-line quotes, no-useless-concat\n                parent.closest('tr').prop('class', ep.overview + ' season-' + ep.season + ' seasonstyle');\n            }\n            // Update the status column if it exists\n            parent.siblings('.col-status').html(htmlContent);\n        }\n        const elementCompleteEpisodes = $('a[id=forceUpdate-' + ep.show + 'x' + ep.season + 'x' + ep.episode + ']');\n        const imageCompleteEpisodes = elementCompleteEpisodes.children('img');\n        if (elementCompleteEpisodes) {\n            if (ep.searchstatus.toLowerCase() === 'searching') {\n                imageCompleteEpisodes.prop('title', 'Searching');\n                imageCompleteEpisodes.prop('alt', 'Searching');\n                imageCompleteEpisodes.prop('src', 'images/' + loadingImage);\n                disableLink(elementCompleteEpisodes);\n            } else if (ep.searchstatus.toLowerCase() === 'queued') {\n                imageCompleteEpisodes.prop('title', 'Queued');\n                imageCompleteEpisodes.prop('alt', 'queued');\n                imageCompleteEpisodes.prop('src', 'images/' + queuedImage);\n            } else if (ep.searchstatus.toLowerCase() === 'finished') {\n                imageCompleteEpisodes.prop('title', 'Forced Search');\n                imageCompleteEpisodes.prop('alt', '[search]');\n                imageCompleteEpisodes.prop('src', 'images/' + searchImage);\n                if (ep.overview.toLowerCase() === 'snatched') {\n                    elementCompleteEpisodes.closest('tr').remove();\n                } else {\n                    enableLink(elementCompleteEpisodes);\n                }\n            }\n        }\n    });\n};\n\nconst checkManualSearches = () => {\n    const showId = $('#series-id').val();\n    const url = showId === undefined ? searchStatusUrl : searchStatusUrl + '?show=' + showId;\n    let pollInterval = 5000;\n    $.ajax({\n        url,\n        error() {\n            pollInterval = 30000;\n        },\n        type: 'GET',\n        dataType: 'JSON',\n        complete() {\n            setTimeout(checkManualSearches, pollInterval);\n        },\n        timeout: 15000 // Timeout every 15 secs\n    }).done(data => {\n        if (data.episodes) {\n            pollInterval = 5000;\n        } else {\n            pollInterval = 15000;\n        }\n        updateImages(data);\n        //\n        // cleanupManualSearches(data);\n    });\n};\n\n$(document).ready(() => checkManualSearches());\n\n$.ajaxEpSearch = function(options) {\n    options = $.extend({}, {\n        size: 16,\n        colorRow: false,\n        loadingImage: 'loading16.gif',\n        queuedImage: 'queued.png',\n        noImage: 'no16.png',\n        yesImage: 'yes16.png'\n    }, options);\n\n    $('.epRetry').on('click', function(event) {\n        event.preventDefault();\n\n        // Check if we have disabled the click\n        if ($(this).prop('enableClick') === '0') {\n            return false;\n        }\n\n        selectedEpisode = $(this);\n\n        $('#forcedSearchModalFailed').modal('show');\n    });\n\n    const forcedSearch = () => {\n        const parent = selectedEpisode.parent();\n        let imageName;\n        let imageResult;\n        let htmlContent;\n\n        // Create var for anchor\n        const link = selectedEpisode;\n\n        // Create var for img under anchor and set options for the loading gif\n        const img = selectedEpisode.children('img');\n        img.prop('title', 'loading');\n        img.prop('alt', '');\n        img.prop('src', 'images/' + options.loadingImage);\n\n        let url = selectedEpisode.prop('href');\n\n        if (!failedDownload) {\n            url = url.replace('retryEpisode', 'searchEpisode');\n        }\n\n        // Only pass the down_cur_quality flag when retryEpisode() is called\n        if (qualityDownload && url.indexOf('retryEpisode') >= 0) {\n            url += '&down_cur_quality=1';\n        }\n\n        // @TODO: Move to the API\n        $.getJSON(url, data => {\n            // If they failed then just put the red X\n            if (data.result.toLowerCase() === 'failure') {\n                imageName = options.noImage;\n                imageResult = 'failed';\n            } else {\n                // If the snatch was successful then apply the\n                // corresponding class and fill in the row appropriately\n                imageName = options.loadingImage;\n                imageResult = 'success';\n                // Color the row\n                if (options.colorRow) {\n                    parent.parent().removeClass('skipped wanted qual good unaired').addClass('snatched');\n                }\n                // Applying the quality class\n                const rSearchTerm = /(\\w+)\\s\\((.+?)\\)/;\n                htmlContent = data.result.replace(rSearchTerm, '$1 <span class=\"quality ' + data.quality + '\">$2</span>');\n                // Update the status column if it exists\n                parent.siblings('.col-status').html(htmlContent);\n                // Only if the queuing was successful, disable the onClick event of the loading image\n                disableLink(link);\n            }\n\n            // Put the corresponding image as the result of queuing of the manual search\n            img.prop('title', imageResult);\n            img.prop('alt', imageResult);\n            img.prop('height', options.size);\n            img.prop('src', 'images/' + imageName);\n        });\n        return false;\n    };\n\n    $('.epSearch').on('click', function(event) {\n        event.preventDefault();\n\n        // Check if we have disabled the click\n        if ($(this).prop('enableClick') === '0') {\n            return false;\n        }\n\n        selectedEpisode = $(this);\n\n        // @TODO: Replace this with an easier to read selector\n        if ($(this).parent().parent().children('.col-status').children('.quality').length > 0) {\n            $('#forcedSearchModalQuality').modal('show');\n        } else {\n            forcedSearch();\n        }\n    });\n\n    $('.epManualSearch').on('click', function(event) {\n        event.preventDefault();\n\n        // @TODO: Omg this disables all the manual snatch icons, when one is clicked\n        if ($(this).hasClass('disabled')) {\n            return false;\n        }\n\n        $('.epManualSearch').addClass('disabled');\n        $('.epManualSearch').fadeTo(1, 0.1);\n\n        const url = this.href;\n        if (event.shiftKey || event.ctrlKey || event.which === 2) {\n            window.open(url, '_blank');\n        } else {\n            window.location = url;\n        }\n    });\n\n    $('#forcedSearchModalFailed .btn').on('click', function() {\n        failedDownload = ($(this).text().toLowerCase() === 'yes');\n        $('#forcedSearchModalQuality').modal('show');\n    });\n\n    $('#forcedSearchModalQuality .btn').on('click', function() {\n        qualityDownload = ($(this).text().toLowerCase() === 'yes');\n        forcedSearch();\n    });\n};\n"]}