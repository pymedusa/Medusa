{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/static/js/browser.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","Browser","defaults","title","url","autocompleteURL","includeFiles","showBrowseButton","fileBrowserDialog","currentBrowserPath","currentRequest","browse","path","endpoint","abort","dialog","getJSON","data","empty","firstVal","link","grep","val","currentPath","on","which","target","value","appendTo","fileBrowser","ui","item","list","each","entry","isFile","click","text","name","prepend","this","addClass","removeClass","wrap","fn","nFileBrowser","callback","options","extend","dialogClass","position","my","at","of","window","minWidth","Math","min","document","width","height","maxHeight","maxWidth","modal","autoOpen","class","[object Object]","initialDir","field","autocomplete","query","collision","request","response","escapeRegex","term","ajax","dataType","done","matcher","RegExp","test","_renderItem","ul","resultItem","label","x","replace","fullMatch","append","ls","Boolean","localStorage","getItem","err","console","log","key","after","optionsWithInitialDir"],"mappings":"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","file":"browser.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function($) {\n    'use strict';\n\n    $.Browser = {\n        defaults: {\n            title: 'Choose Directory',\n            url: 'browser/',\n            autocompleteURL: 'browser/complete',\n            includeFiles: 0,\n            showBrowseButton: true\n        }\n    };\n\n    let fileBrowserDialog;\n    let currentBrowserPath;\n    let currentRequest = null;\n\n    const browse = (path, endpoint, includeFiles) => {\n        if (currentBrowserPath === path) {\n            return;\n        }\n\n        currentBrowserPath = path;\n\n        if (currentRequest) {\n            currentRequest.abort();\n        }\n\n        fileBrowserDialog.dialog('option', 'dialogClass', 'browserDialog busy');\n        fileBrowserDialog.dialog('option', 'closeText', ''); // This removes the \"Close\" text\n\n        currentRequest = $.getJSON(endpoint, {\n            path,\n            includeFiles\n        }, data => {\n            fileBrowserDialog.empty();\n            const firstVal = data[0];\n            let link = null;\n            let i = 0;\n\n            data = $.grep(data, () => i++ !== 0);\n\n            $('<input type=\"text\" class=\"form-control input-sm\">')\n                .val(firstVal.currentPath)\n                .on('keypress', e => {\n                    if (e.which === 13) {\n                        browse(e.target.value, endpoint, includeFiles);\n                    }\n                })\n                .appendTo(fileBrowserDialog)\n                .fileBrowser({ showBrowseButton: false })\n                .on('autocompleteselect', (e, ui) => {\n                    browse(ui.item.value, endpoint, includeFiles);\n                });\n\n            const list = $('<ul>').appendTo(fileBrowserDialog);\n            $.each(data, (i, entry) => {\n                link = $('<a href=\"javascript:void(0)\">').on('click', () => {\n                    if (entry.isFile) {\n                        currentBrowserPath = entry.path;\n                        $('.browserDialog .ui-button:contains(\"Ok\")').click();\n                    } else {\n                        browse(entry.path, endpoint, includeFiles);\n                    }\n                }).text(entry.name);\n                if (entry.isFile) {\n                    link.prepend('<span class=\"ui-icon ui-icon-blank\"></span>');\n                } else {\n                    link.prepend('<span class=\"ui-icon ui-icon-folder-collapsed\"></span>').on('mouseenter', function() {\n                        $('span', this).addClass('ui-icon-folder-open');\n                    }).on('mouseleave', function() {\n                        $('span', this).removeClass('ui-icon-folder-open');\n                    });\n                }\n                link.appendTo(list);\n            });\n            $('a', list).wrap('<li class=\"ui-state-default ui-corner-all\">');\n            fileBrowserDialog.dialog('option', 'dialogClass', 'browserDialog');\n        });\n    };\n\n    $.fn.nFileBrowser = function(callback, options) {\n        options = $.extend({}, $.Browser.defaults, options);\n\n        if (fileBrowserDialog) {\n            // The title may change, even if fileBrowserDialog already exists\n            fileBrowserDialog.dialog('option', 'title', options.title);\n        } else {\n            // Make a fileBrowserDialog object if one doesn't exist already\n            // set up the jquery dialog\n            fileBrowserDialog = $('<div class=\"fileBrowserDialog\" style=\"display:hidden\"></div>').appendTo('body').dialog({\n                dialogClass: 'browserDialog',\n                title: options.title,\n                position: {\n                    my: 'center top',\n                    at: 'center top+60',\n                    of: window\n                },\n                minWidth: Math.min($(document).width() - 80, 650),\n                height: Math.min($(document).height() - 80, $(window).height() - 80),\n                maxHeight: Math.min($(document).height() - 80, $(window).height() - 80),\n                maxWidth: $(document).width() - 80,\n                modal: true,\n                autoOpen: false\n            });\n        }\n\n        fileBrowserDialog.dialog('option', 'buttons', [{\n            text: 'Ok',\n            class: 'btn',\n            click() {\n                // Store the browsed path to the associated text field\n                callback(currentBrowserPath, options);\n                $(this).dialog('close');\n            }\n        }, {\n            text: 'Cancel',\n            class: 'btn',\n            click() {\n                $(this).dialog('close');\n            }\n        }]);\n\n        // Set up the browser and launch the dialog\n        let initialDir = '';\n        if (options.initialDir) {\n            initialDir = options.initialDir;\n        }\n\n        browse(initialDir, options.url, options.includeFiles);\n        fileBrowserDialog.dialog('open');\n\n        return false;\n    };\n\n    $.fn.fileBrowser = function(options) {\n        options = $.extend({}, $.Browser.defaults, options);\n        // Text field used for the result\n        options.field = $(this);\n\n        if (options.field.autocomplete && options.autocompleteURL) {\n            let query = '';\n            options.field.autocomplete({\n                position: {\n                    my: 'top',\n                    at: 'bottom',\n                    collision: 'flipfit'\n                },\n                source(request, response) {\n                    // Keep track of user submitted search term\n                    query = $.ui.autocomplete.escapeRegex(request.term, options.includeFiles);\n                    $.ajax({\n                        url: options.autocompleteURL,\n                        data: request,\n                        dataType: 'json'\n                    }).done(data => {\n                        // Implement a startsWith filter for the results\n                        const matcher = new RegExp('^' + query, 'i');\n                        const a = $.grep(data, item => matcher.test(item));\n                        response(a);\n                    });\n                },\n                open() {\n                    $('.ui-autocomplete li.ui-menu-item a').removeClass('ui-corner-all');\n                }\n            }).data('ui-autocomplete')._renderItem = function(ul, item) {\n                // Highlight the matched search term from the item -- note that this is global and will match anywhere\n                let resultItem = item.label;\n                const x = new RegExp('(?![^&;]+;)(?!<[^<>]*)(' + query + ')(?![^<>]*>)(?![^&;]+;)', 'gi');\n                resultItem = resultItem.replace(x, fullMatch => '<b>' + fullMatch + '</b>');\n                return $('<li></li>')\n                    .data('ui-autocomplete-item', item)\n                    .append('<a class=\"nowrap\">' + resultItem + '</a>')\n                    .appendTo(ul);\n            };\n        }\n\n        let path;\n        let ls = false;\n        // If the text field is empty and we're given a key then populate it with the last browsed value from localStorage\n        try {\n            ls = Boolean(localStorage.getItem);\n        } catch (err) {\n            console.log(err);\n        }\n        if (ls && options.key) {\n            path = localStorage['fileBrowser-' + options.key];\n        }\n        if (options.key && options.field.val().length === 0 && (path)) {\n            options.field.val(path);\n        }\n\n        const callback = (path, options) => {\n            // Store the browsed path to the associated text field\n            options.field.val(path);\n\n            // Use a localStorage to remember for next time -- no ie6/7\n            if (ls && options.key) {\n                localStorage['fileBrowser-' + options.key] = path;\n            }\n        };\n\n        options.field.addClass('fileBrowserField');\n        if (options.showBrowseButton) {\n            // Append the browse button and give it a click behaviour\n            options.field.after(\n                $('<input type=\"button\" value=\"Browse&hellip;\" class=\"btn btn-inline fileBrowser\">').on('click', function() {\n                    const initialDir = options.field.val() || (options.key && path) || '';\n                    const optionsWithInitialDir = $.extend({}, options, { initialDir });\n                    $(this).nFileBrowser(callback, optionsWithInitialDir);\n                    return false;\n                })\n            );\n        }\n        return options.field;\n    };\n})($);\n"]}