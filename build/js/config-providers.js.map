{"version":3,"sources":["js/node_modules/browser-pack/_prelude.js","js/static/js/config-providers.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","$","document","ready","fn","showHideProviders","each","providerName","this","prop","val","show","hide","ifExists","loopThroughArray","searchFor","found","forEach","rootObject","name","console","log","getCategories","isDefault","selectedProvider","url","key","params","api_key","wrapInner","MEDUSA","config","themeSpinner","getJSON","data","updateNewznabCaps","debug","tv_categories","always","empty","newznabProviders","torrentRssProviders","addProvider","id","cat","showProvider","trim","test","match","newData","append","toAdd","anonURL","sortable","makeNewznabProviderString","addTorrentRssProvider","cookies","titleTag","populateTorrentRssSection","makeTorrentRssProviderString","updateProvider","populateNewznabSection","deleteProvider","remove","updateTorrentRssProvider","deleteTorrentRssProvider","rrcat","newCatOptions","split","push","text","value","replaceOptions","newznabProvidersCapabilities","newzNabCaps","categories","newzNabCap","Array","isArray","newCapOptions","categorySet","provStrings","hasOwnProperty","join","provider","refreshProviderList","idArr","finalArr","checked","is","refreshEditAProvider","addClass","appendTo","len","replace","getElementsByClassName","innerHTML","on","providerId","substring","map","opt","toArray","newOptions","selectedCat","undefined","error","success","alert","title_tag","replaceWith","clone","find","makeTorrentOptionString","seedRatio","seedTime","processMet","options","self","index","option","$option","placeholder","[object Object]","disableSelection"],"mappings":"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","file":"config-providers.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","$(document).ready(function() { // eslint-disable-line max-lines\n    $.fn.showHideProviders = function() {\n        $('.providerDiv').each(function() {\n            const providerName = $(this).prop('id');\n            const selectedProvider = $('#editAProvider :selected').val();\n\n            if (selectedProvider + 'Div' === providerName) {\n                $(this).show();\n            } else {\n                $(this).hide();\n            }\n        });\n    };\n\n    const ifExists = (loopThroughArray, searchFor) => {\n        let found = false;\n\n        loopThroughArray.forEach(rootObject => {\n            if (rootObject.name === searchFor) {\n                found = true;\n            }\n            console.log(rootObject.name + ' while searching for: ' + searchFor);\n        });\n        return found;\n    };\n\n    /**\n     * Gets categories for the provided newznab provider.\n     * @param {String} isDefault\n     * @param {Array} selectedProvider\n     * @return no return data. Function updateNewznabCaps() is run at callback\n     */\n    $.fn.getCategories = function(isDefault, selectedProvider) {\n        const [name, url, key] = selectedProvider;\n\n        if (!name || !url || !key) {\n            return;\n        }\n\n        const params = { url, name, api_key: key }; // eslint-disable-line camelcase\n\n        $('.updating_categories').wrapInner('<span><img src=\"images/loading16' + MEDUSA.config.themeSpinner + '.gif\"> Updating Categories ...</span>'); // eslint-disable-line no-undef\n        const jqxhr = $.getJSON('config/providers/getNewznabCategories', params, function(data) {\n            $(this).updateNewznabCaps(data, selectedProvider);\n            console.debug(data.tv_categories);\n        });\n        jqxhr.always(() => {\n            $('.updating_categories').empty();\n        });\n    };\n\n    const newznabProviders = [];\n    const torrentRssProviders = [];\n\n    $.fn.addProvider = function(id, name, url, key, cat, isDefault, showProvider) { // eslint-disable-line max-params\n        url = $.trim(url);\n        if (!url) {\n            return;\n        }\n\n        if (!/^https?:\\/\\//i.test(url)) {\n            url = 'http://' + url;\n        }\n\n        if (url.match('/$') === null) {\n            url += '/';\n        }\n\n        const newData = [isDefault, [name, url, key, cat]];\n        newznabProviders[id] = newData;\n\n        $('#editANewznabProvider').append('<option value=' + id + '>' + name + '</option>');\n        $('select#editANewznabProvider').prop('selectedIndex', 0);\n\n        if ($('#provider_order_list > #' + id).length === 0 && showProvider !== false) {\n            const toAdd = '<li class=\"ui-state-default\" id=\"' + id + '\"> <input type=\"checkbox\" id=\"enable_' + id + '\" class=\"provider_enabler\" CHECKED> <a href=\"' + MEDUSA.config.anonURL + url + '\" class=\"imgLink\" target=\"_new\"><img src=\"images/providers/newznab.png\" alt=\"' + name + '\" width=\"16\" height=\"16\"></a> ' + name + '</li>'; // eslint-disable-line no-undef\n\n            $('#provider_order_list').append(toAdd);\n            $('#provider_order_list').sortable('refresh');\n        }\n\n        $(this).makeNewznabProviderString();\n    };\n\n    $.fn.addTorrentRssProvider = function(id, name, url, cookies, titleTag) { // eslint-disable-line max-params\n        const newData = [name, url, cookies, titleTag];\n        torrentRssProviders[id] = newData;\n\n        $('#editATorrentRssProvider').append('<option value=' + id + '>' + name + '</option>');\n        $(this).populateTorrentRssSection();\n\n        if ($('#provider_order_list > #' + id).length === 0) {\n            $('#provider_order_list').append('<li class=\"ui-state-default\" id=\"' + id + '\"> <input type=\"checkbox\" id=\"enable_' + id + '\" class=\"provider_enabler\" CHECKED> <a href=\"' + MEDUSA.config.anonURL + url + '\" class=\"imgLink\" target=\"_new\"><img src=\"images/providers/torrentrss.png\" alt=\"' + name + '\" width=\"16\" height=\"16\"></a> ' + name + '</li>'); // eslint-disable-line no-undef\n            $('#provider_order_list').sortable('refresh');\n        }\n\n        $(this).makeTorrentRssProviderString();\n    };\n\n    $.fn.updateProvider = function(id, url, key, cat) {\n        newznabProviders[id][1][1] = url;\n        newznabProviders[id][1][2] = key;\n        newznabProviders[id][1][3] = cat;\n\n        $(this).populateNewznabSection();\n\n        $(this).makeNewznabProviderString();\n    };\n\n    $.fn.deleteProvider = function(id) {\n        $('#editANewznabProvider option[value=' + id + ']').remove();\n        delete newznabProviders[id];\n        $(this).populateNewznabSection();\n        $('li').remove('#' + id);\n        $(this).makeNewznabProviderString();\n    };\n\n    $.fn.updateTorrentRssProvider = function(id, url, cookies, titleTag) {\n        torrentRssProviders[id][1] = url;\n        torrentRssProviders[id][2] = cookies;\n        torrentRssProviders[id][3] = titleTag;\n        $(this).populateTorrentRssSection();\n        $(this).makeTorrentRssProviderString();\n    };\n\n    $.fn.deleteTorrentRssProvider = function(id) {\n        $('#editATorrentRssProvider option[value=' + id + ']').remove();\n        delete torrentRssProviders[id];\n        $(this).populateTorrentRssSection();\n        $('li').remove('#' + id);\n        $(this).makeTorrentRssProviderString();\n    };\n\n    $.fn.populateNewznabSection = function() {\n        const selectedProvider = $('#editANewznabProvider :selected').val();\n        let data = '';\n        let isDefault = '';\n        let rrcat = '';\n\n        if (selectedProvider === 'addNewznab') {\n            data = ['', '', ''];\n            isDefault = 0;\n            $('#newznab_add_div').show();\n            $('#newznab_update_div').hide();\n            $('#newznab_cat').prop('disabled', true);\n            $('#newznab_cap').prop('disabled', true);\n            $('#newznab_cat_update').prop('disabled', true);\n            $('#newznabcapdiv').hide();\n\n            $('#newznab_cat option').each(function() {\n                $(this).remove();\n            });\n\n            $('#newznab_cap option').each(function() {\n                $(this).remove();\n            });\n        } else {\n            data = newznabProviders[selectedProvider][1];\n            isDefault = newznabProviders[selectedProvider][0];\n            $('#newznab_add_div').hide();\n            $('#newznab_update_div').show();\n            $('#newznab_cat').prop('disabled', false);\n            $('#newznab_cap').prop('disabled', false);\n            $('#newznab_cat_update').prop('disabled', false);\n            $('#newznabcapdiv').show();\n        }\n\n        $('#newznab_name').val(data[0]);\n        $('#newznab_url').val(data[1]);\n        $('#newznab_api_key').val(data[2]);\n\n        // Check if not already array\n        if (typeof data[3] === 'string') {\n            rrcat = data[3].split(',');\n        } else {\n            rrcat = data[3];\n        }\n\n        // Update the category select box (on the right)\n        const newCatOptions = [];\n        if (rrcat) {\n            rrcat.forEach(cat => {\n                if (cat !== '') {\n                    newCatOptions.push({\n                        text: cat,\n                        value: cat\n                    });\n                }\n            });\n            $('#newznab_cat').replaceOptions(newCatOptions);\n        }\n\n        if (selectedProvider === 'addNewznab') {\n            $('#newznab_name').prop('disabled', false);\n            $('#newznab_url').prop('disabled', false);\n        } else {\n            $('#newznab_name').prop('disabled', true);\n\n            if (isDefault) {\n                $('#newznab_url').prop('disabled', true);\n                $('#newznab_delete').prop('disabled', true);\n            } else {\n                $('#newznab_url').prop('disabled', false);\n                $('#newznab_delete').prop('disabled', false);\n            }\n\n            // Get Categories Capabilities\n            if (data[0] && data[1] && data[2] && !ifExists($.fn.newznabProvidersCapabilities, data[0])) {\n                $(this).getCategories(isDefault, data);\n            }\n            $(this).updateNewznabCaps(null, data);\n        }\n    };\n\n    /**\n     * Updates the Global array $.fn.newznabProvidersCapabilities with a combination of newznab prov name\n     * and category capabilities. Return\n     * @param {Array} newzNabCaps, is the returned object with newznabprovider Name and Capabilities.\n     * @param {Array} selectedProvider\n     * @return no return data. The multiselect input $(\"#newznab_cap\") is updated, as a result.\n     */\n    $.fn.updateNewznabCaps = function(newzNabCaps, selectedProvider) {\n        if (newzNabCaps && !ifExists($.fn.newznabProvidersCapabilities, selectedProvider[0])) {\n            $.fn.newznabProvidersCapabilities.push({\n                name: selectedProvider[0],\n                categories: newzNabCaps.tv_categories // eslint-disable-line camelcase\n            });\n        }\n\n        // Loop through the array and if currently selected newznab provider name matches one in the array, use it to\n        // update the capabilities select box (on the left).\n        $('#newznab_cap').empty();\n        if (selectedProvider[0]) {\n            $.fn.newznabProvidersCapabilities.forEach(newzNabCap => {\n                if (newzNabCap.name && newzNabCap.name === selectedProvider[0] && Array.isArray(newzNabCap.categories)) {\n                    const newCapOptions = [];\n                    newzNabCap.categories.forEach(categorySet => {\n                        if (categorySet.id && categorySet.name) {\n                            newCapOptions.push({\n                                value: categorySet.id,\n                                text: categorySet.name + '(' + categorySet.id + ')'\n                            });\n                        }\n                    });\n                    $('#newznab_cap').replaceOptions(newCapOptions);\n                }\n            });\n        }\n    };\n\n    $.fn.makeNewznabProviderString = function() {\n        const provStrings = [];\n\n        for (const id in newznabProviders) {\n            if ({}.hasOwnProperty.call(newznabProviders, id)) {\n                provStrings.push(newznabProviders[id][1].join('|'));\n            }\n        }\n\n        $('#newznab_string').val(provStrings.join('!!!'));\n    };\n\n    $.fn.populateTorrentRssSection = function() {\n        const selectedProvider = $('#editATorrentRssProvider :selected').val();\n        let data = '';\n\n        if (selectedProvider === 'addTorrentRss') {\n            data = ['', '', '', 'title'];\n            $('#torrentrss_add_div').show();\n            $('#torrentrss_update_div').hide();\n        } else {\n            data = torrentRssProviders[selectedProvider];\n            $('#torrentrss_add_div').hide();\n            $('#torrentrss_update_div').show();\n        }\n\n        $('#torrentrss_name').val(data[0]);\n        $('#torrentrss_url').val(data[1]);\n        $('#torrentrss_cookies').val(data[2]);\n        $('#torrentrss_title_tag').val(data[3]);\n\n        if (selectedProvider === 'addTorrentRss') {\n            $('#torrentrss_name').prop('disabled', false);\n            $('#torrentrss_url').prop('disabled', false);\n            $('#torrentrss_cookies').prop('disabled', false);\n            $('#torrentrss_title_tag').prop('disabled', false);\n        } else {\n            $('#torrentrss_name').prop('disabled', true);\n            $('#torrentrss_url').prop('disabled', false);\n            $('#torrentrss_cookies').prop('disabled', true);\n            $('#torrentrss_title_tag').prop('disabled', false);\n            $('#torrentrss_delete').prop('disabled', false);\n        }\n    };\n\n    $.fn.makeTorrentRssProviderString = function() {\n        const provStrings = [];\n        torrentRssProviders.forEach(provider => {\n            provStrings.push(provider.join('|'));\n        });\n\n        $('#torrentrss_string').val(provStrings.join('!!!'));\n    };\n\n    $.fn.refreshProviderList = function() {\n        const idArr = $('#provider_order_list').sortable('toArray');\n        const finalArr = [];\n        $.each(idArr, (key, val) => {\n            const checked = $('#enable_' + val).is(':checked') ? '1' : '0';\n            finalArr.push(val + ':' + checked);\n        });\n\n        $('#provider_order').val(finalArr.join(' '));\n        $(this).refreshEditAProvider();\n    };\n\n    $.fn.refreshEditAProvider = function() {\n        $('#provider-list').empty();\n\n        const idArr = $('#provider_order_list').sortable('toArray');\n        const finalArr = [];\n        $.each(idArr, (key, val) => {\n            if ($('#enable_' + val).prop('checked')) {\n                finalArr.push(val);\n            }\n        });\n\n        if (finalArr.length > 0) {\n            $('<select>').prop('id', 'editAProvider').addClass('form-control input-sm').appendTo('#provider-list');\n            for (let i = 0, len = finalArr.length; i < len; i++) {\n                const provider = finalArr[i];\n                $('#editAProvider').append($('<option>').prop('value', provider).text($.trim($('#' + provider).text()).replace(/\\s\\*$/, '').replace(/\\s\\*\\*$/, '')));\n            }\n        } else {\n            document.getElementsByClassName('component-desc')[0].innerHTML = 'No providers available to configure.';\n        }\n\n        $(this).showHideProviders();\n    };\n\n    $(this).on('change', '.newznab_api_key', function() {\n        let providerId = $(this).prop('id');\n        providerId = providerId.substring(0, providerId.length - '_hash'.length);\n\n        const url = $('#' + providerId + '_url').val();\n        const cat = $('#' + providerId + '_cat').val();\n        const key = $(this).val();\n\n        $(this).updateProvider(providerId, url, key, cat);\n    });\n\n    $('#newznab_api_key,#newznab_url').on('change', function() {\n        const selectedProvider = $('#editANewznabProvider :selected').val();\n\n        if (selectedProvider === 'addNewznab') {\n            return;\n        }\n\n        const url = $('#newznab_url').val();\n        const key = $('#newznab_api_key').val();\n        const cat = $('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(',');\n\n        $(this).updateProvider(selectedProvider, url, key, cat);\n    });\n\n    $('#torrentrss_url,#torrentrss_cookies,#torrentrss_title_tag').on('change', function() {\n        const selectedProvider = $('#editATorrentRssProvider :selected').val();\n\n        if (selectedProvider === 'addTorrentRss') {\n            return;\n        }\n\n        const url = $('#torrentrss_url').val();\n        const cookies = $('#torrentrss_cookies').val();\n        const titleTag = $('#torrentrss_title_tag').val();\n\n        $(this).updateTorrentRssProvider(selectedProvider, url, cookies, titleTag);\n    });\n\n    $('body').on('change', '#editAProvider', function() {\n        $(this).showHideProviders();\n    });\n\n    $('#editANewznabProvider').on('change', function() {\n        $(this).populateNewznabSection();\n    });\n\n    $('#editATorrentRssProvider').on('change', function() {\n        $(this).populateTorrentRssSection();\n    });\n\n    $(this).on('click', '.provider_enabler', function() {\n        $(this).refreshProviderList();\n    });\n\n    $('#newznab_cat_update').on('click', function() {\n        // Maybe check if there is anything selected?\n        $('#newznab_cat option').each(function() {\n            $(this).remove();\n        });\n\n        const newOptions = [];\n\n        // When the update botton is clicked, loop through the capabilities list\n        // and copy the selected category id's to the category list on the right.\n        $('#newznab_cap option:selected').each(function() {\n            const selectedCat = $(this).val();\n            console.debug(selectedCat);\n            newOptions.push({\n                text: selectedCat,\n                value: selectedCat\n            });\n        });\n\n        $('#newznab_cat').replaceOptions(newOptions);\n\n        const selectedProvider = $('#editANewznabProvider :selected').val();\n        if (selectedProvider === 'addNewznab') {\n            return;\n        }\n\n        const url = $('#newznab_url').val();\n        const key = $('#newznab_api_key').val();\n        const cat = $('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(',');\n\n        $('#newznab_cat option:not([value])').remove();\n\n        $(this).updateProvider(selectedProvider, url, key, cat);\n    });\n\n    $('#newznab_add').on('click', () => {\n        const name = $.trim($('#newznab_name').val());\n        const url = $.trim($('#newznab_url').val());\n        const key = $.trim($('#newznab_api_key').val());\n        const cat = $.trim($('#newznab_cat option').map((i, opt) => $(opt).text()).toArray().join(','));\n\n        if (!name || !url || !key) {\n            return;\n        }\n\n        const params = { name };\n\n        $.getJSON('config/providers/canAddNewznabProvider', params, function(data) {\n            if (data.error !== undefined) {\n                alert(data.error); // eslint-disable-line no-alert\n                return;\n            }\n            $(this).addProvider(data.success, name, url, key, cat, 0);\n        });\n    });\n\n    $('.newznab_delete').on('click', function() {\n        const selectedProvider = $('#editANewznabProvider :selected').val();\n        $(this).deleteProvider(selectedProvider);\n    });\n\n    $('#torrentrss_add').on('click', () => {\n        const name = $('#torrentrss_name').val();\n        const url = $('#torrentrss_url').val();\n        const cookies = $('#torrentrss_cookies').val();\n        const titleTag = $('#torrentrss_title_tag').val();\n        const params = {\n            name,\n            url,\n            cookies,\n            title_tag: titleTag // eslint-disable-line camelcase\n        };\n\n        $.getJSON('config/providers/canAddTorrentRssProvider', params, function(data) {\n            if (data.error !== undefined) {\n                console.error(data.error);\n                return;\n            }\n\n            $(this).addTorrentRssProvider(data.success, name, url, cookies, titleTag);\n            $(this).refreshEditAProvider();\n        });\n    });\n\n    $('.torrentrss_delete').on('click', function() {\n        $(this).deleteTorrentRssProvider($('#editATorrentRssProvider :selected').val());\n        $(this).refreshEditAProvider();\n    });\n\n    $(this).on('change', '[class=\"providerDiv_tip\"] input', function() {\n        $('div .providerDiv [name=' + $(this).prop('name') + ']').replaceWith($(this).clone());\n        $('div .providerDiv [newznab_name=' + $(this).prop('id') + ']').replaceWith($(this).clone());\n    });\n\n    $(this).on('change', '[class=\"providerDiv_tip\"] select', function() {\n        $(this).find('option').each(function() {\n            if ($(this).is(':selected')) {\n                $(this).prop('defaultSelected', true);\n            } else {\n                $(this).prop('defaultSelected', false);\n            }\n        });\n        $('div .providerDiv [name=' + $(this).prop('name') + ']').empty().replaceWith($(this).clone());\n    });\n\n    $(this).on('change', '.enabler', function() {\n        if ($(this).is(':checked')) {\n            $('.content_' + $(this).prop('id')).each(function() {\n                $(this).show();\n            });\n        } else {\n            $('.content_' + $(this).prop('id')).each(function() {\n                $(this).hide();\n            });\n        }\n    });\n\n    $('.enabler').each(function() {\n        if ($(this).is(':checked')) {\n            $('.content_' + $(this).prop('id')).show();\n        } else {\n            $('.content_' + $(this).prop('id')).hide();\n        }\n    });\n\n    $.fn.makeTorrentOptionString = function(providerId) {\n        const seedRatio = $('.providerDiv_tip #' + providerId + '_seed_ratio').prop('value');\n        const seedTime = $('.providerDiv_tip #' + providerId + '_seed_time').prop('value');\n        const processMet = $('.providerDiv_tip #' + providerId + '_process_method').prop('value');\n        const optionString = $('.providerDiv_tip #' + providerId + '_option_string');\n\n        optionString.val([seedRatio, seedTime, processMet].join('|'));\n    };\n\n    $(this).on('change', '.seed_option', function() {\n        const providerId = $(this).prop('id').split('_')[0];\n        $(this).makeTorrentOptionString(providerId);\n    });\n\n    $.fn.replaceOptions = function(options) {\n        this.empty();\n\n        const self = this;\n\n        $.each(options, (index, option) => {\n            const $option = $('<option></option>').prop('value', option.value).text(option.text);\n            self.append($option);\n        });\n    };\n\n    // Initialization stuff\n    $.fn.newznabProvidersCapabilities = [];\n\n    $(this).showHideProviders();\n\n    $('#provider_order_list').sortable({\n        placeholder: 'ui-state-highlight',\n        update() {\n            $(this).refreshProviderList();\n        }\n    });\n\n    $('#provider_order_list').disableSelection();\n\n    if ($('#editANewznabProvider').length !== 0) {\n        $(this).populateNewznabSection();\n    }\n});\n"]}