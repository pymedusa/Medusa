# coding: utf-8

"""
Copyright 2015 SmartBear Software

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Ref: https://github.com/swagger-api/swagger-codegen
"""

from __future__ import absolute_import, unicode_literals

from pprint import pformat

from six import iteritems


class SeriesEpisodesSummary(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self):
        """
        SeriesEpisodesSummary - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'aired_seasons': 'list[text_type]',
            'aired_episodes': 'text_type',
            'dvd_seasons': 'list[text_type]',
            'dvd_episodes': 'text_type'
        }

        self.attribute_map = {
            'aired_seasons': 'airedSeasons',
            'aired_episodes': 'airedEpisodes',
            'dvd_seasons': 'dvdSeasons',
            'dvd_episodes': 'dvdEpisodes'
        }

        self._aired_seasons = None
        self._aired_episodes = None
        self._dvd_seasons = None
        self._dvd_episodes = None

    @property
    def aired_seasons(self):
        """
        Gets the aired_seasons of this SeriesEpisodesSummary.


        :return: The aired_seasons of this SeriesEpisodesSummary.
        :rtype: list[text_type]
        """
        return self._aired_seasons

    @aired_seasons.setter
    def aired_seasons(self, aired_seasons):
        """
        Sets the aired_seasons of this SeriesEpisodesSummary.


        :param aired_seasons: The aired_seasons of this SeriesEpisodesSummary.
        :type: list[text_type]
        """
        self._aired_seasons = aired_seasons

    @property
    def aired_episodes(self):
        """
        Gets the aired_episodes of this SeriesEpisodesSummary.
        Number of all aired episodes for this series

        :return: The aired_episodes of this SeriesEpisodesSummary.
        :rtype: text_type
        """
        return self._aired_episodes

    @aired_episodes.setter
    def aired_episodes(self, aired_episodes):
        """
        Sets the aired_episodes of this SeriesEpisodesSummary.
        Number of all aired episodes for this series

        :param aired_episodes: The aired_episodes of this SeriesEpisodesSummary.
        :type: text_type
        """
        self._aired_episodes = aired_episodes

    @property
    def dvd_seasons(self):
        """
        Gets the dvd_seasons of this SeriesEpisodesSummary.


        :return: The dvd_seasons of this SeriesEpisodesSummary.
        :rtype: list[text_type]
        """
        return self._dvd_seasons

    @dvd_seasons.setter
    def dvd_seasons(self, dvd_seasons):
        """
        Sets the dvd_seasons of this SeriesEpisodesSummary.


        :param dvd_seasons: The dvd_seasons of this SeriesEpisodesSummary.
        :type: list[text_type]
        """
        self._dvd_seasons = dvd_seasons

    @property
    def dvd_episodes(self):
        """
        Gets the dvd_episodes of this SeriesEpisodesSummary.
        Number of all dvd episodes for this series

        :return: The dvd_episodes of this SeriesEpisodesSummary.
        :rtype: text_type
        """
        return self._dvd_episodes

    @dvd_episodes.setter
    def dvd_episodes(self, dvd_episodes):
        """
        Sets the dvd_episodes of this SeriesEpisodesSummary.
        Number of all dvd episodes for this series

        :param dvd_episodes: The dvd_episodes of this SeriesEpisodesSummary.
        :type: text_type
        """
        self._dvd_episodes = dvd_episodes

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
