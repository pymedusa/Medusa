{"version":3,"names":[],"mappings":"","sources":["js/add-shows/add-existing-show.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nMEDUSA.addShows.addExistingShow = function () {\n    // Hide the black/whitelist, because it can only be used for a single anime show\n    $.updateBlackWhiteList(undefined);\n\n    $('#tableDiv').on('click', '#checkAll', function () {\n        const seasonCheck = this;\n        $('.dirCheck').each(function () {\n            this.checked = seasonCheck.checked;\n        });\n    });\n\n    $('#submitShowDirs').on('click', () => {\n        const dirArr = [];\n        $('.dirCheck').each(function () {\n            if (this.checked === true) {\n                const originalIndexer = $(this).attr('data-indexer');\n                let indexerId = '|' + $(this).attr('data-indexer-id');\n                const showName = $(this).attr('data-show-name');\n                const showDir = $(this).attr('data-show-dir');\n\n                const indexer = $(this).closest('tr').find('select').val();\n                if (originalIndexer !== indexer || originalIndexer === '0') {\n                    indexerId = '';\n                }\n                dirArr.push(encodeURIComponent(indexer + '|' + showDir + indexerId + '|' + showName));\n            }\n        });\n\n        if (dirArr.length === 0) {\n            return false;\n        }\n\n        window.location.href = $('base').attr('href') + 'addShows/addExistingShows?promptForSettings=' + ($('#promptForSettings').prop('checked') ? 'on' : 'off') + '&shows_to_add=' + dirArr.join('&shows_to_add=');\n    });\n\n    function loadContent() {\n        let url = '';\n        $('.dir_check').each((i, w) => {\n            if ($(w).is(':checked')) {\n                if (url.length !== 0) {\n                    url += '&';\n                }\n                url += 'rootDir=' + encodeURIComponent($(w).attr('id'));\n            }\n        });\n\n        $('#tableDiv').html('<img id=\"searchingAnim\" src=\"images/loading32.gif\" height=\"32\" width=\"32\" /> loading folders...');\n        $.get('addShows/massAddTable/', url, data => {\n            $('#tableDiv').html(data);\n            $('#addRootDirTable').tablesorter({\n                // SortList: [[1,0]],\n                widgets: ['zebra'],\n                headers: {\n                    0: { sorter: false }\n                }\n            });\n        });\n    }\n\n    let lastTxt = '';\n    // @TODO this needs a real name, for now this fixes the issue of the page not loading at all,\n    //       before I added this I couldn't get the directories to show in the table\n    const a = function () {\n        if (lastTxt === $('#rootDirText').val()) {\n            return false;\n        }\n        lastTxt = $('#rootDirText').val();\n        $('#rootDirStaticList').html('');\n        $('#rootDirs option').each((i, w) => {\n            $('#rootDirStaticList').append('<li class=\"ui-state-default ui-corner-all\"><input type=\"checkbox\" class=\"cb dir_check\" id=\"' + $(w).val() + '\" checked=checked> <label for=\"' + $(w).val() + '\"><b>' + $(w).val() + '</b></label></li>');\n        });\n        loadContent();\n    };\n\n    a();\n\n    $('#rootDirText').on('change', a);\n\n    $('#rootDirStaticList').on('click', '.dir_check', loadContent);\n\n    $('#tableDiv').on('click', '.showManage', event => {\n        event.preventDefault();\n        $('#tabs').tabs('option', 'active', 0);\n        $('html,body').animate({ scrollTop: 0 }, 1000);\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"add-existing-show.js"}