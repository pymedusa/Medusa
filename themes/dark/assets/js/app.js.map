{"version":3,"sources":["webpack:///./src/app.js"],"names":["__webpack_require__","r","__webpack_exports__","vue__WEBPACK_IMPORTED_MODULE_0__","vue_async_computed__WEBPACK_IMPORTED_MODULE_1__","vue_snotify__WEBPACK_IMPORTED_MODULE_2__","_global_vue_shim__WEBPACK_IMPORTED_MODULE_3__","_router__WEBPACK_IMPORTED_MODULE_4__","_store__WEBPACK_IMPORTED_MODULE_5__","_utils_core__WEBPACK_IMPORTED_MODULE_6__","Vue","config","devtools","performance","use","AsyncComputed","Snotify","registerGlobalComponents","app","name","router","store","data","globalLoading","pageComponent","mounted","isDevelopment","console","log","window","location","pathname","includes","$store","this","Promise","all","dispatch","username","then","_","event","CustomEvent","detail","main","dispatchEvent","catch","error","debug","alert","$mount"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,IAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,IASAU,IAAIC,OAAOC,UAAW,EACtBF,IAAIC,OAAOE,aAAc,EAGzBH,IAAII,IAAIC,KACRL,IAAII,IAAIE,KAGRC,cAEA,MAAMC,EAAM,IAAIR,IAAI,CAChBS,KAAM,MACNC,WACAC,UACAC,KAAI,KACO,CACHC,eAAe,EACfC,eAAe,IAGvBC,UAKI,GAJIC,KACAC,QAAQC,IAAI,iBAGXC,OAAOC,SAASC,SAASC,SAAS,UAAW,CAC9C,MAAMC,OAAEA,GAAWC,KACnBC,QAAQC,IAAI,CACRH,EAAOI,SAAS,QAAS,CAAEC,SAAUT,OAAOS,WAC5CL,EAAOI,SAAS,eACjBE,KAAK,EAAEC,EAAG7B,MACLe,KACAC,QAAQC,IAAI,eAGhB,MAAMa,EAAQ,IAAIC,YAAY,uBAAwB,CAAEC,OAAQhC,EAAOiC,OACvEf,OAAOgB,cAAcJ,KACtBK,MAAMC,IACLpB,QAAQqB,MAAMD,GACdE,MAAM,sCAInBC,OAAO,aAEKhC","file":"js/app.js","sourcesContent":["import Vue from 'vue';\nimport AsyncComputed from 'vue-async-computed';\nimport Snotify from 'vue-snotify';\n\nimport { registerGlobalComponents } from './global-vue-shim';\nimport router from './router';\nimport store from './store';\nimport { isDevelopment } from './utils/core';\n\nVue.config.devtools = true;\nVue.config.performance = true;\n\n// Register plugins\nVue.use(AsyncComputed);\nVue.use(Snotify);\n\n// @TODO: Remove this before v1.0.0\nregisterGlobalComponents();\n\nconst app = new Vue({\n    name: 'App',\n    router,\n    store,\n    data() {\n        return {\n            globalLoading: false,\n            pageComponent: false\n        };\n    },\n    mounted() {\n        if (isDevelopment) {\n            console.log('App Mounted!');\n        }\n\n        if (!window.location.pathname.includes('/login')) {\n            const { $store } = this;\n            Promise.all([\n                $store.dispatch('login', { username: window.username }),\n                $store.dispatch('getConfig')\n            ]).then(([_, config]) => {\n                if (isDevelopment) {\n                    console.log('App Loaded!');\n                }\n                // Legacy - send config.main to jQuery (received by index.js)\n                const event = new CustomEvent('medusa-config-loaded', { detail: config.main });\n                window.dispatchEvent(event);\n            }).catch(error => {\n                console.debug(error);\n                alert('Unable to connect to Medusa!'); // eslint-disable-line no-alert\n            });\n        }\n    }\n}).$mount('#vue-wrap');\n\nexport default app;\n"],"sourceRoot":""}