{"version":3,"names":[],"mappings":"","sources":["js/blackwhite.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nfunction generateBlackWhiteList() {\n    // eslint-disable-line no-unused-vars\n    var realvalues = [];\n\n    $('#white option').each(function (i, selected) {\n        realvalues[i] = $(selected).val();\n    });\n    $('#whitelist').val(realvalues.join(','));\n\n    realvalues = [];\n    $('#black option').each(function (i, selected) {\n        realvalues[i] = $(selected).val();\n    });\n    $('#blacklist').val(realvalues.join(','));\n}\n\nfunction updateBlackWhiteList(showName) {\n    // eslint-disable-line no-unused-vars\n    $('#pool').children().remove();\n\n    $('#blackwhitelist').show();\n    if (showName) {\n        $.getJSON('home/fetch_releasegroups', {\n            series_name: showName // eslint-disable-line camelcase\n        }, function (data) {\n            if (data.result === 'success') {\n                $.each(data.groups, function (i, group) {\n                    var option = $('<option>');\n                    option.prop('value', group.name);\n                    option.html(group.name + ' | ' + group.rating + ' | ' + group.range);\n                    option.appendTo('#pool');\n                });\n            }\n        });\n    }\n}\n\n$(document).ready(function () {\n    $('#removeW').on('click', function () {\n        !$('#white option:selected').remove().appendTo('#pool'); // eslint-disable-line no-unused-expressions\n    });\n\n    $('#addW').on('click', function () {\n        !$('#pool option:selected').remove().appendTo('#white'); // eslint-disable-line no-unused-expressions\n    });\n\n    $('#addB').on('click', function () {\n        !$('#pool option:selected').remove().appendTo('#black'); // eslint-disable-line no-unused-expressions\n    });\n\n    $('#removeP').on('click', function () {\n        !$('#pool option:selected').remove(); // eslint-disable-line no-unused-expressions\n    });\n\n    $('#removeB').on('click', function () {\n        !$('#black option:selected').remove().appendTo('#pool'); // eslint-disable-line no-unused-expressions\n    });\n\n    $('#addToWhite').on('click', function () {\n        var group = $('#addToPoolText').val();\n        if (group !== '') {\n            var option = $('<option>');\n            option.prop('value', group);\n            option.html(group);\n            option.appendTo('#white');\n            $('#addToPoolText').val('');\n        }\n    });\n\n    $('#addToBlack').on('click', function () {\n        var group = $('#addToPoolText').val();\n        if (group !== '') {\n            var option = $('<option>');\n            option.prop('value', group);\n            option.html(group);\n            option.appendTo('#black');\n            $('#addToPoolText').val('');\n        }\n    });\n});\n\n},{}]},{},[1]);\n"],"file":"blackwhite.js"}