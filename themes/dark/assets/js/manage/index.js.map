{"version":3,"names":[],"mappings":"","sources":["js/manage/index.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nMEDUSA.manage.index = function () {\n    $('.resetsorting').on('click', () => {\n        $('table').trigger('filterReset');\n    });\n\n    $('#massUpdateTable:has(tbody tr)').tablesorter({\n        sortList: [[1, 0]],\n        textExtraction: {\n            2(node) {\n                return $(node).find('span').text().toLowerCase();\n            }, // eslint-disable-line brace-style\n            3(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            4(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            5(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            6(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            7(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            8(node) {\n                return $(node).find('img').attr('alt');\n            }, // eslint-disable-line brace-style\n            9(node) {\n                return $(node).find('img').attr('alt');\n            } // eslint-disable-line brace-style\n        },\n        widgets: ['zebra', 'filter', 'columnSelector'],\n        headers: {\n            0: { sorter: false, filter: false },\n            1: { sorter: 'showNames' },\n            2: { sorter: 'quality' },\n            3: { sorter: 'sports' },\n            4: { sorter: 'scene' },\n            5: { sorter: 'anime' },\n            6: { sorter: 'flatfold' },\n            7: { sorter: 'paused' },\n            8: { sorter: 'subtitle' },\n            9: { sorter: 'default_ep_status' },\n            10: { sorter: 'status' },\n            11: { sorter: false },\n            12: { sorter: false },\n            13: { sorter: false },\n            14: { sorter: false },\n            15: { sorter: false },\n            16: { sorter: false }\n        },\n        widgetOptions: {\n            columnSelector_mediaquery: false // eslint-disable-line camelcase\n        }\n    });\n    $('#popover').popover({\n        placement: 'bottom',\n        html: true, // Required if content has HTML\n        content: '<div id=\"popover-target\"></div>'\n    }).on('shown.bs.popover', () => {\n        // Bootstrap popover event triggered when the popover opens\n        // call this function to copy the column selection code into the popover\n        $.tablesorter.columnSelector.attachTo($('#massUpdateTable'), '#popover-target');\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"index.js"}