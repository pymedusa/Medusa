/******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	function webpackJsonpCallback(data) {
/******/ 		var chunkIds = data[0];
/******/ 		var moreModules = data[1];
/******/ 		var executeModules = data[2];
/******/
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [];
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(data);
/******/
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/
/******/ 		// add entry modules from loaded chunk to deferred list
/******/ 		deferredModules.push.apply(deferredModules, executeModules || []);
/******/
/******/ 		// run deferred modules when all chunks ready
/******/ 		return checkDeferredModules();
/******/ 	};
/******/ 	function checkDeferredModules() {
/******/ 		var result;
/******/ 		for(var i = 0; i < deferredModules.length; i++) {
/******/ 			var deferredModule = deferredModules[i];
/******/ 			var fulfilled = true;
/******/ 			for(var j = 1; j < deferredModule.length; j++) {
/******/ 				var depId = deferredModule[j];
/******/ 				if(installedChunks[depId] !== 0) fulfilled = false;
/******/ 			}
/******/ 			if(fulfilled) {
/******/ 				deferredModules.splice(i--, 1);
/******/ 				result = __webpack_require__(__webpack_require__.s = deferredModule[0]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded and loading chunks
/******/ 	// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 	// Promise = chunk loading, 0 = chunk loaded
/******/ 	var installedChunks = {
/******/ 		"vendors": 0
/******/ 	};
/******/
/******/ 	var deferredModules = [];
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	var jsonpArray = window["webpackJsonp"] = window["webpackJsonp"] || [];
/******/ 	var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
/******/ 	jsonpArray.push = webpackJsonpCallback;
/******/ 	jsonpArray = jsonpArray.slice();
/******/ 	for(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);
/******/ 	var parentJsonpFunction = oldJsonpFunction;
/******/
/******/
/******/ 	// run deferred modules from other chunks
/******/ 	checkDeferredModules();
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack:///./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\n\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\n\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\n\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\n\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nvar btoa = typeof window !== 'undefined' && window.btoa && window.btoa.bind(window) || __webpack_require__(/*! ./../helpers/btoa */ \"./node_modules/axios/lib/helpers/btoa.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false; // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n\n    if (\"development\" !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n\n      request.onprogress = function handleProgress() {};\n\n      request.ontimeout = function handleTimeout() {};\n    } // HTTP basic authentication\n\n\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n    request.timeout = config.timeout; // Listen for ready state\n\n    request[loadEvent] = function handleLoad() {\n      if (!request || request.readyState !== 4 && !xDomain) {\n        return;\n      } // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n\n\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      } // Prepare the response\n\n\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n      settle(resolve, reject, response); // Clean up request\n\n      request = null;\n    }; // Handle low level network errors\n\n\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request)); // Clean up request\n\n      request = null;\n    }; // Handle timeout\n\n\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', request)); // Clean up request\n\n      request = null;\n    }; // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n\n\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\"); // Add xsrf header\n\n\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    } // Add headers to the request\n\n\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    } // Add withCredentials to request if needed\n\n\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    } // Add responseType to request if needed\n\n\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    } // Handle progress if needed\n\n\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    } // Not all browsers support upload events\n\n\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel); // Clean up request\n\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    } // Send the request\n\n\n    request.send(requestData);\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\n\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context);\n  return instance;\n} // Create the default instance to be exported\n\n\nvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Factory for creating new instances\n\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n}; // Expose Cancel & CancelToken\n\n\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\"); // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\nmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = axios;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\n\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\nmodule.exports = Cancel;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\n\n\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\n\n\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\n\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\n\n\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\n\n\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {\n    method: 'get'\n  }, this.defaults, config);\n  config.method = config.method.toLowerCase(); // Hook up interceptors middleware\n\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n}; // Provide aliases for supported request methods\n\n\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\nmodule.exports = Axios;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\n\n\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\n\n\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\n\n\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\n\n\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\n\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\n\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\n\n\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\n\n\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config); // Support baseURL config\n\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  } // Ensure headers exist\n\n\n  config.headers = config.headers || {}; // Transform request data\n\n  config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n  var adapter = config.adapter || defaults.adapter;\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config); // Transform response data\n\n    response.data = transformData(response.data, response.headers, config.transformResponse);\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config); // Transform response data\n\n      if (reason && reason.response) {\n        reason.response.data = transformData(reason.response.data, reason.response.headers, config.transformResponse);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\n\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\n\n\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus; // Note: status is not exposed by XDomainRequest\n\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response.request, response));\n  }\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\n\n\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n  return data;\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\n\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n\n    return data;\n  }],\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) {\n        /* Ignore */\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n  maxContentLength: -1,\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\nmodule.exports = defaults;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    return fn.apply(thisArg, args);\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/btoa.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/btoa.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(" // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\n\nE.prototype = new Error();\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n\n  for ( // initialize result and counter\n  var block, charCode, idx = 0, map = chars; // if the next str index does not exist:\n  //   change the mapping table to \"=\"\n  //   check if d has no fractional digits\n  str.charAt(idx | 0) || (map = '=', idx % 1); // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n\n    block = block << 8 | charCode;\n  }\n\n  return output;\n}\n\nmodule.exports = btoa;\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/btoa.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\n\n\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\n\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '') : baseURL;\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() : // Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\n\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  var msie = /(msie|trident)/i.test(navigator.userAgent);\n  var urlParsingNode = document.createElement('a');\n  var originURL;\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n\n  function resolveURL(url) {\n    var href = url;\n\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n\n  originURL = resolveURL(window.location.href);\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n\n  return function isURLSameOrigin(requestURL) {\n    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() : // Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\"); // Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\n\n\nvar ignoreDuplicateOf = ['age', 'authorization', 'content-length', 'content-type', 'etag', 'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since', 'last-modified', 'location', 'max-forwards', 'proxy-authorization', 'referer', 'retry-after', 'user-agent'];\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\n\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) {\n    return parsed;\n  }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n  return parsed;\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\");\n/*global toString:true*/\n// utils is a library of generic helper functions non-specific to axios\n\n\nvar toString = Object.prototype.toString;\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\n\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\n\n\nfunction isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n}\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\n\n\nfunction isArrayBufferView(val) {\n  var result;\n\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n  }\n\n  return result;\n}\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\n\n\nfunction isString(val) {\n  return typeof val === 'string';\n}\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\n\n\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\n\n\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\n\n\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\n\n\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\n\n\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\n\n\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\n\n\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\n\n\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\n\n\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\n\n\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\n\n\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\n\n\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  } // Force an array if not already something iterable\n\n\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\n\n\nfunction merge()\n/* obj1, obj2, obj3, ... */\n{\n  var result = {};\n\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n\n  return result;\n}\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\n\n\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n//# sourceURL=webpack:///./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/bootstrap/dist/css/bootstrap.min.css":
/*!***********************************************************!*\
  !*** ./node_modules/bootstrap/dist/css/bootstrap.min.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/bootstrap/dist/css/bootstrap.min.css?");

/***/ }),

/***/ "./node_modules/bootstrap/dist/js/npm.js":
/*!***********************************************!*\
  !*** ./node_modules/bootstrap/dist/js/npm.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// This file is autogenerated via the `commonjs` Grunt task. You can require() this file in a CommonJS environment.\n__webpack_require__(/*! ../../js/transition.js */ \"./node_modules/bootstrap/js/transition.js\");\n\n__webpack_require__(/*! ../../js/alert.js */ \"./node_modules/bootstrap/js/alert.js\");\n\n__webpack_require__(/*! ../../js/button.js */ \"./node_modules/bootstrap/js/button.js\");\n\n__webpack_require__(/*! ../../js/carousel.js */ \"./node_modules/bootstrap/js/carousel.js\");\n\n__webpack_require__(/*! ../../js/collapse.js */ \"./node_modules/bootstrap/js/collapse.js\");\n\n__webpack_require__(/*! ../../js/dropdown.js */ \"./node_modules/bootstrap/js/dropdown.js\");\n\n__webpack_require__(/*! ../../js/modal.js */ \"./node_modules/bootstrap/js/modal.js\");\n\n__webpack_require__(/*! ../../js/tooltip.js */ \"./node_modules/bootstrap/js/tooltip.js\");\n\n__webpack_require__(/*! ../../js/popover.js */ \"./node_modules/bootstrap/js/popover.js\");\n\n__webpack_require__(/*! ../../js/scrollspy.js */ \"./node_modules/bootstrap/js/scrollspy.js\");\n\n__webpack_require__(/*! ../../js/tab.js */ \"./node_modules/bootstrap/js/tab.js\");\n\n__webpack_require__(/*! ../../js/affix.js */ \"./node_modules/bootstrap/js/affix.js\");\n\n//# sourceURL=webpack:///./node_modules/bootstrap/dist/js/npm.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/affix.js":
/*!********************************************!*\
  !*** ./node_modules/bootstrap/js/affix.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: affix.js v3.3.7\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options);\n    this.$target = $(this.options.target).on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this)).on('click.bs.affix.data-api', $.proxy(this.checkPositionWithEventLoop, this));\n    this.$element = $(element);\n    this.affixed = null;\n    this.unpin = null;\n    this.pinnedOffset = null;\n    this.checkPosition();\n  };\n\n  Affix.VERSION = '3.3.7';\n  Affix.RESET = 'affix affix-top affix-bottom';\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  };\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop = this.$target.scrollTop();\n    var position = this.$element.offset();\n    var targetHeight = this.$target.height();\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false;\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return scrollTop + this.unpin <= position.top ? false : 'bottom';\n      return scrollTop + targetHeight <= scrollHeight - offsetBottom ? false : 'bottom';\n    }\n\n    var initializing = this.affixed == null;\n    var colliderTop = initializing ? scrollTop : position.top;\n    var colliderHeight = initializing ? targetHeight : height;\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top';\n    if (offsetBottom != null && colliderTop + colliderHeight >= scrollHeight - offsetBottom) return 'bottom';\n    return false;\n  };\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset;\n    this.$element.removeClass(Affix.RESET).addClass('affix');\n    var scrollTop = this.$target.scrollTop();\n    var position = this.$element.offset();\n    return this.pinnedOffset = position.top - scrollTop;\n  };\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1);\n  };\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return;\n    var height = this.$element.height();\n    var offset = this.options.offset;\n    var offsetTop = offset.top;\n    var offsetBottom = offset.bottom;\n    var scrollHeight = Math.max($(document).height(), $(document.body).height());\n    if (typeof offset != 'object') offsetBottom = offsetTop = offset;\n    if (typeof offsetTop == 'function') offsetTop = offset.top(this.$element);\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element);\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom);\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '');\n      var affixType = 'affix' + (affix ? '-' + affix : '');\n      var e = $.Event(affixType + '.bs.affix');\n      this.$element.trigger(e);\n      if (e.isDefaultPrevented()) return;\n      this.affixed = affix;\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null;\n      this.$element.removeClass(Affix.RESET).addClass(affixType).trigger(affixType.replace('affix', 'affixed') + '.bs.affix');\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      });\n    }\n  }; // AFFIX PLUGIN DEFINITION\n  // =======================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.affix');\n      var options = typeof option == 'object' && option;\n      if (!data) $this.data('bs.affix', data = new Affix(this, options));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.affix;\n  $.fn.affix = Plugin;\n  $.fn.affix.Constructor = Affix; // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old;\n    return this;\n  }; // AFFIX DATA-API\n  // ==============\n\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this);\n      var data = $spy.data();\n      data.offset = data.offset || {};\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom;\n      if (data.offsetTop != null) data.offset.top = data.offsetTop;\n      Plugin.call($spy, data);\n    });\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/affix.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/alert.js":
/*!********************************************!*\
  !*** ./node_modules/bootstrap/js/alert.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: alert.js v3.3.7\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]';\n\n  var Alert = function (el) {\n    $(el).on('click', dismiss, this.close);\n  };\n\n  Alert.VERSION = '3.3.7';\n  Alert.TRANSITION_DURATION = 150;\n\n  Alert.prototype.close = function (e) {\n    var $this = $(this);\n    var selector = $this.attr('data-target');\n\n    if (!selector) {\n      selector = $this.attr('href');\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n    }\n\n    var $parent = $(selector === '#' ? [] : selector);\n    if (e) e.preventDefault();\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert');\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'));\n    if (e.isDefaultPrevented()) return;\n    $parent.removeClass('in');\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove();\n    }\n\n    $.support.transition && $parent.hasClass('fade') ? $parent.one('bsTransitionEnd', removeElement).emulateTransitionEnd(Alert.TRANSITION_DURATION) : removeElement();\n  }; // ALERT PLUGIN DEFINITION\n  // =======================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.alert');\n      if (!data) $this.data('bs.alert', data = new Alert(this));\n      if (typeof option == 'string') data[option].call($this);\n    });\n  }\n\n  var old = $.fn.alert;\n  $.fn.alert = Plugin;\n  $.fn.alert.Constructor = Alert; // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old;\n    return this;\n  }; // ALERT DATA-API\n  // ==============\n\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close);\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/alert.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/button.js":
/*!*********************************************!*\
  !*** ./node_modules/bootstrap/js/button.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: button.js v3.3.7\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, Button.DEFAULTS, options);\n    this.isLoading = false;\n  };\n\n  Button.VERSION = '3.3.7';\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  };\n\n  Button.prototype.setState = function (state) {\n    var d = 'disabled';\n    var $el = this.$element;\n    var val = $el.is('input') ? 'val' : 'html';\n    var data = $el.data();\n    state += 'Text';\n    if (data.resetText == null) $el.data('resetText', $el[val]()); // push to event loop to allow forms to submit\n\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state]);\n\n      if (state == 'loadingText') {\n        this.isLoading = true;\n        $el.addClass(d).attr(d, d).prop(d, true);\n      } else if (this.isLoading) {\n        this.isLoading = false;\n        $el.removeClass(d).removeAttr(d).prop(d, false);\n      }\n    }, this), 0);\n  };\n\n  Button.prototype.toggle = function () {\n    var changed = true;\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]');\n\n    if ($parent.length) {\n      var $input = this.$element.find('input');\n\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false;\n        $parent.find('.active').removeClass('active');\n        this.$element.addClass('active');\n      } else if ($input.prop('type') == 'checkbox') {\n        if ($input.prop('checked') !== this.$element.hasClass('active')) changed = false;\n        this.$element.toggleClass('active');\n      }\n\n      $input.prop('checked', this.$element.hasClass('active'));\n      if (changed) $input.trigger('change');\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'));\n      this.$element.toggleClass('active');\n    }\n  }; // BUTTON PLUGIN DEFINITION\n  // ========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.button');\n      var options = typeof option == 'object' && option;\n      if (!data) $this.data('bs.button', data = new Button(this, options));\n      if (option == 'toggle') data.toggle();else if (option) data.setState(option);\n    });\n  }\n\n  var old = $.fn.button;\n  $.fn.button = Plugin;\n  $.fn.button.Constructor = Button; // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old;\n    return this;\n  }; // BUTTON DATA-API\n  // ===============\n\n\n  $(document).on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n    var $btn = $(e.target).closest('.btn');\n    Plugin.call($btn, 'toggle');\n\n    if (!$(e.target).is('input[type=\"radio\"], input[type=\"checkbox\"]')) {\n      // Prevent double click on radios, and the double selections (so cancellation) on checkboxes\n      e.preventDefault(); // The target component still receive the focus\n\n      if ($btn.is('input,button')) $btn.trigger('focus');else $btn.find('input:visible,button:visible').first().trigger('focus');\n    }\n  }).on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n    $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type));\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/button.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/carousel.js":
/*!***********************************************!*\
  !*** ./node_modules/bootstrap/js/carousel.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: carousel.js v3.3.7\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element = $(element);\n    this.$indicators = this.$element.find('.carousel-indicators');\n    this.options = options;\n    this.paused = null;\n    this.sliding = null;\n    this.interval = null;\n    this.$active = null;\n    this.$items = null;\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this));\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element.on('mouseenter.bs.carousel', $.proxy(this.pause, this)).on('mouseleave.bs.carousel', $.proxy(this.cycle, this));\n  };\n\n  Carousel.VERSION = '3.3.7';\n  Carousel.TRANSITION_DURATION = 600;\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  };\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return;\n\n    switch (e.which) {\n      case 37:\n        this.prev();\n        break;\n\n      case 39:\n        this.next();\n        break;\n\n      default:\n        return;\n    }\n\n    e.preventDefault();\n  };\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false);\n    this.interval && clearInterval(this.interval);\n    this.options.interval && !this.paused && (this.interval = setInterval($.proxy(this.next, this), this.options.interval));\n    return this;\n  };\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item');\n    return this.$items.index(item || this.$active);\n  };\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active);\n    var willWrap = direction == 'prev' && activeIndex === 0 || direction == 'next' && activeIndex == this.$items.length - 1;\n    if (willWrap && !this.options.wrap) return active;\n    var delta = direction == 'prev' ? -1 : 1;\n    var itemIndex = (activeIndex + delta) % this.$items.length;\n    return this.$items.eq(itemIndex);\n  };\n\n  Carousel.prototype.to = function (pos) {\n    var that = this;\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'));\n    if (pos > this.$items.length - 1 || pos < 0) return;\n    if (this.sliding) return this.$element.one('slid.bs.carousel', function () {\n      that.to(pos);\n    }); // yes, \"slid\"\n\n    if (activeIndex == pos) return this.pause().cycle();\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos));\n  };\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true);\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end);\n      this.cycle(true);\n    }\n\n    this.interval = clearInterval(this.interval);\n    return this;\n  };\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return;\n    return this.slide('next');\n  };\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return;\n    return this.slide('prev');\n  };\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active = this.$element.find('.item.active');\n    var $next = next || this.getItemForDirection(type, $active);\n    var isCycling = this.interval;\n    var direction = type == 'next' ? 'left' : 'right';\n    var that = this;\n    if ($next.hasClass('active')) return this.sliding = false;\n    var relatedTarget = $next[0];\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    });\n    this.$element.trigger(slideEvent);\n    if (slideEvent.isDefaultPrevented()) return;\n    this.sliding = true;\n    isCycling && this.pause();\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active');\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)]);\n      $nextIndicator && $nextIndicator.addClass('active');\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    }); // yes, \"slid\"\n\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type);\n      $next[0].offsetWidth; // force reflow\n\n      $active.addClass(direction);\n      $next.addClass(direction);\n      $active.one('bsTransitionEnd', function () {\n        $next.removeClass([type, direction].join(' ')).addClass('active');\n        $active.removeClass(['active', direction].join(' '));\n        that.sliding = false;\n        setTimeout(function () {\n          that.$element.trigger(slidEvent);\n        }, 0);\n      }).emulateTransitionEnd(Carousel.TRANSITION_DURATION);\n    } else {\n      $active.removeClass('active');\n      $next.addClass('active');\n      this.sliding = false;\n      this.$element.trigger(slidEvent);\n    }\n\n    isCycling && this.cycle();\n    return this;\n  }; // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.carousel');\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option);\n      var action = typeof option == 'string' ? option : options.slide;\n      if (!data) $this.data('bs.carousel', data = new Carousel(this, options));\n      if (typeof option == 'number') data.to(option);else if (action) data[action]();else if (options.interval) data.pause().cycle();\n    });\n  }\n\n  var old = $.fn.carousel;\n  $.fn.carousel = Plugin;\n  $.fn.carousel.Constructor = Carousel; // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old;\n    return this;\n  }; // CAROUSEL DATA-API\n  // =================\n\n\n  var clickHandler = function (e) {\n    var href;\n    var $this = $(this);\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')); // strip for ie7\n\n    if (!$target.hasClass('carousel')) return;\n    var options = $.extend({}, $target.data(), $this.data());\n    var slideIndex = $this.attr('data-slide-to');\n    if (slideIndex) options.interval = false;\n    Plugin.call($target, options);\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex);\n    }\n\n    e.preventDefault();\n  };\n\n  $(document).on('click.bs.carousel.data-api', '[data-slide]', clickHandler).on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler);\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this);\n      Plugin.call($carousel, $carousel.data());\n    });\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/carousel.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/collapse.js":
/*!***********************************************!*\
  !*** ./node_modules/bootstrap/js/collapse.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: collapse.js v3.3.7\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n/* jshint latedef: false */\n+function ($) {\n  'use strict'; // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element = $(element);\n    this.options = $.extend({}, Collapse.DEFAULTS, options);\n    this.$trigger = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' + '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]');\n    this.transitioning = null;\n\n    if (this.options.parent) {\n      this.$parent = this.getParent();\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger);\n    }\n\n    if (this.options.toggle) this.toggle();\n  };\n\n  Collapse.VERSION = '3.3.7';\n  Collapse.TRANSITION_DURATION = 350;\n  Collapse.DEFAULTS = {\n    toggle: true\n  };\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width');\n    return hasWidth ? 'width' : 'height';\n  };\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return;\n    var activesData;\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing');\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse');\n      if (activesData && activesData.transitioning) return;\n    }\n\n    var startEvent = $.Event('show.bs.collapse');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide');\n      activesData || actives.data('bs.collapse', null);\n    }\n\n    var dimension = this.dimension();\n    this.$element.removeClass('collapse').addClass('collapsing')[dimension](0).attr('aria-expanded', true);\n    this.$trigger.removeClass('collapsed').attr('aria-expanded', true);\n    this.transitioning = 1;\n\n    var complete = function () {\n      this.$element.removeClass('collapsing').addClass('collapse in')[dimension]('');\n      this.transitioning = 0;\n      this.$element.trigger('shown.bs.collapse');\n    };\n\n    if (!$.support.transition) return complete.call(this);\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'));\n    this.$element.one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n  };\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return;\n    var startEvent = $.Event('hide.bs.collapse');\n    this.$element.trigger(startEvent);\n    if (startEvent.isDefaultPrevented()) return;\n    var dimension = this.dimension();\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n    this.$element.addClass('collapsing').removeClass('collapse in').attr('aria-expanded', false);\n    this.$trigger.addClass('collapsed').attr('aria-expanded', false);\n    this.transitioning = 1;\n\n    var complete = function () {\n      this.transitioning = 0;\n      this.$element.removeClass('collapsing').addClass('collapse').trigger('hidden.bs.collapse');\n    };\n\n    if (!$.support.transition) return complete.call(this);\n    this.$element[dimension](0).one('bsTransitionEnd', $.proxy(complete, this)).emulateTransitionEnd(Collapse.TRANSITION_DURATION);\n  };\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']();\n  };\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent).find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]').each($.proxy(function (i, element) {\n      var $element = $(element);\n      this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element);\n    }, this)).end();\n  };\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in');\n    $element.attr('aria-expanded', isOpen);\n    $trigger.toggleClass('collapsed', !isOpen).attr('aria-expanded', isOpen);\n  };\n\n  function getTargetFromTrigger($trigger) {\n    var href;\n    var target = $trigger.attr('data-target') || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, ''); // strip for ie7\n\n    return $(target);\n  } // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.collapse');\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option);\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false;\n      if (!data) $this.data('bs.collapse', data = new Collapse(this, options));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.collapse;\n  $.fn.collapse = Plugin;\n  $.fn.collapse.Constructor = Collapse; // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old;\n    return this;\n  }; // COLLAPSE DATA-API\n  // =================\n\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this = $(this);\n    if (!$this.attr('data-target')) e.preventDefault();\n    var $target = getTargetFromTrigger($this);\n    var data = $target.data('bs.collapse');\n    var option = data ? 'toggle' : $this.data();\n    Plugin.call($target, option);\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/collapse.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/dropdown.js":
/*!***********************************************!*\
  !*** ./node_modules/bootstrap/js/dropdown.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: dropdown.js v3.3.7\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop';\n  var toggle = '[data-toggle=\"dropdown\"]';\n\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle);\n  };\n\n  Dropdown.VERSION = '3.3.7';\n\n  function getParent($this) {\n    var selector = $this.attr('data-target');\n\n    if (!selector) {\n      selector = $this.attr('href');\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n    }\n\n    var $parent = selector && $(selector);\n    return $parent && $parent.length ? $parent : $this.parent();\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return;\n    $(backdrop).remove();\n    $(toggle).each(function () {\n      var $this = $(this);\n      var $parent = getParent($this);\n      var relatedTarget = {\n        relatedTarget: this\n      };\n      if (!$parent.hasClass('open')) return;\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return;\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget));\n      if (e.isDefaultPrevented()) return;\n      $this.attr('aria-expanded', 'false');\n      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget));\n    });\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this);\n    if ($this.is('.disabled, :disabled')) return;\n    var $parent = getParent($this);\n    var isActive = $parent.hasClass('open');\n    clearMenus();\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div')).addClass('dropdown-backdrop').insertAfter($(this)).on('click', clearMenus);\n      }\n\n      var relatedTarget = {\n        relatedTarget: this\n      };\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget));\n      if (e.isDefaultPrevented()) return;\n      $this.trigger('focus').attr('aria-expanded', 'true');\n      $parent.toggleClass('open').trigger($.Event('shown.bs.dropdown', relatedTarget));\n    }\n\n    return false;\n  };\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return;\n    var $this = $(this);\n    e.preventDefault();\n    e.stopPropagation();\n    if ($this.is('.disabled, :disabled')) return;\n    var $parent = getParent($this);\n    var isActive = $parent.hasClass('open');\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus');\n      return $this.trigger('click');\n    }\n\n    var desc = ' li:not(.disabled):visible a';\n    var $items = $parent.find('.dropdown-menu' + desc);\n    if (!$items.length) return;\n    var index = $items.index(e.target);\n    if (e.which == 38 && index > 0) index--; // up\n\n    if (e.which == 40 && index < $items.length - 1) index++; // down\n\n    if (!~index) index = 0;\n    $items.eq(index).trigger('focus');\n  }; // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.dropdown');\n      if (!data) $this.data('bs.dropdown', data = new Dropdown(this));\n      if (typeof option == 'string') data[option].call($this);\n    });\n  }\n\n  var old = $.fn.dropdown;\n  $.fn.dropdown = Plugin;\n  $.fn.dropdown.Constructor = Dropdown; // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old;\n    return this;\n  }; // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n\n  $(document).on('click.bs.dropdown.data-api', clearMenus).on('click.bs.dropdown.data-api', '.dropdown form', function (e) {\n    e.stopPropagation();\n  }).on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle).on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown).on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown);\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/dropdown.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/modal.js":
/*!********************************************!*\
  !*** ./node_modules/bootstrap/js/modal.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: modal.js v3.3.7\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options = options;\n    this.$body = $(document.body);\n    this.$element = $(element);\n    this.$dialog = this.$element.find('.modal-dialog');\n    this.$backdrop = null;\n    this.isShown = null;\n    this.originalBodyPad = null;\n    this.scrollbarWidth = 0;\n    this.ignoreBackdropClick = false;\n\n    if (this.options.remote) {\n      this.$element.find('.modal-content').load(this.options.remote, $.proxy(function () {\n        this.$element.trigger('loaded.bs.modal');\n      }, this));\n    }\n  };\n\n  Modal.VERSION = '3.3.7';\n  Modal.TRANSITION_DURATION = 300;\n  Modal.BACKDROP_TRANSITION_DURATION = 150;\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  };\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget);\n  };\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this;\n    var e = $.Event('show.bs.modal', {\n      relatedTarget: _relatedTarget\n    });\n    this.$element.trigger(e);\n    if (this.isShown || e.isDefaultPrevented()) return;\n    this.isShown = true;\n    this.checkScrollbar();\n    this.setScrollbar();\n    this.$body.addClass('modal-open');\n    this.escape();\n    this.resize();\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this));\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true;\n      });\n    });\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade');\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body); // don't move modals dom position\n      }\n\n      that.$element.show().scrollTop(0);\n      that.adjustDialog();\n\n      if (transition) {\n        that.$element[0].offsetWidth; // force reflow\n      }\n\n      that.$element.addClass('in');\n      that.enforceFocus();\n      var e = $.Event('shown.bs.modal', {\n        relatedTarget: _relatedTarget\n      });\n      transition ? that.$dialog // wait for modal to slide in\n      .one('bsTransitionEnd', function () {\n        that.$element.trigger('focus').trigger(e);\n      }).emulateTransitionEnd(Modal.TRANSITION_DURATION) : that.$element.trigger('focus').trigger(e);\n    });\n  };\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault();\n    e = $.Event('hide.bs.modal');\n    this.$element.trigger(e);\n    if (!this.isShown || e.isDefaultPrevented()) return;\n    this.isShown = false;\n    this.escape();\n    this.resize();\n    $(document).off('focusin.bs.modal');\n    this.$element.removeClass('in').off('click.dismiss.bs.modal').off('mouseup.dismiss.bs.modal');\n    this.$dialog.off('mousedown.dismiss.bs.modal');\n    $.support.transition && this.$element.hasClass('fade') ? this.$element.one('bsTransitionEnd', $.proxy(this.hideModal, this)).emulateTransitionEnd(Modal.TRANSITION_DURATION) : this.hideModal();\n  };\n\n  Modal.prototype.enforceFocus = function () {\n    $(document).off('focusin.bs.modal') // guard against infinite focus loop\n    .on('focusin.bs.modal', $.proxy(function (e) {\n      if (document !== e.target && this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n        this.$element.trigger('focus');\n      }\n    }, this));\n  };\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide();\n      }, this));\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal');\n    }\n  };\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this));\n    } else {\n      $(window).off('resize.bs.modal');\n    }\n  };\n\n  Modal.prototype.hideModal = function () {\n    var that = this;\n    this.$element.hide();\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open');\n      that.resetAdjustments();\n      that.resetScrollbar();\n      that.$element.trigger('hidden.bs.modal');\n    });\n  };\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove();\n    this.$backdrop = null;\n  };\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this;\n    var animate = this.$element.hasClass('fade') ? 'fade' : '';\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate;\n      this.$backdrop = $(document.createElement('div')).addClass('modal-backdrop ' + animate).appendTo(this.$body);\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false;\n          return;\n        }\n\n        if (e.target !== e.currentTarget) return;\n        this.options.backdrop == 'static' ? this.$element[0].focus() : this.hide();\n      }, this));\n      if (doAnimate) this.$backdrop[0].offsetWidth; // force reflow\n\n      this.$backdrop.addClass('in');\n      if (!callback) return;\n      doAnimate ? this.$backdrop.one('bsTransitionEnd', callback).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callback();\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in');\n\n      var callbackRemove = function () {\n        that.removeBackdrop();\n        callback && callback();\n      };\n\n      $.support.transition && this.$element.hasClass('fade') ? this.$backdrop.one('bsTransitionEnd', callbackRemove).emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) : callbackRemove();\n    } else if (callback) {\n      callback();\n    }\n  }; // these following methods are used to handle overflowing modals\n\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog();\n  };\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight;\n    this.$element.css({\n      paddingLeft: !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    });\n  };\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    });\n  };\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth;\n\n    if (!fullWindowWidth) {\n      // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect();\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left);\n    }\n\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth;\n    this.scrollbarWidth = this.measureScrollbar();\n  };\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt(this.$body.css('padding-right') || 0, 10);\n    this.originalBodyPad = document.body.style.paddingRight || '';\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth);\n  };\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad);\n  };\n\n  Modal.prototype.measureScrollbar = function () {\n    // thx walsh\n    var scrollDiv = document.createElement('div');\n    scrollDiv.className = 'modal-scrollbar-measure';\n    this.$body.append(scrollDiv);\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this.$body[0].removeChild(scrollDiv);\n    return scrollbarWidth;\n  }; // MODAL PLUGIN DEFINITION\n  // =======================\n\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.modal');\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option);\n      if (!data) $this.data('bs.modal', data = new Modal(this, options));\n      if (typeof option == 'string') data[option](_relatedTarget);else if (options.show) data.show(_relatedTarget);\n    });\n  }\n\n  var old = $.fn.modal;\n  $.fn.modal = Plugin;\n  $.fn.modal.Constructor = Modal; // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old;\n    return this;\n  }; // MODAL DATA-API\n  // ==============\n\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this = $(this);\n    var href = $this.attr('href');\n    var $target = $($this.attr('data-target') || href && href.replace(/.*(?=#[^\\s]+$)/, '')); // strip for ie7\n\n    var option = $target.data('bs.modal') ? 'toggle' : $.extend({\n      remote: !/#/.test(href) && href\n    }, $target.data(), $this.data());\n    if ($this.is('a')) e.preventDefault();\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return; // only register focus restorer if modal will actually get shown\n\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus');\n      });\n    });\n    Plugin.call($target, option, this);\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/modal.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/popover.js":
/*!**********************************************!*\
  !*** ./node_modules/bootstrap/js/popover.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: popover.js v3.3.7\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options);\n  };\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js');\n  Popover.VERSION = '3.3.7';\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  }); // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype);\n  Popover.prototype.constructor = Popover;\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS;\n  };\n\n  Popover.prototype.setContent = function () {\n    var $tip = this.tip();\n    var title = this.getTitle();\n    var content = this.getContent();\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title);\n    $tip.find('.popover-content').children().detach().end()[// we use append for html objects to maintain js events\n    this.options.html ? typeof content == 'string' ? 'html' : 'append' : 'text'](content);\n    $tip.removeClass('fade top bottom left right in'); // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide();\n  };\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent();\n  };\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element;\n    var o = this.options;\n    return $e.attr('data-content') || (typeof o.content == 'function' ? o.content.call($e[0]) : o.content);\n  };\n\n  Popover.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find('.arrow');\n  }; // POPOVER PLUGIN DEFINITION\n  // =========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.popover');\n      var options = typeof option == 'object' && option;\n      if (!data && /destroy|hide/.test(option)) return;\n      if (!data) $this.data('bs.popover', data = new Popover(this, options));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.popover;\n  $.fn.popover = Plugin;\n  $.fn.popover.Constructor = Popover; // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old;\n    return this;\n  };\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/popover.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/scrollspy.js":
/*!************************************************!*\
  !*** ./node_modules/bootstrap/js/scrollspy.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.7\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body = $(document.body);\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element);\n    this.options = $.extend({}, ScrollSpy.DEFAULTS, options);\n    this.selector = (this.options.target || '') + ' .nav li > a';\n    this.offsets = [];\n    this.targets = [];\n    this.activeTarget = null;\n    this.scrollHeight = 0;\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this));\n    this.refresh();\n    this.process();\n  }\n\n  ScrollSpy.VERSION = '3.3.7';\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  };\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight);\n  };\n\n  ScrollSpy.prototype.refresh = function () {\n    var that = this;\n    var offsetMethod = 'offset';\n    var offsetBase = 0;\n    this.offsets = [];\n    this.targets = [];\n    this.scrollHeight = this.getScrollHeight();\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position';\n      offsetBase = this.$scrollElement.scrollTop();\n    }\n\n    this.$body.find(this.selector).map(function () {\n      var $el = $(this);\n      var href = $el.data('target') || $el.attr('href');\n      var $href = /^#./.test(href) && $(href);\n      return $href && $href.length && $href.is(':visible') && [[$href[offsetMethod]().top + offsetBase, href]] || null;\n    }).sort(function (a, b) {\n      return a[0] - b[0];\n    }).each(function () {\n      that.offsets.push(this[0]);\n      that.targets.push(this[1]);\n    });\n  };\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop = this.$scrollElement.scrollTop() + this.options.offset;\n    var scrollHeight = this.getScrollHeight();\n    var maxScroll = this.options.offset + scrollHeight - this.$scrollElement.height();\n    var offsets = this.offsets;\n    var targets = this.targets;\n    var activeTarget = this.activeTarget;\n    var i;\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh();\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i);\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null;\n      return this.clear();\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i] && scrollTop >= offsets[i] && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1]) && this.activate(targets[i]);\n    }\n  };\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target;\n    this.clear();\n    var selector = this.selector + '[data-target=\"' + target + '\"],' + this.selector + '[href=\"' + target + '\"]';\n    var active = $(selector).parents('li').addClass('active');\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active.closest('li.dropdown').addClass('active');\n    }\n\n    active.trigger('activate.bs.scrollspy');\n  };\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector).parentsUntil(this.options.target, '.active').removeClass('active');\n  }; // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.scrollspy');\n      var options = typeof option == 'object' && option;\n      if (!data) $this.data('bs.scrollspy', data = new ScrollSpy(this, options));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.scrollspy;\n  $.fn.scrollspy = Plugin;\n  $.fn.scrollspy.Constructor = ScrollSpy; // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old;\n    return this;\n  }; // SCROLLSPY DATA-API\n  // ==================\n\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this);\n      Plugin.call($spy, $spy.data());\n    });\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/scrollspy.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/tab.js":
/*!******************************************!*\
  !*** ./node_modules/bootstrap/js/tab.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: tab.js v3.3.7\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element); // jscs:enable requireDollarBeforejQueryAssignment\n  };\n\n  Tab.VERSION = '3.3.7';\n  Tab.TRANSITION_DURATION = 150;\n\n  Tab.prototype.show = function () {\n    var $this = this.element;\n    var $ul = $this.closest('ul:not(.dropdown-menu)');\n    var selector = $this.data('target');\n\n    if (!selector) {\n      selector = $this.attr('href');\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, ''); // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return;\n    var $previous = $ul.find('.active:last a');\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    });\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    });\n    $previous.trigger(hideEvent);\n    $this.trigger(showEvent);\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return;\n    var $target = $(selector);\n    this.activate($this.closest('li'), $ul);\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      });\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      });\n    });\n  };\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active = container.find('> .active');\n    var transition = callback && $.support.transition && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length);\n\n    function next() {\n      $active.removeClass('active').find('> .dropdown-menu > .active').removeClass('active').end().find('[data-toggle=\"tab\"]').attr('aria-expanded', false);\n      element.addClass('active').find('[data-toggle=\"tab\"]').attr('aria-expanded', true);\n\n      if (transition) {\n        element[0].offsetWidth; // reflow for transition\n\n        element.addClass('in');\n      } else {\n        element.removeClass('fade');\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element.closest('li.dropdown').addClass('active').end().find('[data-toggle=\"tab\"]').attr('aria-expanded', true);\n      }\n\n      callback && callback();\n    }\n\n    $active.length && transition ? $active.one('bsTransitionEnd', next).emulateTransitionEnd(Tab.TRANSITION_DURATION) : next();\n    $active.removeClass('in');\n  }; // TAB PLUGIN DEFINITION\n  // =====================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.tab');\n      if (!data) $this.data('bs.tab', data = new Tab(this));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.tab;\n  $.fn.tab = Plugin;\n  $.fn.tab.Constructor = Tab; // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old;\n    return this;\n  }; // TAB DATA-API\n  // ============\n\n\n  var clickHandler = function (e) {\n    e.preventDefault();\n    Plugin.call($(this), 'show');\n  };\n\n  $(document).on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler).on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler);\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/tab.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/tooltip.js":
/*!**********************************************!*\
  !*** ./node_modules/bootstrap/js/tooltip.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: tooltip.js v3.3.7\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type = null;\n    this.options = null;\n    this.enabled = null;\n    this.timeout = null;\n    this.hoverState = null;\n    this.$element = null;\n    this.inState = null;\n    this.init('tooltip', element, options);\n  };\n\n  Tooltip.VERSION = '3.3.7';\n  Tooltip.TRANSITION_DURATION = 150;\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  };\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled = true;\n    this.type = type;\n    this.$element = $(element);\n    this.options = this.getOptions(options);\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : this.options.viewport.selector || this.options.viewport);\n    this.inState = {\n      click: false,\n      hover: false,\n      focus: false\n    };\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!');\n    }\n\n    var triggers = this.options.trigger.split(' ');\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i];\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this));\n      } else if (trigger != 'manual') {\n        var eventIn = trigger == 'hover' ? 'mouseenter' : 'focusin';\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout';\n        this.$element.on(eventIn + '.' + this.type, this.options.selector, $.proxy(this.enter, this));\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this));\n      }\n    }\n\n    this.options.selector ? this._options = $.extend({}, this.options, {\n      trigger: 'manual',\n      selector: ''\n    }) : this.fixTitle();\n  };\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS;\n  };\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options);\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      };\n    }\n\n    return options;\n  };\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options = {};\n    var defaults = this.getDefaults();\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value;\n    });\n    return options;\n  };\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n      $(obj.currentTarget).data('bs.' + this.type, self);\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true;\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in';\n      return;\n    }\n\n    clearTimeout(self.timeout);\n    self.hoverState = 'in';\n    if (!self.options.delay || !self.options.delay.show) return self.show();\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show();\n    }, self.options.delay.show);\n  };\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true;\n    }\n\n    return false;\n  };\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ? obj : $(obj.currentTarget).data('bs.' + this.type);\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions());\n      $(obj.currentTarget).data('bs.' + this.type, self);\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false;\n    }\n\n    if (self.isInStateTrue()) return;\n    clearTimeout(self.timeout);\n    self.hoverState = 'out';\n    if (!self.options.delay || !self.options.delay.hide) return self.hide();\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide();\n    }, self.options.delay.hide);\n  };\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type);\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e);\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0]);\n      if (e.isDefaultPrevented() || !inDom) return;\n      var that = this;\n      var $tip = this.tip();\n      var tipId = this.getUID(this.type);\n      this.setContent();\n      $tip.attr('id', tipId);\n      this.$element.attr('aria-describedby', tipId);\n      if (this.options.animation) $tip.addClass('fade');\n      var placement = typeof this.options.placement == 'function' ? this.options.placement.call(this, $tip[0], this.$element[0]) : this.options.placement;\n      var autoToken = /\\s?auto?\\s?/i;\n      var autoPlace = autoToken.test(placement);\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top';\n      $tip.detach().css({\n        top: 0,\n        left: 0,\n        display: 'block'\n      }).addClass(placement).data('bs.' + this.type, this);\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element);\n      this.$element.trigger('inserted.bs.' + this.type);\n      var pos = this.getPosition();\n      var actualWidth = $tip[0].offsetWidth;\n      var actualHeight = $tip[0].offsetHeight;\n\n      if (autoPlace) {\n        var orgPlacement = placement;\n        var viewportDim = this.getPosition(this.$viewport);\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top' : placement == 'top' && pos.top - actualHeight < viewportDim.top ? 'bottom' : placement == 'right' && pos.right + actualWidth > viewportDim.width ? 'left' : placement == 'left' && pos.left - actualWidth < viewportDim.left ? 'right' : placement;\n        $tip.removeClass(orgPlacement).addClass(placement);\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight);\n      this.applyPlacement(calculatedOffset, placement);\n\n      var complete = function () {\n        var prevHoverState = that.hoverState;\n        that.$element.trigger('shown.bs.' + that.type);\n        that.hoverState = null;\n        if (prevHoverState == 'out') that.leave(that);\n      };\n\n      $.support.transition && this.$tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();\n    }\n  };\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip = this.tip();\n    var width = $tip[0].offsetWidth;\n    var height = $tip[0].offsetHeight; // manually read margins because getBoundingClientRect includes difference\n\n    var marginTop = parseInt($tip.css('margin-top'), 10);\n    var marginLeft = parseInt($tip.css('margin-left'), 10); // we must check for NaN for ie 8/9\n\n    if (isNaN(marginTop)) marginTop = 0;\n    if (isNaN(marginLeft)) marginLeft = 0;\n    offset.top += marginTop;\n    offset.left += marginLeft; // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        });\n      }\n    }, offset), 0);\n    $tip.addClass('in'); // check to see if placing tip in new offset caused the tip to resize itself\n\n    var actualWidth = $tip[0].offsetWidth;\n    var actualHeight = $tip[0].offsetHeight;\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight;\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight);\n    if (delta.left) offset.left += delta.left;else offset.top += delta.top;\n    var isVertical = /top|bottom/.test(placement);\n    var arrowDelta = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight;\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight';\n    $tip.offset(offset);\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical);\n  };\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow().css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%').css(isVertical ? 'top' : 'left', '');\n  };\n\n  Tooltip.prototype.setContent = function () {\n    var $tip = this.tip();\n    var title = this.getTitle();\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title);\n    $tip.removeClass('fade in top bottom left right');\n  };\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this;\n    var $tip = $(this.$tip);\n    var e = $.Event('hide.bs.' + this.type);\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach();\n\n      if (that.$element) {\n        // TODO: Check whether guarding this code with this `if` is really necessary.\n        that.$element.removeAttr('aria-describedby').trigger('hidden.bs.' + that.type);\n      }\n\n      callback && callback();\n    }\n\n    this.$element.trigger(e);\n    if (e.isDefaultPrevented()) return;\n    $tip.removeClass('in');\n    $.support.transition && $tip.hasClass('fade') ? $tip.one('bsTransitionEnd', complete).emulateTransitionEnd(Tooltip.TRANSITION_DURATION) : complete();\n    this.hoverState = null;\n    return this;\n  };\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element;\n\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '');\n    }\n  };\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle();\n  };\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element = $element || this.$element;\n    var el = $element[0];\n    var isBody = el.tagName == 'BODY';\n    var elRect = el.getBoundingClientRect();\n\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, {\n        width: elRect.right - elRect.left,\n        height: elRect.bottom - elRect.top\n      });\n    }\n\n    var isSvg = window.SVGElement && el instanceof window.SVGElement; // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n    // See https://github.com/twbs/bootstrap/issues/20280\n\n    var elOffset = isBody ? {\n      top: 0,\n      left: 0\n    } : isSvg ? null : $element.offset();\n    var scroll = {\n      scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop()\n    };\n    var outerDims = isBody ? {\n      width: $(window).width(),\n      height: $(window).height()\n    } : null;\n    return $.extend({}, elRect, scroll, outerDims, elOffset);\n  };\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? {\n      top: pos.top + pos.height,\n      left: pos.left + pos.width / 2 - actualWidth / 2\n    } : placement == 'top' ? {\n      top: pos.top - actualHeight,\n      left: pos.left + pos.width / 2 - actualWidth / 2\n    } : placement == 'left' ? {\n      top: pos.top + pos.height / 2 - actualHeight / 2,\n      left: pos.left - actualWidth\n    } :\n    /* placement == 'right' */\n    {\n      top: pos.top + pos.height / 2 - actualHeight / 2,\n      left: pos.left + pos.width\n    };\n  };\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = {\n      top: 0,\n      left: 0\n    };\n    if (!this.$viewport) return delta;\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0;\n    var viewportDimensions = this.getPosition(this.$viewport);\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset = pos.top - viewportPadding - viewportDimensions.scroll;\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight;\n\n      if (topEdgeOffset < viewportDimensions.top) {\n        // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset;\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) {\n        // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset;\n      }\n    } else {\n      var leftEdgeOffset = pos.left - viewportPadding;\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth;\n\n      if (leftEdgeOffset < viewportDimensions.left) {\n        // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset;\n      } else if (rightEdgeOffset > viewportDimensions.right) {\n        // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset;\n      }\n    }\n\n    return delta;\n  };\n\n  Tooltip.prototype.getTitle = function () {\n    var title;\n    var $e = this.$element;\n    var o = this.options;\n    title = $e.attr('data-original-title') || (typeof o.title == 'function' ? o.title.call($e[0]) : o.title);\n    return title;\n  };\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000); while (document.getElementById(prefix));\n\n    return prefix;\n  };\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template);\n\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!');\n      }\n    }\n\n    return this.$tip;\n  };\n\n  Tooltip.prototype.arrow = function () {\n    return this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow');\n  };\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true;\n  };\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false;\n  };\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled;\n  };\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this;\n\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type);\n\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions());\n        $(e.currentTarget).data('bs.' + this.type, self);\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click;\n      if (self.isInStateTrue()) self.enter(self);else self.leave(self);\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self);\n    }\n  };\n\n  Tooltip.prototype.destroy = function () {\n    var that = this;\n    clearTimeout(this.timeout);\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type);\n\n      if (that.$tip) {\n        that.$tip.detach();\n      }\n\n      that.$tip = null;\n      that.$arrow = null;\n      that.$viewport = null;\n      that.$element = null;\n    });\n  }; // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data = $this.data('bs.tooltip');\n      var options = typeof option == 'object' && option;\n      if (!data && /destroy|hide/.test(option)) return;\n      if (!data) $this.data('bs.tooltip', data = new Tooltip(this, options));\n      if (typeof option == 'string') data[option]();\n    });\n  }\n\n  var old = $.fn.tooltip;\n  $.fn.tooltip = Plugin;\n  $.fn.tooltip.Constructor = Tooltip; // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old;\n    return this;\n  };\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/tooltip.js?");

/***/ }),

/***/ "./node_modules/bootstrap/js/transition.js":
/*!*************************************************!*\
  !*** ./node_modules/bootstrap/js/transition.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(jQuery) {/* ========================================================================\n * Bootstrap: transition.js v3.3.7\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2016 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n+function ($) {\n  'use strict'; // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap');\n    var transEndEventNames = {\n      WebkitTransition: 'webkitTransitionEnd',\n      MozTransition: 'transitionend',\n      OTransition: 'oTransitionEnd otransitionend',\n      transition: 'transitionend'\n    };\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return {\n          end: transEndEventNames[name]\n        };\n      }\n    }\n\n    return false; // explicit for ie8 (  ._.)\n  } // http://blog.alexmaccaw.com/css-transitions\n\n\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false;\n    var $el = this;\n    $(this).one('bsTransitionEnd', function () {\n      called = true;\n    });\n\n    var callback = function () {\n      if (!called) $($el).trigger($.support.transition.end);\n    };\n\n    setTimeout(callback, duration);\n    return this;\n  };\n\n  $(function () {\n    $.support.transition = transitionEnd();\n    if (!$.support.transition) return;\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments);\n      }\n    };\n  });\n}(jQuery);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")))\n\n//# sourceURL=webpack:///./node_modules/bootstrap/js/transition.js?");

/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \" + item[2] + \"{\" + content + \"}\";\n      } else {\n        return content;\n      }\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n      if (typeof id === \"number\") alreadyImportedModules[id] = true;\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      //  when a module is imported multiple times with different media queries.\n      //  I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/lib/css-base.js?");

/***/ }),

/***/ "./node_modules/date-fns/difference_in_calendar_days/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/date-fns/difference_in_calendar_days/index.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfDay = __webpack_require__(/*! ../start_of_day/index.js */ \"./node_modules/date-fns/start_of_day/index.js\");\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates.\n *\n * @param {Date|String|Number} dateLeft - the later date\n * @param {Date|String|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n */\n\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n  var timestampRight = startOfDayRight.getTime() - startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE; // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nmodule.exports = differenceInCalendarDays;\n\n//# sourceURL=webpack:///./node_modules/date-fns/difference_in_calendar_days/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/format/index.js":
/*!***********************************************!*\
  !*** ./node_modules/date-fns/format/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getDayOfYear = __webpack_require__(/*! ../get_day_of_year/index.js */ \"./node_modules/date-fns/get_day_of_year/index.js\");\n\nvar getISOWeek = __webpack_require__(/*! ../get_iso_week/index.js */ \"./node_modules/date-fns/get_iso_week/index.js\");\n\nvar getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\");\n\nvar parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n\nvar isValid = __webpack_require__(/*! ../is_valid/index.js */ \"./node_modules/date-fns/is_valid/index.js\");\n\nvar enLocale = __webpack_require__(/*! ../locale/en/index.js */ \"./node_modules/date-fns/locale/en/index.js\");\n/**\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format.\n *\n * Accepted tokens:\n * | Unit                    | Token | Result examples                  |\n * |-------------------------|-------|----------------------------------|\n * | Month                   | M     | 1, 2, ..., 12                    |\n * |                         | Mo    | 1st, 2nd, ..., 12th              |\n * |                         | MM    | 01, 02, ..., 12                  |\n * |                         | MMM   | Jan, Feb, ..., Dec               |\n * |                         | MMMM  | January, February, ..., December |\n * | Quarter                 | Q     | 1, 2, 3, 4                       |\n * |                         | Qo    | 1st, 2nd, 3rd, 4th               |\n * | Day of month            | D     | 1, 2, ..., 31                    |\n * |                         | Do    | 1st, 2nd, ..., 31st              |\n * |                         | DD    | 01, 02, ..., 31                  |\n * | Day of year             | DDD   | 1, 2, ..., 366                   |\n * |                         | DDDo  | 1st, 2nd, ..., 366th             |\n * |                         | DDDD  | 001, 002, ..., 366               |\n * | Day of week             | d     | 0, 1, ..., 6                     |\n * |                         | do    | 0th, 1st, ..., 6th               |\n * |                         | dd    | Su, Mo, ..., Sa                  |\n * |                         | ddd   | Sun, Mon, ..., Sat               |\n * |                         | dddd  | Sunday, Monday, ..., Saturday    |\n * | Day of ISO week         | E     | 1, 2, ..., 7                     |\n * | ISO week                | W     | 1, 2, ..., 53                    |\n * |                         | Wo    | 1st, 2nd, ..., 53rd              |\n * |                         | WW    | 01, 02, ..., 53                  |\n * | Year                    | YY    | 00, 01, ..., 99                  |\n * |                         | YYYY  | 1900, 1901, ..., 2099            |\n * | ISO week-numbering year | GG    | 00, 01, ..., 99                  |\n * |                         | GGGG  | 1900, 1901, ..., 2099            |\n * | AM/PM                   | A     | AM, PM                           |\n * |                         | a     | am, pm                           |\n * |                         | aa    | a.m., p.m.                       |\n * | Hour                    | H     | 0, 1, ... 23                     |\n * |                         | HH    | 00, 01, ... 23                   |\n * |                         | h     | 1, 2, ..., 12                    |\n * |                         | hh    | 01, 02, ..., 12                  |\n * | Minute                  | m     | 0, 1, ..., 59                    |\n * |                         | mm    | 00, 01, ..., 59                  |\n * | Second                  | s     | 0, 1, ..., 59                    |\n * |                         | ss    | 00, 01, ..., 59                  |\n * | 1/10 of second          | S     | 0, 1, ..., 9                     |\n * | 1/100 of second         | SS    | 00, 01, ..., 99                  |\n * | Millisecond             | SSS   | 000, 001, ..., 999               |\n * | Timezone                | Z     | -01:00, +00:00, ... +12:00       |\n * |                         | ZZ    | -0100, +0000, ..., +1200         |\n * | Seconds timestamp       | X     | 512969520                        |\n * | Milliseconds timestamp  | x     | 512969520900                     |\n *\n * The characters wrapped in square brackets are escaped.\n *\n * The result may vary by locale.\n *\n * @param {Date|String|Number} date - the original date\n * @param {String} [format='YYYY-MM-DDTHH:mm:ss.SSSZ'] - the string of tokens\n * @param {Object} [options] - the object with options\n * @param {Object} [options.locale=enLocale] - the locale object\n * @returns {String} the formatted date string\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(\n *   new Date(2014, 1, 11),\n *   'MM/DD/YYYY'\n * )\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * var eoLocale = require('date-fns/locale/eo')\n * var result = format(\n *   new Date(2014, 6, 2),\n *   'Do [de] MMMM YYYY',\n *   {locale: eoLocale}\n * )\n * //=> '2-a de julio 2014'\n */\n\n\nfunction format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  var formatStr = dirtyFormatStr ? String(dirtyFormatStr) : 'YYYY-MM-DDTHH:mm:ss.SSSZ';\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFormatters = enLocale.format.formatters;\n  var formattingTokensRegExp = enLocale.format.formattingTokensRegExp;\n\n  if (locale && locale.format && locale.format.formatters) {\n    localeFormatters = locale.format.formatters;\n\n    if (locale.format.formattingTokensRegExp) {\n      formattingTokensRegExp = locale.format.formattingTokensRegExp;\n    }\n  }\n\n  var date = parse(dirtyDate);\n\n  if (!isValid(date)) {\n    return 'Invalid Date';\n  }\n\n  var formatFn = buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp);\n  return formatFn(date);\n}\n\nvar formatters = {\n  // Month: 1, 2, ..., 12\n  'M': function (date) {\n    return date.getMonth() + 1;\n  },\n  // Month: 01, 02, ..., 12\n  'MM': function (date) {\n    return addLeadingZeros(date.getMonth() + 1, 2);\n  },\n  // Quarter: 1, 2, 3, 4\n  'Q': function (date) {\n    return Math.ceil((date.getMonth() + 1) / 3);\n  },\n  // Day of month: 1, 2, ..., 31\n  'D': function (date) {\n    return date.getDate();\n  },\n  // Day of month: 01, 02, ..., 31\n  'DD': function (date) {\n    return addLeadingZeros(date.getDate(), 2);\n  },\n  // Day of year: 1, 2, ..., 366\n  'DDD': function (date) {\n    return getDayOfYear(date);\n  },\n  // Day of year: 001, 002, ..., 366\n  'DDDD': function (date) {\n    return addLeadingZeros(getDayOfYear(date), 3);\n  },\n  // Day of week: 0, 1, ..., 6\n  'd': function (date) {\n    return date.getDay();\n  },\n  // Day of ISO week: 1, 2, ..., 7\n  'E': function (date) {\n    return date.getDay() || 7;\n  },\n  // ISO week: 1, 2, ..., 53\n  'W': function (date) {\n    return getISOWeek(date);\n  },\n  // ISO week: 01, 02, ..., 53\n  'WW': function (date) {\n    return addLeadingZeros(getISOWeek(date), 2);\n  },\n  // Year: 00, 01, ..., 99\n  'YY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4).substr(2);\n  },\n  // Year: 1900, 1901, ..., 2099\n  'YYYY': function (date) {\n    return addLeadingZeros(date.getFullYear(), 4);\n  },\n  // ISO week-numbering year: 00, 01, ..., 99\n  'GG': function (date) {\n    return String(getISOYear(date)).substr(2);\n  },\n  // ISO week-numbering year: 1900, 1901, ..., 2099\n  'GGGG': function (date) {\n    return getISOYear(date);\n  },\n  // Hour: 0, 1, ... 23\n  'H': function (date) {\n    return date.getHours();\n  },\n  // Hour: 00, 01, ..., 23\n  'HH': function (date) {\n    return addLeadingZeros(date.getHours(), 2);\n  },\n  // Hour: 1, 2, ..., 12\n  'h': function (date) {\n    var hours = date.getHours();\n\n    if (hours === 0) {\n      return 12;\n    } else if (hours > 12) {\n      return hours % 12;\n    } else {\n      return hours;\n    }\n  },\n  // Hour: 01, 02, ..., 12\n  'hh': function (date) {\n    return addLeadingZeros(formatters['h'](date), 2);\n  },\n  // Minute: 0, 1, ..., 59\n  'm': function (date) {\n    return date.getMinutes();\n  },\n  // Minute: 00, 01, ..., 59\n  'mm': function (date) {\n    return addLeadingZeros(date.getMinutes(), 2);\n  },\n  // Second: 0, 1, ..., 59\n  's': function (date) {\n    return date.getSeconds();\n  },\n  // Second: 00, 01, ..., 59\n  'ss': function (date) {\n    return addLeadingZeros(date.getSeconds(), 2);\n  },\n  // 1/10 of second: 0, 1, ..., 9\n  'S': function (date) {\n    return Math.floor(date.getMilliseconds() / 100);\n  },\n  // 1/100 of second: 00, 01, ..., 99\n  'SS': function (date) {\n    return addLeadingZeros(Math.floor(date.getMilliseconds() / 10), 2);\n  },\n  // Millisecond: 000, 001, ..., 999\n  'SSS': function (date) {\n    return addLeadingZeros(date.getMilliseconds(), 3);\n  },\n  // Timezone: -01:00, +00:00, ... +12:00\n  'Z': function (date) {\n    return formatTimezone(date.getTimezoneOffset(), ':');\n  },\n  // Timezone: -0100, +0000, ... +1200\n  'ZZ': function (date) {\n    return formatTimezone(date.getTimezoneOffset());\n  },\n  // Seconds timestamp: 512969520\n  'X': function (date) {\n    return Math.floor(date.getTime() / 1000);\n  },\n  // Milliseconds timestamp: 512969520900\n  'x': function (date) {\n    return date.getTime();\n  }\n};\n\nfunction buildFormatFn(formatStr, localeFormatters, formattingTokensRegExp) {\n  var array = formatStr.match(formattingTokensRegExp);\n  var length = array.length;\n  var i;\n  var formatter;\n\n  for (i = 0; i < length; i++) {\n    formatter = localeFormatters[array[i]] || formatters[array[i]];\n\n    if (formatter) {\n      array[i] = formatter;\n    } else {\n      array[i] = removeFormattingTokens(array[i]);\n    }\n  }\n\n  return function (date) {\n    var output = '';\n\n    for (var i = 0; i < length; i++) {\n      if (array[i] instanceof Function) {\n        output += array[i](date, formatters);\n      } else {\n        output += array[i];\n      }\n    }\n\n    return output;\n  };\n}\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n\nfunction formatTimezone(offset, delimeter) {\n  delimeter = delimeter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n  return sign + addLeadingZeros(hours, 2) + delimeter + addLeadingZeros(minutes, 2);\n}\n\nfunction addLeadingZeros(number, targetLength) {\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return output;\n}\n\nmodule.exports = format;\n\n//# sourceURL=webpack:///./node_modules/date-fns/format/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_day_of_year/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/get_day_of_year/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n\nvar startOfYear = __webpack_require__(/*! ../start_of_year/index.js */ \"./node_modules/date-fns/start_of_year/index.js\");\n\nvar differenceInCalendarDays = __webpack_require__(/*! ../difference_in_calendar_days/index.js */ \"./node_modules/date-fns/difference_in_calendar_days/index.js\");\n/**\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * var result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\n\n\nfunction getDayOfYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = differenceInCalendarDays(date, startOfYear(date));\n  var dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\nmodule.exports = getDayOfYear;\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_day_of_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_week/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/get_iso_week/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\");\n\nvar startOfISOYear = __webpack_require__(/*! ../start_of_iso_year/index.js */ \"./node_modules/date-fns/start_of_iso_year/index.js\");\n\nvar MILLISECONDS_IN_WEEK = 604800000;\n/**\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * var result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\n\nfunction getISOWeek(dirtyDate) {\n  var date = parse(dirtyDate);\n  var diff = startOfISOWeek(date).getTime() - startOfISOYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}\n\nmodule.exports = getISOWeek;\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/get_iso_year/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/get_iso_year/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\");\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * var result = getISOYear(new Date(2005, 0, 2))\n * //=> 2004\n */\n\n\nfunction getISOYear(dirtyDate) {\n  var date = parse(dirtyDate);\n  var year = date.getFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  var startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  var startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\nmodule.exports = getISOYear;\n\n//# sourceURL=webpack:///./node_modules/date-fns/get_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_date/index.js":
/*!************************************************!*\
  !*** ./node_modules/date-fns/is_date/index.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * @category Common Helpers\n * @summary Is the given argument an instance of Date?\n *\n * @description\n * Is the given argument an instance of Date?\n *\n * @param {*} argument - the argument to check\n * @returns {Boolean} the given argument is an instance of Date\n *\n * @example\n * // Is 'mayonnaise' a Date?\n * var result = isDate('mayonnaise')\n * //=> false\n */\nfunction isDate(argument) {\n  return argument instanceof Date;\n}\n\nmodule.exports = isDate;\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_date/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/is_valid/index.js":
/*!*************************************************!*\
  !*** ./node_modules/date-fns/is_valid/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isDate = __webpack_require__(/*! ../is_date/index.js */ \"./node_modules/date-fns/is_date/index.js\");\n/**\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param {Date} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} argument must be an instance of Date\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\n\nfunction isValid(dirtyDate) {\n  if (isDate(dirtyDate)) {\n    return !isNaN(dirtyDate);\n  } else {\n    throw new TypeError(toString.call(dirtyDate) + ' is not an instance of Date');\n  }\n}\n\nmodule.exports = isValid;\n\n//# sourceURL=webpack:///./node_modules/date-fns/is_valid/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var commonFormatterKeys = ['M', 'MM', 'Q', 'D', 'DD', 'DDD', 'DDDD', 'd', 'E', 'W', 'WW', 'YY', 'YYYY', 'GG', 'GGGG', 'H', 'HH', 'h', 'hh', 'm', 'mm', 's', 'ss', 'S', 'SS', 'SSS', 'Z', 'ZZ', 'X', 'x'];\n\nfunction buildFormattingTokensRegExp(formatters) {\n  var formatterKeys = [];\n\n  for (var key in formatters) {\n    if (formatters.hasOwnProperty(key)) {\n      formatterKeys.push(key);\n    }\n  }\n\n  var formattingTokens = commonFormatterKeys.concat(formatterKeys).sort().reverse();\n  var formattingTokensRegExp = new RegExp('(\\\\[[^\\\\[]*\\\\])|(\\\\\\\\)?' + '(' + formattingTokens.join('|') + '|.)', 'g');\n  return formattingTokensRegExp;\n}\n\nmodule.exports = buildFormattingTokensRegExp;\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function buildDistanceInWordsLocale() {\n  var distanceInWordsLocale = {\n    lessThanXSeconds: {\n      one: 'less than a second',\n      other: 'less than {{count}} seconds'\n    },\n    xSeconds: {\n      one: '1 second',\n      other: '{{count}} seconds'\n    },\n    halfAMinute: 'half a minute',\n    lessThanXMinutes: {\n      one: 'less than a minute',\n      other: 'less than {{count}} minutes'\n    },\n    xMinutes: {\n      one: '1 minute',\n      other: '{{count}} minutes'\n    },\n    aboutXHours: {\n      one: 'about 1 hour',\n      other: 'about {{count}} hours'\n    },\n    xHours: {\n      one: '1 hour',\n      other: '{{count}} hours'\n    },\n    xDays: {\n      one: '1 day',\n      other: '{{count}} days'\n    },\n    aboutXMonths: {\n      one: 'about 1 month',\n      other: 'about {{count}} months'\n    },\n    xMonths: {\n      one: '1 month',\n      other: '{{count}} months'\n    },\n    aboutXYears: {\n      one: 'about 1 year',\n      other: 'about {{count}} years'\n    },\n    xYears: {\n      one: '1 year',\n      other: '{{count}} years'\n    },\n    overXYears: {\n      one: 'over 1 year',\n      other: 'over {{count}} years'\n    },\n    almostXYears: {\n      one: 'almost 1 year',\n      other: 'almost {{count}} years'\n    }\n  };\n\n  function localize(token, count, options) {\n    options = options || {};\n    var result;\n\n    if (typeof distanceInWordsLocale[token] === 'string') {\n      result = distanceInWordsLocale[token];\n    } else if (count === 1) {\n      result = distanceInWordsLocale[token].one;\n    } else {\n      result = distanceInWordsLocale[token].other.replace('{{count}}', count);\n    }\n\n    if (options.addSuffix) {\n      if (options.comparison > 0) {\n        return 'in ' + result;\n      } else {\n        return result + ' ago';\n      }\n    }\n\n    return result;\n  }\n\n  return {\n    localize: localize\n  };\n}\n\nmodule.exports = buildDistanceInWordsLocale;\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/build_format_locale/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/date-fns/locale/en/build_format_locale/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var buildFormattingTokensRegExp = __webpack_require__(/*! ../../_lib/build_formatting_tokens_reg_exp/index.js */ \"./node_modules/date-fns/locale/_lib/build_formatting_tokens_reg_exp/index.js\");\n\nfunction buildFormatLocale() {\n  // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n  var months3char = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  var monthsFull = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  var weekdays2char = ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];\n  var weekdays3char = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  var weekdaysFull = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n  var meridiemUppercase = ['AM', 'PM'];\n  var meridiemLowercase = ['am', 'pm'];\n  var meridiemFull = ['a.m.', 'p.m.'];\n  var formatters = {\n    // Month: Jan, Feb, ..., Dec\n    'MMM': function (date) {\n      return months3char[date.getMonth()];\n    },\n    // Month: January, February, ..., December\n    'MMMM': function (date) {\n      return monthsFull[date.getMonth()];\n    },\n    // Day of week: Su, Mo, ..., Sa\n    'dd': function (date) {\n      return weekdays2char[date.getDay()];\n    },\n    // Day of week: Sun, Mon, ..., Sat\n    'ddd': function (date) {\n      return weekdays3char[date.getDay()];\n    },\n    // Day of week: Sunday, Monday, ..., Saturday\n    'dddd': function (date) {\n      return weekdaysFull[date.getDay()];\n    },\n    // AM, PM\n    'A': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemUppercase[1] : meridiemUppercase[0];\n    },\n    // am, pm\n    'a': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemLowercase[1] : meridiemLowercase[0];\n    },\n    // a.m., p.m.\n    'aa': function (date) {\n      return date.getHours() / 12 >= 1 ? meridiemFull[1] : meridiemFull[0];\n    } // Generate ordinal version of formatters: M -> Mo, D -> Do, etc.\n\n  };\n  var ordinalFormatters = ['M', 'D', 'DDD', 'd', 'Q', 'W'];\n  ordinalFormatters.forEach(function (formatterToken) {\n    formatters[formatterToken + 'o'] = function (date, formatters) {\n      return ordinal(formatters[formatterToken](date));\n    };\n  });\n  return {\n    formatters: formatters,\n    formattingTokensRegExp: buildFormattingTokensRegExp(formatters)\n  };\n}\n\nfunction ordinal(number) {\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nmodule.exports = buildFormatLocale;\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/build_format_locale/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/locale/en/index.js":
/*!**************************************************!*\
  !*** ./node_modules/date-fns/locale/en/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var buildDistanceInWordsLocale = __webpack_require__(/*! ./build_distance_in_words_locale/index.js */ \"./node_modules/date-fns/locale/en/build_distance_in_words_locale/index.js\");\n\nvar buildFormatLocale = __webpack_require__(/*! ./build_format_locale/index.js */ \"./node_modules/date-fns/locale/en/build_format_locale/index.js\");\n/**\n * @category Locales\n * @summary English locale.\n */\n\n\nmodule.exports = {\n  distanceInWords: buildDistanceInWordsLocale(),\n  format: buildFormatLocale()\n};\n\n//# sourceURL=webpack:///./node_modules/date-fns/locale/en/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/parse/index.js":
/*!**********************************************!*\
  !*** ./node_modules/date-fns/parse/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isDate = __webpack_require__(/*! ../is_date/index.js */ \"./node_modules/date-fns/is_date/index.js\");\n\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar DEFAULT_ADDITIONAL_DIGITS = 2;\nvar parseTokenDateTimeDelimeter = /[T ]/;\nvar parseTokenPlainTime = /:/; // year tokens\n\nvar parseTokenYY = /^(\\d{2})$/;\nvar parseTokensYYY = [/^([+-]\\d{2})$/, // 0 additional digits\n/^([+-]\\d{3})$/, // 1 additional digit\n/^([+-]\\d{4})$/ // 2 additional digits\n];\nvar parseTokenYYYY = /^(\\d{4})/;\nvar parseTokensYYYYY = [/^([+-]\\d{4})/, // 0 additional digits\n/^([+-]\\d{5})/, // 1 additional digit\n/^([+-]\\d{6})/ // 2 additional digits\n]; // date tokens\n\nvar parseTokenMM = /^-(\\d{2})$/;\nvar parseTokenDDD = /^-?(\\d{3})$/;\nvar parseTokenMMDD = /^-?(\\d{2})-?(\\d{2})$/;\nvar parseTokenWww = /^-?W(\\d{2})$/;\nvar parseTokenWwwD = /^-?W(\\d{2})-?(\\d{1})$/; // time tokens\n\nvar parseTokenHH = /^(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMM = /^(\\d{2}):?(\\d{2}([.,]\\d*)?)$/;\nvar parseTokenHHMMSS = /^(\\d{2}):?(\\d{2}):?(\\d{2}([.,]\\d*)?)$/; // timezone tokens\n\nvar parseTokenTimezone = /([Z+-].*)$/;\nvar parseTokenTimezoneZ = /^(Z)$/;\nvar parseTokenTimezoneHH = /^([+-])(\\d{2})$/;\nvar parseTokenTimezoneHHMM = /^([+-])(\\d{2}):?(\\d{2})$/;\n/**\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If an argument is a string, the function tries to parse it.\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If all above fails, the function passes the given argument to Date constructor.\n *\n * @param {Date|String|Number} argument - the value to convert\n * @param {Object} [options] - the object with options\n * @param {0 | 1 | 2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * var result = parse('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Parse string '+02014101',\n * // if the additional number of digits in the extended year format is 1:\n * var result = parse('+02014101', {additionalDigits: 1})\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nfunction parse(argument, dirtyOptions) {\n  if (isDate(argument)) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument !== 'string') {\n    return new Date(argument);\n  }\n\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits;\n\n  if (additionalDigits == null) {\n    additionalDigits = DEFAULT_ADDITIONAL_DIGITS;\n  } else {\n    additionalDigits = Number(additionalDigits);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n  var year = parseYearResult.year;\n  var restDateString = parseYearResult.restDateString;\n  var date = parseDate(restDateString, year);\n\n  if (date) {\n    var timestamp = date.getTime();\n    var time = 0;\n    var offset;\n\n    if (dateStrings.time) {\n      time = parseTime(dateStrings.time);\n    }\n\n    if (dateStrings.timezone) {\n      offset = parseTimezone(dateStrings.timezone);\n    } else {\n      // get offset accurate to hour in timezones that change offset\n      offset = new Date(timestamp + time).getTimezoneOffset();\n      offset = new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE).getTimezoneOffset();\n    }\n\n    return new Date(timestamp + time + offset * MILLISECONDS_IN_MINUTE);\n  } else {\n    return new Date(argument);\n  }\n}\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(parseTokenDateTimeDelimeter);\n  var timeString;\n\n  if (parseTokenPlainTime.test(array[0])) {\n    dateStrings.date = null;\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n  }\n\n  if (timeString) {\n    var token = parseTokenTimezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var parseTokenYYY = parseTokensYYY[additionalDigits];\n  var parseTokenYYYYY = parseTokensYYYYY[additionalDigits];\n  var token; // YYYY or ±YYYYY\n\n  token = parseTokenYYYY.exec(dateString) || parseTokenYYYYY.exec(dateString);\n\n  if (token) {\n    var yearString = token[1];\n    return {\n      year: parseInt(yearString, 10),\n      restDateString: dateString.slice(yearString.length)\n    };\n  } // YY or ±YYY\n\n\n  token = parseTokenYY.exec(dateString) || parseTokenYYY.exec(dateString);\n\n  if (token) {\n    var centuryString = token[1];\n    return {\n      year: parseInt(centuryString, 10) * 100,\n      restDateString: dateString.slice(centuryString.length)\n    };\n  } // Invalid ISO-formatted year\n\n\n  return {\n    year: null\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) {\n    return null;\n  }\n\n  var token;\n  var date;\n  var month;\n  var week; // YYYY\n\n  if (dateString.length === 0) {\n    date = new Date(0);\n    date.setUTCFullYear(year);\n    return date;\n  } // YYYY-MM\n\n\n  token = parseTokenMM.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    date.setUTCFullYear(year, month);\n    return date;\n  } // YYYY-DDD or YYYYDDD\n\n\n  token = parseTokenDDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    var dayOfYear = parseInt(token[1], 10);\n    date.setUTCFullYear(year, 0, dayOfYear);\n    return date;\n  } // YYYY-MM-DD or YYYYMMDD\n\n\n  token = parseTokenMMDD.exec(dateString);\n\n  if (token) {\n    date = new Date(0);\n    month = parseInt(token[1], 10) - 1;\n    var day = parseInt(token[2], 10);\n    date.setUTCFullYear(year, month, day);\n    return date;\n  } // YYYY-Www or YYYYWww\n\n\n  token = parseTokenWww.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    return dayOfISOYear(year, week);\n  } // YYYY-Www-D or YYYYWwwD\n\n\n  token = parseTokenWwwD.exec(dateString);\n\n  if (token) {\n    week = parseInt(token[1], 10) - 1;\n    var dayOfWeek = parseInt(token[2], 10) - 1;\n    return dayOfISOYear(year, week, dayOfWeek);\n  } // Invalid ISO-formatted date\n\n\n  return null;\n}\n\nfunction parseTime(timeString) {\n  var token;\n  var hours;\n  var minutes; // hh\n\n  token = parseTokenHH.exec(timeString);\n\n  if (token) {\n    hours = parseFloat(token[1].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR;\n  } // hh:mm or hhmm\n\n\n  token = parseTokenHHMM.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseFloat(token[2].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE;\n  } // hh:mm:ss or hhmmss\n\n\n  token = parseTokenHHMMSS.exec(timeString);\n\n  if (token) {\n    hours = parseInt(token[1], 10);\n    minutes = parseInt(token[2], 10);\n    var seconds = parseFloat(token[3].replace(',', '.'));\n    return hours % 24 * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * 1000;\n  } // Invalid ISO-formatted time\n\n\n  return null;\n}\n\nfunction parseTimezone(timezoneString) {\n  var token;\n  var absoluteOffset; // Z\n\n  token = parseTokenTimezoneZ.exec(timezoneString);\n\n  if (token) {\n    return 0;\n  } // ±hh\n\n\n  token = parseTokenTimezoneHH.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60;\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  } // ±hh:mm or ±hhmm\n\n\n  token = parseTokenTimezoneHHMM.exec(timezoneString);\n\n  if (token) {\n    absoluteOffset = parseInt(token[2], 10) * 60 + parseInt(token[3], 10);\n    return token[1] === '+' ? -absoluteOffset : absoluteOffset;\n  }\n\n  return 0;\n}\n\nfunction dayOfISOYear(isoYear, week, day) {\n  week = week || 0;\n  day = day || 0;\n  var date = new Date(0);\n  date.setUTCFullYear(isoYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = week * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\nmodule.exports = parse;\n\n//# sourceURL=webpack:///./node_modules/date-fns/parse/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_day/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/start_of_day/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n/**\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\n\nfunction startOfDay(dirtyDate) {\n  var date = parse(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfDay;\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_day/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_iso_week/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/start_of_iso_week/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var startOfWeek = __webpack_require__(/*! ../start_of_week/index.js */ \"./node_modules/date-fns/start_of_week/index.js\");\n/**\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfISOWeek(dirtyDate) {\n  return startOfWeek(dirtyDate, {\n    weekStartsOn: 1\n  });\n}\n\nmodule.exports = startOfISOWeek;\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_iso_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_iso_year/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/date-fns/start_of_iso_year/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var getISOYear = __webpack_require__(/*! ../get_iso_year/index.js */ \"./node_modules/date-fns/get_iso_year/index.js\");\n\nvar startOfISOWeek = __webpack_require__(/*! ../start_of_iso_week/index.js */ \"./node_modules/date-fns/start_of_iso_week/index.js\");\n/**\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of an ISO year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * var result = startOfISOYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\n\n\nfunction startOfISOYear(dirtyDate) {\n  var year = getISOYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  var date = startOfISOWeek(fourthOfJanuary);\n  return date;\n}\n\nmodule.exports = startOfISOYear;\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_iso_year/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_week/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/start_of_week/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n/**\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @param {Object} [options] - the object with options\n * @param {Number} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), {weekStartsOn: 1})\n * //=> Mon Sep 01 2014 00:00:00\n */\n\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  var weekStartsOn = dirtyOptions ? Number(dirtyOptions.weekStartsOn) || 0 : 0;\n  var date = parse(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfWeek;\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_week/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/start_of_year/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/start_of_year/index.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var parse = __webpack_require__(/*! ../parse/index.js */ \"./node_modules/date-fns/parse/index.js\");\n/**\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|String|Number} date - the original date\n * @returns {Date} the start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\n\nfunction startOfYear(dirtyDate) {\n  var cleanDate = parse(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nmodule.exports = startOfYear;\n\n//# sourceURL=webpack:///./node_modules/date-fns/start_of_year/index.js?");

/***/ }),

/***/ "./node_modules/html-truncate/lib/truncate.js":
/*!****************************************************!*\
  !*** ./node_modules/html-truncate/lib/truncate.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Truncate HTML string and keep tag safe.\n *\n * @method truncate\n * @param {String} string string needs to be truncated\n * @param {Number} maxLength length of truncated string\n * @param {Object} options (optional)\n * @param {Boolean} [options.keepImageTag] flag to specify if keep image tag, false by default\n * @param {Boolean} [options.truncateLastWord] truncates last word, true by default\n * @param {Number} [options.slop] tolerance when options.truncateLastWord is false before we give up and just truncate at the maxLength position, 10 by default (but not greater than maxLength)\n * @param {Boolean|String} [options.ellipsis] omission symbol for truncated string, '...' by default\n * @return {String} truncated string\n */\nfunction truncate(string, maxLength, options) {\n  var EMPTY_OBJECT = {},\n      EMPTY_STRING = '',\n      DEFAULT_TRUNCATE_SYMBOL = '...',\n      DEFAULT_SLOP = 10 > maxLength ? maxLength : 10,\n      EXCLUDE_TAGS = ['img', 'br'],\n      // non-closed tags\n  items = [],\n      // stack for saving tags\n  total = 0,\n      // record how many characters we traced so far\n  content = EMPTY_STRING,\n      // truncated text storage\n  KEY_VALUE_REGEX = '([\\\\w|-]+\\\\s*(=\\\\s*\"[^\"]*\")?\\\\s*)*',\n      IS_CLOSE_REGEX = '\\\\s*\\\\/?\\\\s*',\n      CLOSE_REGEX = '\\\\s*\\\\/\\\\s*',\n      SELF_CLOSE_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + CLOSE_REGEX + '>'),\n      HTML_TAG_REGEX = new RegExp('<\\\\/?\\\\w+\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n      URL_REGEX = /(((ftp|https?):\\/\\/)[\\-\\w@:%_\\+.~#?,&\\/\\/=]+)|((mailto:)?[_.\\w\\-]+@([\\w][\\w\\-]+\\.)+[a-zA-Z]{2,3})/g,\n      // Simple regexp\n  IMAGE_TAG_REGEX = new RegExp('<img\\\\s*' + KEY_VALUE_REGEX + IS_CLOSE_REGEX + '>'),\n      WORD_BREAK_REGEX = new RegExp('\\\\W+', 'g'),\n      matches = true,\n      result,\n      index,\n      tail,\n      tag,\n      selfClose;\n  /**\n   * Remove image tag\n   *\n   * @private\n   * @method _removeImageTag\n   * @param {String} string not-yet-processed string\n   * @return {String} string without image tags\n   */\n\n  function _removeImageTag(string) {\n    var match = IMAGE_TAG_REGEX.exec(string),\n        index,\n        len;\n\n    if (!match) {\n      return string;\n    }\n\n    index = match.index;\n    len = match[0].length;\n    return string.substring(0, index) + string.substring(index + len);\n  }\n  /**\n   * Dump all close tags and append to truncated content while reaching upperbound\n   *\n   * @private\n   * @method _dumpCloseTag\n   * @param {String[]} tags a list of tags which should be closed\n   * @return {String} well-formatted html\n   */\n\n\n  function _dumpCloseTag(tags) {\n    var html = '';\n    tags.reverse().forEach(function (tag, index) {\n      // dump non-excluded tags only\n      if (-1 === EXCLUDE_TAGS.indexOf(tag)) {\n        html += '</' + tag + '>';\n      }\n    });\n    return html;\n  }\n  /**\n   * Process tag string to get pure tag name\n   *\n   * @private\n   * @method _getTag\n   * @param {String} string original html\n   * @return {String} tag name\n   */\n\n\n  function _getTag(string) {\n    var tail = string.indexOf(' '); // TODO:\n    // we have to figure out how to handle non-well-formatted HTML case\n\n    if (-1 === tail) {\n      tail = string.indexOf('>');\n\n      if (-1 === tail) {\n        throw new Error('HTML tag is not well-formed : ' + string);\n      }\n    }\n\n    return string.substring(1, tail);\n  }\n  /**\n   * Get the end position for String#substring()\n   *\n   * If options.truncateLastWord is FALSE, we try to the end position up to\n   * options.slop characters to avoid breaking in the middle of a word.\n   *\n   * @private\n   * @method _getEndPosition\n   * @param {String} string original html\n   * @param {Number} tailPos (optional) provided to avoid extending the slop into trailing HTML tag\n   * @return {Number} maxLength\n   */\n\n\n  function _getEndPosition(string, tailPos) {\n    var defaultPos = maxLength - total,\n        position = defaultPos,\n        isShort = defaultPos < options.slop,\n        slopPos = isShort ? defaultPos : options.slop - 1,\n        substr,\n        startSlice = isShort ? 0 : defaultPos - options.slop,\n        endSlice = tailPos || defaultPos + options.slop,\n        result;\n\n    if (!options.truncateLastWord) {\n      substr = string.slice(startSlice, endSlice);\n\n      if (tailPos && substr.length <= tailPos) {\n        position = substr.length;\n      } else {\n        while ((result = WORD_BREAK_REGEX.exec(substr)) !== null) {\n          // a natural break position before the hard break position\n          if (result.index < slopPos) {\n            position = defaultPos - (slopPos - result.index); // keep seeking closer to the hard break position\n            // unless a natural break is at position 0\n\n            if (result.index === 0 && defaultPos <= 1) break;\n          } // a natural break position exactly at the hard break position\n          else if (result.index === slopPos) {\n              position = defaultPos;\n              break; // seek no more\n            } // a natural break position after the hard break position\n            else {\n                position = defaultPos + (result.index - slopPos);\n                break; // seek no more\n              }\n        }\n      }\n\n      if (string.charAt(position - 1).match(/\\s$/)) position--;\n    }\n\n    return position;\n  }\n\n  options = options || EMPTY_OBJECT;\n  options.ellipsis = undefined !== options.ellipsis ? options.ellipsis : DEFAULT_TRUNCATE_SYMBOL;\n  options.truncateLastWord = undefined !== options.truncateLastWord ? options.truncateLastWord : true;\n  options.slop = undefined !== options.slop ? options.slop : DEFAULT_SLOP;\n\n  while (matches) {\n    matches = HTML_TAG_REGEX.exec(string);\n\n    if (!matches) {\n      if (total >= maxLength) {\n        break;\n      }\n\n      matches = URL_REGEX.exec(string);\n\n      if (!matches || matches.index >= maxLength) {\n        content += string.substring(0, _getEndPosition(string));\n        break;\n      }\n\n      while (matches) {\n        result = matches[0];\n        index = matches.index;\n        content += string.substring(0, index + result.length - total);\n        string = string.substring(index + result.length);\n        matches = URL_REGEX.exec(string);\n      }\n\n      break;\n    }\n\n    result = matches[0];\n    index = matches.index;\n\n    if (total + index > maxLength) {\n      // exceed given `maxLength`, dump everything to clear stack\n      content += string.substring(0, _getEndPosition(string, index));\n      break;\n    } else {\n      total += index;\n      content += string.substring(0, index);\n    }\n\n    if ('/' === result[1]) {\n      // move out open tag\n      items.pop();\n      selfClose = null;\n    } else {\n      selfClose = SELF_CLOSE_REGEX.exec(result);\n\n      if (!selfClose) {\n        tag = _getTag(result);\n        items.push(tag);\n      }\n    }\n\n    if (selfClose) {\n      content += selfClose[0];\n    } else {\n      content += result;\n    }\n\n    string = string.substring(index + result.length);\n  }\n\n  if (string.length > maxLength - total && options.ellipsis) {\n    content += options.ellipsis;\n  }\n\n  content += _dumpCloseTag(items);\n\n  if (!options.keepImageTag) {\n    content = _removeImageTag(content);\n  }\n\n  return content;\n}\n\nmodule.exports = truncate;\n\n//# sourceURL=webpack:///./node_modules/html-truncate/lib/truncate.js?");

/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer);\n};\n\nfunction isBuffer(obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj);\n} // For Node v0.10 support. Remove this eventually.\n\n\nfunction isSlowBuffer(obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0));\n}\n\n//# sourceURL=webpack:///./node_modules/is-buffer/index.js?");

/***/ }),

/***/ "./node_modules/is-visible/module/index.js":
/*!*************************************************!*\
  !*** ./node_modules/is-visible/module/index.js ***!
  \*************************************************/
/*! exports provided: isVisible, isVisibleAll, isVisibleAny, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVisible\", function() { return isVisible; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVisibleAll\", function() { return isVisibleAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isVisibleAny\", function() { return isVisibleAny; });\n/* harmony import */ var iselement__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! iselement */ \"./node_modules/iselement/module/index.js\");\n/* harmony import */ var style_properties__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! style-properties */ \"./node_modules/style-properties/module/index.js\");\n\n // cross-browser way of getting element's style property\n\nfunction getStyle(element, property) {\n  if (window.getComputedStyle) {\n    return Object(style_properties__WEBPACK_IMPORTED_MODULE_1__[\"getStyleProperty\"])(element, property).original;\n  } else if (element.currentStyle) {\n    return element.currentStyle[property];\n  }\n\n  return null;\n}\n\nfunction isVisible(element) {\n  // don't bother with non-element inputs\n  if (!Object(iselement__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(element)) {\n    return false;\n  } // This should prevent problems with ShadowDOMPolyfill. It returns different\n  // object when asking directly via `document.body` (native element) and when\n  // asking via `document.querySelector()` (wrapped element). This would result\n  // in traversing too far in the `while` cycle below.\n\n\n  var body_element = document.querySelector('body');\n  var html_element = document.querySelector('html'); // elements that are not inserted into the body are never visible\n\n  if (!body_element || !body_element.contains(element)) {\n    return false;\n  } // invisible elements\n\n\n  if (getStyle(element, 'visibility') === 'hidden') {\n    return false;\n  } // test display property recursively for element and all its parents, until BODY\n\n\n  while (element && element !== body_element && element !== html_element) {\n    if (getStyle(element, 'display') === 'none') {\n      return false;\n    }\n\n    if (getStyle(element, 'opacity').toString() === '0') {\n      return false;\n    }\n\n    element = element.parentNode;\n  }\n\n  return true;\n}\nfunction isVisibleAll(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (!isVisible(list[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isVisibleAny(list) {\n  for (var i = 0; i < list.length; i++) {\n    if (isVisible(list[i])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (isVisible);\n\n//# sourceURL=webpack:///./node_modules/is-visible/module/index.js?");

/***/ }),

/***/ "./node_modules/iselement/module/index.js":
/*!************************************************!*\
  !*** ./node_modules/iselement/module/index.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n/**\n * Returns `true` if provided input is Element.\n * @name isElement\n * @param {*} [input]\n * @returns {boolean}\n */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (input) {\n  return input != null && (typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && input.nodeType === 1 && _typeof(input.style) === 'object' && _typeof(input.ownerDocument) === 'object';\n});\n\n//# sourceURL=webpack:///./node_modules/iselement/module/index.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * jQuery JavaScript Library v3.3.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2018-01-20T17:24Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if (typeof module === \"object\" && typeof module.exports === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket #14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  } // Pass this if window is not defined yet\n\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var document = window.document;\n  var getProto = Object.getPrototypeOf;\n  var slice = arr.slice;\n  var concat = arr.concat;\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\n  };\n\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    noModule: true\n  };\n\n  function DOMEval(code, doc, node) {\n    doc = doc || document;\n    var i,\n        script = doc.createElement(\"script\");\n    script.text = code;\n\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        if (node[i]) {\n          script[i] = node[i];\n        }\n      }\n    }\n\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    } // Support: Android <=2.3 only (functionish RegExp)\n\n\n    return typeof obj === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : typeof obj;\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n\n  var version = \"3.3.1\",\n      // Define a local copy of jQuery\n  jQuery = function (selector, context) {\n    // The jQuery object is actually just the init constructor 'enhanced'\n    // Need init if jQuery is called (just allow error to be thrown if not included)\n    return new jQuery.fn.init(selector, context);\n  },\n      // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function () {\n      return slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function (num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return slice.call(this);\n      } // Return just the one element from the set\n\n\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function (elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems); // Add the old object onto the stack (as a reference)\n\n      ret.prevObject = this; // Return the newly-formed element set\n\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function (callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function (callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function () {\n      return this.pushStack(slice.apply(this, arguments));\n    },\n    first: function () {\n      return this.eq(0);\n    },\n    last: function () {\n      return this.eq(-1);\n    },\n    eq: function (i) {\n      var len = this.length,\n          j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function () {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n        name,\n        src,\n        copy,\n        copyIsArray,\n        clone,\n        target = arguments[0] || {},\n        i = 1,\n        length = arguments.length,\n        deep = false; // Handle a deep copy situation\n\n    if (typeof target === \"boolean\") {\n      deep = target; // Skip the boolean and the target\n\n      target = arguments[i] || {};\n      i++;\n    } // Handle case when target is a string or something (possible in deep copy)\n\n\n    if (typeof target !== \"object\" && !isFunction(target)) {\n      target = {};\n    } // Extend jQuery itself if only one argument is passed\n\n\n    if (i === length) {\n      target = this;\n      i--;\n    }\n\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          src = target[name];\n          copy = options[name]; // Prevent never-ending loop\n\n          if (target === copy) {\n            continue;\n          } // Recurse if we're merging plain objects or arrays\n\n\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            if (copyIsArray) {\n              copyIsArray = false;\n              clone = src && Array.isArray(src) ? src : [];\n            } else {\n              clone = src && jQuery.isPlainObject(src) ? src : {};\n            } // Never move original objects, clone them\n\n\n            target[name] = jQuery.extend(deep, clone, copy); // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    } // Return the modified object\n\n\n    return target;\n  };\n\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function (msg) {\n      throw new Error(msg);\n    },\n    noop: function () {},\n    isPlainObject: function (obj) {\n      var proto, Ctor; // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n\n      proto = getProto(obj); // Objects with no prototype (e.g., `Object.create( null )`) are plain\n\n      if (!proto) {\n        return true;\n      } // Objects with prototype are plain iff they were constructed by a global Object function\n\n\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function (obj) {\n      /* eslint-disable no-unused-vars */\n      // See https://github.com/eslint/eslint/issues/6125\n      var name;\n\n      for (name in obj) {\n        return false;\n      }\n\n      return true;\n    },\n    // Evaluates a script in a global context\n    globalEval: function (code) {\n      DOMEval(code);\n    },\n    each: function (obj, callback) {\n      var length,\n          i = 0;\n\n      if (isArrayLike(obj)) {\n        length = obj.length;\n\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n\n      return obj;\n    },\n    // Support: Android <=4.0 only\n    trim: function (text) {\n      return text == null ? \"\" : (text + \"\").replace(rtrim, \"\");\n    },\n    // results is for internal usage only\n    makeArray: function (arr, results) {\n      var ret = results || [];\n\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n\n      return ret;\n    },\n    inArray: function (elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function (first, second) {\n      var len = +second.length,\n          j = 0,\n          i = first.length;\n\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n\n      first.length = i;\n      return first;\n    },\n    grep: function (elems, callback, invert) {\n      var callbackInverse,\n          matches = [],\n          i = 0,\n          length = elems.length,\n          callbackExpect = !invert; // Go through the array, only saving the items\n      // that pass the validator function\n\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function (elems, callback, arg) {\n      var length,\n          value,\n          i = 0,\n          ret = []; // Go through the array, translating each of the items to their new values\n\n      if (isArrayLike(elems)) {\n        length = elems.length;\n\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        } // Go through every key on the object,\n\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      } // Flatten any nested arrays\n\n\n      return concat.apply([], ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  } // Populate the class2type map\n\n\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n        type = toType(obj);\n\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n\n  var Sizzle =\n  /*!\n   * Sizzle CSS Selector Engine v2.3.3\n   * https://sizzlejs.com/\n   *\n   * Copyright jQuery Foundation and other contributors\n   * Released under the MIT license\n   * http://jquery.org/license\n   *\n   * Date: 2016-08-08\n   */\n  function (window) {\n    var i,\n        support,\n        Expr,\n        getText,\n        isXML,\n        tokenize,\n        compile,\n        select,\n        outermostContext,\n        sortInput,\n        hasDuplicate,\n        // Local document vars\n    setDocument,\n        document,\n        docElem,\n        documentIsHTML,\n        rbuggyQSA,\n        rbuggyMatches,\n        matches,\n        contains,\n        // Instance-specific data\n    expando = \"sizzle\" + 1 * new Date(),\n        preferredDoc = window.document,\n        dirruns = 0,\n        done = 0,\n        classCache = createCache(),\n        tokenCache = createCache(),\n        compilerCache = createCache(),\n        sortOrder = function (a, b) {\n      if (a === b) {\n        hasDuplicate = true;\n      }\n\n      return 0;\n    },\n        // Instance methods\n    hasOwn = {}.hasOwnProperty,\n        arr = [],\n        pop = arr.pop,\n        push_native = arr.push,\n        push = arr.push,\n        slice = arr.slice,\n        // Use a stripped-down indexOf as it's faster than native\n    // https://jsperf.com/thor-indexof-vs-for/5\n    indexOf = function (list, elem) {\n      var i = 0,\n          len = list.length;\n\n      for (; i < len; i++) {\n        if (list[i] === elem) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n        booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n        // Regular expressions\n    // http://www.w3.org/TR/css3-selectors/#whitespace\n    whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n        // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n    identifier = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n        // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n    attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace + // Operator (capture 2)\n    \"*([*^$|!~]?=)\" + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n    \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n        pseudos = \":(\" + identifier + \")(?:\\\\((\" + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n    // 1. quoted (capture 3; capture 4 or capture 5)\n    \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" + // 2. simple (capture 6)\n    \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" + // 3. anything else (capture 2)\n    \".*\" + \")\\\\)|)\",\n        // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n    rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n        rtrim = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\"),\n        rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n        rcombinators = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n        rattributeQuotes = new RegExp(\"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\"),\n        rpseudo = new RegExp(pseudos),\n        ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n        matchExpr = {\n      \"ID\": new RegExp(\"^#(\" + identifier + \")\"),\n      \"CLASS\": new RegExp(\"^\\\\.(\" + identifier + \")\"),\n      \"TAG\": new RegExp(\"^(\" + identifier + \"|[*])\"),\n      \"ATTR\": new RegExp(\"^\" + attributes),\n      \"PSEUDO\": new RegExp(\"^\" + pseudos),\n      \"CHILD\": new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n      \"bool\": new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n      // For use in libraries implementing .is()\n      // We use this for POS matching in `select`\n      \"needsContext\": new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n    },\n        rinputs = /^(?:input|select|textarea|button)$/i,\n        rheader = /^h\\d$/i,\n        rnative = /^[^{]+\\{\\s*\\[native \\w/,\n        // Easily-parseable/retrievable ID or TAG or CLASS selectors\n    rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n        rsibling = /[+~]/,\n        // CSS escapes\n    // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n    runescape = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\"),\n        funescape = function (_, escaped, escapedWhitespace) {\n      var high = \"0x\" + escaped - 0x10000; // NaN means non-codepoint\n      // Support: Firefox<24\n      // Workaround erroneous numeric interpretation of +\"0x\"\n\n      return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n      String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n      String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n    },\n        // CSS string/identifier serialization\n    // https://drafts.csswg.org/cssom/#common-serializing-idioms\n    rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n        fcssescape = function (ch, asCodePoint) {\n      if (asCodePoint) {\n        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n        if (ch === \"\\0\") {\n          return \"\\uFFFD\";\n        } // Control characters and (dependent upon position) numbers get escaped as code points\n\n\n        return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n      } // Other potentially-special ASCII characters get backslash-escaped\n\n\n      return \"\\\\\" + ch;\n    },\n        // Used for iframes\n    // See setDocument()\n    // Removing the function wrapper causes a \"Permission Denied\"\n    // error in IE\n    unloadHandler = function () {\n      setDocument();\n    },\n        disabledAncestor = addCombinator(function (elem) {\n      return elem.disabled === true && (\"form\" in elem || \"label\" in elem);\n    }, {\n      dir: \"parentNode\",\n      next: \"legend\"\n    }); // Optimize for push.apply( _, NodeList )\n\n\n    try {\n      push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes); // Support: Android<4.0\n      // Detect silently failing push.apply\n\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: arr.length ? // Leverage slice if possible\n        function (target, els) {\n          push_native.apply(target, slice.call(els));\n        } : // Support: IE<9\n        // Otherwise append directly\n        function (target, els) {\n          var j = target.length,\n              i = 0; // Can't trust NodeList.length\n\n          while (target[j++] = els[i++]) {}\n\n          target.length = j - 1;\n        }\n      };\n    }\n\n    function Sizzle(selector, context, results, seed) {\n      var m,\n          i,\n          elem,\n          nid,\n          match,\n          groups,\n          newSelector,\n          newContext = context && context.ownerDocument,\n          // nodeType defaults to 9, since context defaults to document\n      nodeType = context ? context.nodeType : 9;\n      results = results || []; // Return early from calls with invalid selector or context\n\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      } // Try to shortcut find operations (as opposed to filters) in HTML documents\n\n\n      if (!seed) {\n        if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n          setDocument(context);\n        }\n\n        context = context || document;\n\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE, Opera, Webkit\n                  // TODO: identify versions\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    results.push(elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                } // Element context\n\n              } else {\n                // Support: IE, Opera, Webkit\n                // TODO: identify versions\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                  results.push(elem);\n                  return results;\n                }\n              } // Type selector\n\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results; // Class selector\n            } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          } // Take advantage of querySelectorAll\n\n\n          if (support.qsa && !compilerCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            if (nodeType !== 1) {\n              newContext = context;\n              newSelector = selector; // qSA looks outside Element context, which is not what we want\n              // Thanks to Andrew Dupont for this workaround technique\n              // Support: IE <=8\n              // Exclude object elements\n            } else if (context.nodeName.toLowerCase() !== \"object\") {\n              // Capture the context ID, setting it first if necessary\n              if (nid = context.getAttribute(\"id\")) {\n                nid = nid.replace(rcssescape, fcssescape);\n              } else {\n                context.setAttribute(\"id\", nid = expando);\n              } // Prefix every selector in the list\n\n\n              groups = tokenize(selector);\n              i = groups.length;\n\n              while (i--) {\n                groups[i] = \"#\" + nid + \" \" + toSelector(groups[i]);\n              }\n\n              newSelector = groups.join(\",\"); // Expand context for sibling selectors\n\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n            }\n\n            if (newSelector) {\n              try {\n                push.apply(results, newContext.querySelectorAll(newSelector));\n                return results;\n              } catch (qsaError) {} finally {\n                if (nid === expando) {\n                  context.removeAttribute(\"id\");\n                }\n              }\n            }\n          }\n        }\n      } // All others\n\n\n      return select(selector.replace(rtrim, \"$1\"), context, results, seed);\n    }\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n\n\n    function createCache() {\n      var keys = [];\n\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n\n        return cache[key + \" \"] = value;\n      }\n\n      return cache;\n    }\n    /**\n     * Mark a function for special use by Sizzle\n     * @param {Function} fn The function to mark\n     */\n\n\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n\n\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        } // release memory in IE\n\n\n        el = null;\n      }\n    }\n    /**\n     * Adds the same handler for all of the specified attrs\n     * @param {String} attrs Pipe-separated list of attributes\n     * @param {Function} handler The method that will be applied\n     */\n\n\n    function addHandle(attrs, handler) {\n      var arr = attrs.split(\"|\"),\n          i = arr.length;\n\n      while (i--) {\n        Expr.attrHandle[arr[i]] = handler;\n      }\n    }\n    /**\n     * Checks document order of two siblings\n     * @param {Element} a\n     * @param {Element} b\n     * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n     */\n\n\n    function siblingCheck(a, b) {\n      var cur = b && a,\n          diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex; // Use IE sourceIndex if available on both nodes\n\n      if (diff) {\n        return diff;\n      } // Check if b follows a\n\n\n      if (cur) {\n        while (cur = cur.nextSibling) {\n          if (cur === b) {\n            return -1;\n          }\n        }\n      }\n\n      return a ? 1 : -1;\n    }\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n\n\n    function createInputPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return name === \"input\" && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n\n\n    function createButtonPseudo(type) {\n      return function (elem) {\n        var name = elem.nodeName.toLowerCase();\n        return (name === \"input\" || name === \"button\") && elem.type === type;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n\n\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            } // Support: IE 6 - 11\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n\n\n            return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n\n            /* jshint -W018 */\n            elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n          }\n\n          return elem.disabled === disabled; // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        } // Remaining elements are neither :enabled nor :disabled\n\n\n        return false;\n      };\n    }\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n\n\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n              matchIndexes = fn([], seed.length, argument),\n              i = matchIndexes.length; // Match elements found at the specified indexes\n\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n    /**\n     * Checks a node for validity as a Sizzle context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n\n\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    } // Expose support vars for convenience\n\n\n    support = Sizzle.support = {};\n    /**\n     * Detects XML nodes\n     * @param {Element|Object} elem An element or a document\n     * @returns {Boolean} True iff elem is a non-HTML XML node\n     */\n\n    isXML = Sizzle.isXML = function (elem) {\n      // documentElement is verified for cases where it doesn't yet exist\n      // (such as loading iframes in IE - #4833)\n      var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n      return documentElement ? documentElement.nodeName !== \"HTML\" : false;\n    };\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [doc] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n\n\n    setDocument = Sizzle.setDocument = function (node) {\n      var hasCompare,\n          subWindow,\n          doc = node ? node.ownerDocument || node : preferredDoc; // Return early if doc is invalid or already selected\n\n      if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      } // Update global variables\n\n\n      document = doc;\n      docElem = document.documentElement;\n      documentIsHTML = !isXML(document); // Support: IE 9-11, Edge\n      // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n\n      if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 11, Edge\n        if (subWindow.addEventListener) {\n          subWindow.addEventListener(\"unload\", unloadHandler, false); // Support: IE 9 - 10 only\n        } else if (subWindow.attachEvent) {\n          subWindow.attachEvent(\"onunload\", unloadHandler);\n        }\n      }\n      /* Attributes\n      ---------------------------------------------------------------------- */\n      // Support: IE<8\n      // Verify that getAttribute really returns attributes and not properties\n      // (excepting IE8 booleans)\n\n\n      support.attributes = assert(function (el) {\n        el.className = \"i\";\n        return !el.getAttribute(\"className\");\n      });\n      /* getElement(s)By*\n      ---------------------------------------------------------------------- */\n      // Check if getElementsByTagName(\"*\") returns only elements\n\n      support.getElementsByTagName = assert(function (el) {\n        el.appendChild(document.createComment(\"\"));\n        return !el.getElementsByTagName(\"*\").length;\n      }); // Support: IE<9\n\n      support.getElementsByClassName = rnative.test(document.getElementsByClassName); // Support: IE<10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n\n      support.getById = assert(function (el) {\n        docElem.appendChild(el).id = expando;\n        return !document.getElementsByName || !document.getElementsByName(expando).length;\n      }); // ID filter and find\n\n      if (support.getById) {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter[\"ID\"] = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        }; // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n\n\n        Expr.find[\"ID\"] = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n                i,\n                elems,\n                elem = context.getElementById(id);\n\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n\n              if (node && node.value === id) {\n                return [elem];\n              } // Fall back on getElementsByName\n\n\n              elems = context.getElementsByName(id);\n              i = 0;\n\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n\n            return [];\n          }\n        };\n      } // Tag\n\n\n      Expr.find[\"TAG\"] = support.getElementsByTagName ? function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag); // DocumentFragment nodes don't have gEBTN\n        } else if (support.qsa) {\n          return context.querySelectorAll(tag);\n        }\n      } : function (tag, context) {\n        var elem,\n            tmp = [],\n            i = 0,\n            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n        results = context.getElementsByTagName(tag); // Filter out possible comments\n\n        if (tag === \"*\") {\n          while (elem = results[i++]) {\n            if (elem.nodeType === 1) {\n              tmp.push(elem);\n            }\n          }\n\n          return tmp;\n        }\n\n        return results;\n      }; // Class\n\n      Expr.find[\"CLASS\"] = support.getElementsByClassName && function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n      // QSA and matchesSelector support\n      // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\n\n      rbuggyMatches = []; // qSa(:focus) reports false when true (Chrome 21)\n      // We allow this because of a bug in IE8/9 that throws an error\n      // whenever `document.activeElement` is accessed on an iframe\n      // So, we allow :focus to pass through QSA all the time to avoid the IE error\n      // See https://bugs.jquery.com/ticket/13378\n\n      rbuggyQSA = [];\n\n      if (support.qsa = rnative.test(document.querySelectorAll)) {\n        // Build QSA regex\n        // Regex strategy adopted from Diego Perini\n        assert(function (el) {\n          // Select is set to empty string on purpose\n          // This is to test IE's treatment of not explicitly\n          // setting a boolean content attribute,\n          // since its presence should be enough\n          // https://bugs.jquery.com/ticket/12359\n          docElem.appendChild(el).innerHTML = \"<a id='\" + expando + \"'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' msallowcapture=''>\" + \"<option selected=''></option></select>\"; // Support: IE8, Opera 11-12.16\n          // Nothing should be selected when empty strings follow ^= or $= or *=\n          // The test attribute must be unknown in Opera but \"safe\" for WinRT\n          // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\n          if (el.querySelectorAll(\"[msallowcapture^='']\").length) {\n            rbuggyQSA.push(\"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\");\n          } // Support: IE8\n          // Boolean attributes and \"value\" are not treated correctly\n\n\n          if (!el.querySelectorAll(\"[selected]\").length) {\n            rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n          } // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n\n\n          if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n            rbuggyQSA.push(\"~=\");\n          } // Webkit/Opera - :checked should return selected option elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          // IE8 throws error here and will not see later tests\n\n\n          if (!el.querySelectorAll(\":checked\").length) {\n            rbuggyQSA.push(\":checked\");\n          } // Support: Safari 8+, iOS 8+\n          // https://bugs.webkit.org/show_bug.cgi?id=136851\n          // In-page `selector#id sibling-combinator selector` fails\n\n\n          if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n            rbuggyQSA.push(\".#.+[+~]\");\n          }\n        });\n        assert(function (el) {\n          el.innerHTML = \"<a href='' disabled='disabled'></a>\" + \"<select disabled='disabled'><option/></select>\"; // Support: Windows 8 Native Apps\n          // The type and name attributes are restricted during .innerHTML assignment\n\n          var input = document.createElement(\"input\");\n          input.setAttribute(\"type\", \"hidden\");\n          el.appendChild(input).setAttribute(\"name\", \"D\"); // Support: IE8\n          // Enforce case-sensitivity of name attribute\n\n          if (el.querySelectorAll(\"[name=d]\").length) {\n            rbuggyQSA.push(\"name\" + whitespace + \"*[*^$|!~]?=\");\n          } // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n          // IE8 throws error here and will not see later tests\n\n\n          if (el.querySelectorAll(\":enabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Support: IE9-11+\n          // IE's :disabled selector does not pick up the children of disabled fieldsets\n\n\n          docElem.appendChild(el).disabled = true;\n\n          if (el.querySelectorAll(\":disabled\").length !== 2) {\n            rbuggyQSA.push(\":enabled\", \":disabled\");\n          } // Opera 10-11 does not throw on post-comma invalid pseudos\n\n\n          el.querySelectorAll(\"*,:x\");\n          rbuggyQSA.push(\",.*:\");\n        });\n      }\n\n      if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n        assert(function (el) {\n          // Check to see if it's possible to do matchesSelector\n          // on a disconnected node (IE 9)\n          support.disconnectedMatch = matches.call(el, \"*\"); // This should fail with an exception\n          // Gecko does not error, returns false instead\n\n          matches.call(el, \"[s!='']:x\");\n          rbuggyMatches.push(\"!=\", pseudos);\n        });\n      }\n\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n      rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\"|\"));\n      /* Contains\n      ---------------------------------------------------------------------- */\n\n      hasCompare = rnative.test(docElem.compareDocumentPosition); // Element contains another\n      // Purposefully self-exclusive\n      // As in, an element does not contain itself\n\n      contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n        var adown = a.nodeType === 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n        return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n      } : function (a, b) {\n        if (b) {\n          while (b = b.parentNode) {\n            if (b === a) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      };\n      /* Sorting\n      ---------------------------------------------------------------------- */\n      // Document order sorting\n\n      sortOrder = hasCompare ? function (a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        } // Sort on method existence if only one input has compareDocumentPosition\n\n\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\n        if (compare) {\n          return compare;\n        } // Calculate position if both inputs belong to the same document\n\n\n        compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n        1; // Disconnected nodes\n\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n            return 1;\n          } // Maintain original order\n\n\n          return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n        }\n\n        return compare & 4 ? -1 : 1;\n      } : function (a, b) {\n        // Exit early if the nodes are identical\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        var cur,\n            i = 0,\n            aup = a.parentNode,\n            bup = b.parentNode,\n            ap = [a],\n            bp = [b]; // Parentless nodes are either documents or disconnected\n\n        if (!aup || !bup) {\n          return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0; // If the nodes are siblings, we can do a quick check\n        } else if (aup === bup) {\n          return siblingCheck(a, b);\n        } // Otherwise we need full lists of their ancestors for comparison\n\n\n        cur = a;\n\n        while (cur = cur.parentNode) {\n          ap.unshift(cur);\n        }\n\n        cur = b;\n\n        while (cur = cur.parentNode) {\n          bp.unshift(cur);\n        } // Walk down the tree looking for a discrepancy\n\n\n        while (ap[i] === bp[i]) {\n          i++;\n        }\n\n        return i ? // Do a sibling check if the nodes have a common ancestor\n        siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n        ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n      };\n      return document;\n    };\n\n    Sizzle.matches = function (expr, elements) {\n      return Sizzle(expr, null, null, elements);\n    };\n\n    Sizzle.matchesSelector = function (elem, expr) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      } // Make sure that attribute selectors are quoted\n\n\n      expr = expr.replace(rattributeQuotes, \"='$1']\");\n\n      if (support.matchesSelector && documentIsHTML && !compilerCache[expr + \" \"] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr); // IE 9's matchesSelector returns false on disconnected nodes\n\n          if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {}\n      }\n\n      return Sizzle(expr, document, null, [elem]).length > 0;\n    };\n\n    Sizzle.contains = function (context, elem) {\n      // Set document vars if needed\n      if ((context.ownerDocument || context) !== document) {\n        setDocument(context);\n      }\n\n      return contains(context, elem);\n    };\n\n    Sizzle.attr = function (elem, name) {\n      // Set document vars if needed\n      if ((elem.ownerDocument || elem) !== document) {\n        setDocument(elem);\n      }\n\n      var fn = Expr.attrHandle[name.toLowerCase()],\n          // Don't get fooled by Object.prototype properties (jQuery #13807)\n      val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n    };\n\n    Sizzle.escape = function (sel) {\n      return (sel + \"\").replace(rcssescape, fcssescape);\n    };\n\n    Sizzle.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n\n\n    Sizzle.uniqueSort = function (results) {\n      var elem,\n          duplicates = [],\n          j = 0,\n          i = 0; // Unless we *know* we can detect duplicates, assume their presence\n\n      hasDuplicate = !support.detectDuplicates;\n      sortInput = !support.sortStable && results.slice(0);\n      results.sort(sortOrder);\n\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n\n        while (j--) {\n          results.splice(duplicates[j], 1);\n        }\n      } // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n\n\n      sortInput = null;\n      return results;\n    };\n    /**\n     * Utility function for retrieving the text value of an array of DOM nodes\n     * @param {Array|Element} elem\n     */\n\n\n    getText = Sizzle.getText = function (elem) {\n      var node,\n          ret = \"\",\n          i = 0,\n          nodeType = elem.nodeType;\n\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += getText(node);\n        }\n      } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n        // Use textContent for elements\n        // innerText usage removed for consistency of new lines (jQuery #11153)\n        if (typeof elem.textContent === \"string\") {\n          return elem.textContent;\n        } else {\n          // Traverse its children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            ret += getText(elem);\n          }\n        }\n      } else if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      } // Do not include comment or processing instruction nodes\n\n\n      return ret;\n    };\n\n    Expr = Sizzle.selectors = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        \"ATTR\": function (match) {\n          match[1] = match[1].replace(runescape, funescape); // Move the given value to match[3] whether quoted or unquoted\n\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n\n          return match.slice(0, 4);\n        },\n        \"CHILD\": function (match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              Sizzle.error(match[0]);\n            } // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n\n\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\"); // other types prohibit arguments\n          } else if (match[3]) {\n            Sizzle.error(match[0]);\n          }\n\n          return match;\n        },\n        \"PSEUDO\": function (match) {\n          var excess,\n              unquoted = !match[6] && match[2];\n\n          if (matchExpr[\"CHILD\"].test(match[0])) {\n            return null;\n          } // Accept quoted arguments as-is\n\n\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\"; // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && ( // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && ( // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          } // Return only captures needed by the pseudo filter method (type and argument)\n\n\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        \"TAG\": function (nodeNameSelector) {\n          var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n          };\n        },\n        \"CLASS\": function (className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        \"ATTR\": function (name, operator, check) {\n          return function (elem) {\n            var result = Sizzle.attr(elem, name);\n\n            if (result == null) {\n              return operator === \"!=\";\n            }\n\n            if (!operator) {\n              return true;\n            }\n\n            result += \"\";\n            return operator === \"=\" ? result === check : operator === \"!=\" ? result !== check : operator === \"^=\" ? check && result.indexOf(check) === 0 : operator === \"*=\" ? check && result.indexOf(check) > -1 : operator === \"$=\" ? check && result.slice(-check.length) === check : operator === \"~=\" ? (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1 : operator === \"|=\" ? result === check || result.slice(0, check.length + 1) === check + \"-\" : false;\n          };\n        },\n        \"CHILD\": function (type, what, argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n              forward = type.slice(-4) !== \"last\",\n              ofType = what === \"of-type\";\n          return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, context, xml) {\n            var cache,\n                uniqueCache,\n                outerCache,\n                node,\n                nodeIndex,\n                start,\n                dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n                parent = elem.parentNode,\n                name = ofType && elem.nodeName.toLowerCase(),\n                useCache = !xml && !ofType,\n                diff = false;\n\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n\n                  while (node = node[dir]) {\n                    if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                      return false;\n                    }\n                  } // Reverse direction for :only-* (if we haven't yet done so)\n\n\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n\n                return true;\n              }\n\n              start = [forward ? parent.firstChild : parent.lastChild]; // non-xml :nth-child(...) stores cache data on `parent`\n\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                // ...in a gzip-friendly way\n                node = parent;\n                outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                // Defend against cloned attroperties (jQuery gh-1709)\n\n                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                cache = uniqueCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n\n                while (node = ++nodeIndex && node && node[dir] || ( // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    uniqueCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  // ...in a gzip-friendly way\n                  node = elem;\n                  outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                  // Defend against cloned attroperties (jQuery gh-1709)\n\n                  uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                  cache = uniqueCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                } // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\n\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {}); // Support: IE <9 only\n                        // Defend against cloned attroperties (jQuery gh-1709)\n\n                        uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                        uniqueCache[type] = [dirruns, diff];\n                      }\n\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              } // Incorporate the offset, then check against cycle size\n\n\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        \"PSEUDO\": function (pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // http://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n              fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(\"unsupported pseudo: \" + pseudo); // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as Sizzle does\n\n          if (fn[expando]) {\n            return fn(argument);\n          } // But maintain support for old signatures\n\n\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                  matched = fn(seed, argument),\n                  i = matched.length;\n\n              while (i--) {\n                idx = indexOf(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        \"not\": markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n              results = [],\n              matcher = compile(selector.replace(rtrim, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n            var elem,\n                unmatched = matcher(seed, null, xml, []),\n                i = seed.length; // Match elements unmatched by `matcher`\n\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results); // Don't keep the element (issue #299)\n\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        \"has\": markFunction(function (selector) {\n          return function (elem) {\n            return Sizzle(selector, elem).length > 0;\n          };\n        }),\n        \"contains\": markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // http://www.w3.org/TR/selectors/#lang-pseudo\n        \"lang\": markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            Sizzle.error(\"unsupported lang: \" + lang);\n          }\n\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n\n            return false;\n          };\n        }),\n        // Miscellaneous\n        \"target\": function (elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        \"root\": function (elem) {\n          return elem === docElem;\n        },\n        \"focus\": function (elem) {\n          return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        \"enabled\": createDisabledPseudo(false),\n        \"disabled\": createDisabledPseudo(true),\n        \"checked\": function (elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          var nodeName = elem.nodeName.toLowerCase();\n          return nodeName === \"input\" && !!elem.checked || nodeName === \"option\" && !!elem.selected;\n        },\n        \"selected\": function (elem) {\n          // Accessing this property makes selected-by-default\n          // options in Safari work properly\n          if (elem.parentNode) {\n            elem.parentNode.selectedIndex;\n          }\n\n          return elem.selected === true;\n        },\n        // Contents\n        \"empty\": function (elem) {\n          // http://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n\n          return true;\n        },\n        \"parent\": function (elem) {\n          return !Expr.pseudos[\"empty\"](elem);\n        },\n        // Element/input types\n        \"header\": function (elem) {\n          return rheader.test(elem.nodeName);\n        },\n        \"input\": function (elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        \"button\": function (elem) {\n          var name = elem.nodeName.toLowerCase();\n          return name === \"input\" && elem.type === \"button\" || name === \"button\";\n        },\n        \"text\": function (elem) {\n          var attr;\n          return elem.nodeName.toLowerCase() === \"input\" && elem.type === \"text\" && ( // Support: IE<8\n          // New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        \"first\": createPositionalPseudo(function () {\n          return [0];\n        }),\n        \"last\": createPositionalPseudo(function (matchIndexes, length) {\n          return [length - 1];\n        }),\n        \"eq\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        \"even\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"odd\": createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"lt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        }),\n        \"gt\": createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"]; // Add button/input type pseudos\n\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    } // Easy API for creating new setFilters\n\n\n    function setFilters() {}\n\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n\n    tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n      var matched,\n          match,\n          tokens,\n          type,\n          soFar,\n          groups,\n          preFilters,\n          cached = tokenCache[selector + \" \"];\n\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n\n          groups.push(tokens = []);\n        }\n\n        matched = false; // Combinators\n\n        if (match = rcombinators.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrim, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        } // Filters\n\n\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n\n        if (!matched) {\n          break;\n        }\n      } // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n\n\n      return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    };\n\n    function toSelector(tokens) {\n      var i = 0,\n          len = tokens.length,\n          selector = \"\";\n\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n\n      return selector;\n    }\n\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n          skip = combinator.next,\n          key = skip || dir,\n          checkNonElements = base && key === \"parentNode\",\n          doneName = done++;\n      return combinator.first ? // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n\n        return false;\n      } : // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n            uniqueCache,\n            outerCache,\n            newCache = [dirruns, doneName]; // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {}); // Support: IE <9 only\n              // Defend against cloned attroperties (jQuery gh-1709)\n\n              uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n\n              if (skip && skip === elem.nodeName.toLowerCase()) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                uniqueCache[key] = newCache; // A match means we're done; a fail means we have to keep checking\n\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n\n        return false;\n      };\n    }\n\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n\n        return true;\n      } : matchers[0];\n    }\n\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n          len = contexts.length;\n\n      for (; i < len; i++) {\n        Sizzle(selector, contexts[i], results);\n      }\n\n      return results;\n    }\n\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n          newUnmatched = [],\n          i = 0,\n          len = unmatched.length,\n          mapped = map != null;\n\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n\n      return newUnmatched;\n    }\n\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n            i,\n            elem,\n            preMap = [],\n            postMap = [],\n            preexisting = results.length,\n            // Get initial elements from seed or context\n        elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n            // Prefilter to get matcher input, preserving a map for seed-results synchronization\n        matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems,\n            matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n        postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n        [] : // ...otherwise use results directly\n        results : matcherIn; // Find primary matches\n\n        if (matcher) {\n          matcher(matcherIn, matcherOut, context, xml);\n        } // Apply postFilter\n\n\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml); // Un-match failing elements by moving them back to matcherIn\n\n          i = temp.length;\n\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n\n              postFinder(null, matcherOut = [], temp, xml);\n            } // Move matched elements from seed to results to keep them synchronized\n\n\n            i = matcherOut.length;\n\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          } // Add elements to results, through postFinder if defined\n\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n\n    function matcherFromTokens(tokens) {\n      var checkContext,\n          matcher,\n          j,\n          len = tokens.length,\n          leadingRelative = Expr.relative[tokens[0].type],\n          implicitRelative = leadingRelative || Expr.relative[\" \"],\n          i = leadingRelative ? 1 : 0,\n          // The foundational matcher ensures that elements are reachable from top-level context(s)\n      matchContext = addCombinator(function (elem) {\n        return elem === checkContext;\n      }, implicitRelative, true),\n          matchAnyContext = addCombinator(function (elem) {\n        return indexOf(checkContext, elem) > -1;\n      }, implicitRelative, true),\n          matchers = [function (elem, context, xml) {\n        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml)); // Avoid hanging onto element (issue #299)\n\n        checkContext = null;\n        return ret;\n      }];\n\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches); // Return special upon seeing a positional matcher\n\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector( // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrim, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n\n          matchers.push(matcher);\n        }\n      }\n\n      return elementMatcher(matchers);\n    }\n\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n          byElement = elementMatchers.length > 0,\n          superMatcher = function (seed, context, xml, results, outermost) {\n        var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n        elems = seed || byElement && Expr.find[\"TAG\"](\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n\n        if (outermost) {\n          outermostContext = context === document || context || outermost;\n        } // Add elements passing elementMatchers directly to results\n        // Support: IE<9, Safari\n        // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\n\n        for (; i !== len && (elem = elems[i]) != null; i++) {\n          if (byElement && elem) {\n            j = 0;\n\n            if (!context && elem.ownerDocument !== document) {\n              setDocument(elem);\n              xml = !documentIsHTML;\n            }\n\n            while (matcher = elementMatchers[j++]) {\n              if (matcher(elem, context || document, xml)) {\n                results.push(elem);\n                break;\n              }\n            }\n\n            if (outermost) {\n              dirruns = dirrunsUnique;\n            }\n          } // Track unmatched elements for set filters\n\n\n          if (bySet) {\n            // They will have gone through all possible matchers\n            if (elem = !matcher && elem) {\n              matchedCount--;\n            } // Lengthen the array for every element, matched or not\n\n\n            if (seed) {\n              unmatched.push(elem);\n            }\n          }\n        } // `i` is now the count of elements visited above, and adding it to `matchedCount`\n        // makes the latter nonnegative.\n\n\n        matchedCount += i; // Apply set filters to unmatched elements\n        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n        // no element matchers and no seed.\n        // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n        // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n        // numerically zero.\n\n        if (bySet && i !== matchedCount) {\n          j = 0;\n\n          while (matcher = setMatchers[j++]) {\n            matcher(unmatched, setMatched, context, xml);\n          }\n\n          if (seed) {\n            // Reintegrate element matches to eliminate the need for sorting\n            if (matchedCount > 0) {\n              while (i--) {\n                if (!(unmatched[i] || setMatched[i])) {\n                  setMatched[i] = pop.call(results);\n                }\n              }\n            } // Discard index placeholder values to get only actual matches\n\n\n            setMatched = condense(setMatched);\n          } // Add matches to results\n\n\n          push.apply(results, setMatched); // Seedless set matches succeeding multiple successful matchers stipulate sorting\n\n          if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n            Sizzle.uniqueSort(results);\n          }\n        } // Override manipulation of globals by nested matchers\n\n\n        if (outermost) {\n          dirruns = dirrunsUnique;\n          outermostContext = contextBackup;\n        }\n\n        return unmatched;\n      };\n\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n\n    compile = Sizzle.compile = function (selector, match\n    /* Internal Use Only */\n    ) {\n      var i,\n          setMatchers = [],\n          elementMatchers = [],\n          cached = compilerCache[selector + \" \"];\n\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n\n        i = match.length;\n\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        } // Cache the compiled function\n\n\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers)); // Save selector and tokenization\n\n        cached.selector = selector;\n      }\n\n      return cached;\n    };\n    /**\n     * A low-level selection function that works with Sizzle's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with Sizzle.compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n\n\n    select = Sizzle.select = function (selector, context, results, seed) {\n      var i,\n          tokens,\n          token,\n          type,\n          find,\n          compiled = typeof selector === \"function\" && selector,\n          match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || []; // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find[\"ID\"](token.matches[0].replace(runescape, funescape), context) || [])[0];\n\n          if (!context) {\n            return results; // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n\n          selector = selector.slice(tokens.shift().value.length);\n        } // Fetch a seed set for right-to-left matching\n\n\n        i = matchExpr[\"needsContext\"].test(selector) ? 0 : tokens.length;\n\n        while (i--) {\n          token = tokens[i]; // Abort if we hit a combinator\n\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n\n              break;\n            }\n          }\n        }\n      } // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n\n\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }; // One-time assignments\n    // Sort stability\n\n\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando; // Support: Chrome 14-35+\n    // Always assume duplicates if they aren't passed to the comparison function\n\n    support.detectDuplicates = !!hasDuplicate; // Initialize against the default document\n\n    setDocument(); // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n    // Detached nodes confoundingly follow *each other*\n\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    }); // Support: IE<8\n    // Prevent attribute/property \"interpolation\"\n    // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n\n    if (!assert(function (el) {\n      el.innerHTML = \"<a href='#'></a>\";\n      return el.firstChild.getAttribute(\"href\") === \"#\";\n    })) {\n      addHandle(\"type|href|height|width\", function (elem, name, isXML) {\n        if (!isXML) {\n          return elem.getAttribute(name, name.toLowerCase() === \"type\" ? 1 : 2);\n        }\n      });\n    } // Support: IE<9\n    // Use defaultValue in place of getAttribute(\"value\")\n\n\n    if (!support.attributes || !assert(function (el) {\n      el.innerHTML = \"<input/>\";\n      el.firstChild.setAttribute(\"value\", \"\");\n      return el.firstChild.getAttribute(\"value\") === \"\";\n    })) {\n      addHandle(\"value\", function (elem, name, isXML) {\n        if (!isXML && elem.nodeName.toLowerCase() === \"input\") {\n          return elem.defaultValue;\n        }\n      });\n    } // Support: IE<9\n    // Use getAttributeNode to fetch booleans when getAttribute lies\n\n\n    if (!assert(function (el) {\n      return el.getAttribute(\"disabled\") == null;\n    })) {\n      addHandle(booleans, function (elem, name, isXML) {\n        var val;\n\n        if (!isXML) {\n          return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        }\n      });\n    }\n\n    return Sizzle;\n  }(window);\n\n  jQuery.find = Sizzle;\n  jQuery.expr = Sizzle.selectors; // Deprecated\n\n  jQuery.expr[\":\"] = jQuery.expr.pseudos;\n  jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n  jQuery.text = Sizzle.getText;\n  jQuery.isXMLDoc = Sizzle.isXML;\n  jQuery.contains = Sizzle.contains;\n  jQuery.escapeSelector = Sizzle.escape;\n\n  var dir = function (elem, dir, until) {\n    var matched = [],\n        truncate = until !== undefined;\n\n    while ((elem = elem[dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n\n        matched.push(elem);\n      }\n    }\n\n    return matched;\n  };\n\n  var siblings = function (n, elem) {\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  };\n\n  var rneedsContext = jQuery.expr.match.needsContext;\n\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  ;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i; // Implement the identical functionality for filter and not\n\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    } // Single element\n\n\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    } // Arraylike of elements (jQuery, arguments, Array)\n\n\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    } // Filtered directly for both simple and complex selectors\n\n\n    return jQuery.filter(qualifier, elements, not);\n  }\n\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n\n  jQuery.fn.extend({\n    find: function (selector) {\n      var i,\n          ret,\n          len = this.length,\n          self = this;\n\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n\n      ret = this.pushStack([]);\n\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function (selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function (selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function (selector) {\n      return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  }); // Initialize a jQuery object\n  // A central reference to the root jQuery(document)\n\n  var rootjQuery,\n      // A simple way to check for HTML strings\n  // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n  // Strict HTML recognition (#11290: must start with <)\n  // Shortcut simple #id case for speed\n  rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n      init = jQuery.fn.init = function (selector, context, root) {\n    var match, elem; // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\n    if (!selector) {\n      return this;\n    } // Method init() accepts an alternate rootjQuery\n    // so migrate can support jQuery.sub (gh-2101)\n\n\n    root = root || rootjQuery; // Handle HTML strings\n\n    if (typeof selector === \"string\") {\n      if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n        // Assume that strings that start and end with <> are HTML and skip the regex check\n        match = [null, selector, null];\n      } else {\n        match = rquickExpr.exec(selector);\n      } // Match html or make sure no context is specified for #id\n\n\n      if (match && (match[1] || !context)) {\n        // HANDLE: $(html) -> $(array)\n        if (match[1]) {\n          context = context instanceof jQuery ? context[0] : context; // Option to run scripts is true for back-compat\n          // Intentionally let the error be thrown if parseHTML is not present\n\n          jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true)); // HANDLE: $(html, props)\n\n          if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n            for (match in context) {\n              // Properties of context are called as methods if possible\n              if (isFunction(this[match])) {\n                this[match](context[match]); // ...and otherwise set as attributes\n              } else {\n                this.attr(match, context[match]);\n              }\n            }\n          }\n\n          return this; // HANDLE: $(#id)\n        } else {\n          elem = document.getElementById(match[2]);\n\n          if (elem) {\n            // Inject the element directly into the jQuery object\n            this[0] = elem;\n            this.length = 1;\n          }\n\n          return this;\n        } // HANDLE: $(expr, $(...))\n\n      } else if (!context || context.jquery) {\n        return (context || root).find(selector); // HANDLE: $(expr, context)\n        // (which is just equivalent to: $(context).find(expr)\n      } else {\n        return this.constructor(context).find(selector);\n      } // HANDLE: $(DOMElement)\n\n    } else if (selector.nodeType) {\n      this[0] = selector;\n      this.length = 1;\n      return this; // HANDLE: $(function)\n      // Shortcut for document ready\n    } else if (isFunction(selector)) {\n      return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n      selector(jQuery);\n    }\n\n    return jQuery.makeArray(selector, this);\n  }; // Give the init function the jQuery prototype for later instantiation\n\n\n  init.prototype = jQuery.fn; // Initialize central reference\n\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n      // Methods guaranteed to produce a unique set when starting from a unique set\n  guaranteedUnique = {\n    children: true,\n    contents: true,\n    next: true,\n    prev: true\n  };\n  jQuery.fn.extend({\n    has: function (target) {\n      var targets = jQuery(target, this),\n          l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function (selectors, context) {\n      var cur,\n          i = 0,\n          l = this.length,\n          matched = [],\n          targets = typeof selectors !== \"string\" && jQuery(selectors); // Positional selectors never match, since there's no _selection_ context\n\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function (elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      } // Index in selector\n\n\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      } // Locate the position of the desired element\n\n\n      return indexOf.call(this, // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function (selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function (selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n\n    return cur;\n  }\n\n  jQuery.each({\n    parent: function (elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function (elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function (elem, i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function (elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function (elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function (elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function (elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function (elem, i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function (elem, i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function (elem) {\n      return siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function (elem) {\n      return siblings(elem.firstChild);\n    },\n    contents: function (elem) {\n      if (nodeName(elem, \"iframe\")) {\n        return elem.contentDocument;\n      } // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n\n\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        } // Reverse order for parents* and prev-derivatives\n\n\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g; // Convert String-formatted options into Object-formatted ones\n\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n\n\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n\n    var // Flag to know if list is currently firing\n    firing,\n        // Last fire value for non-forgettable lists\n    memory,\n        // Flag to know if list was already fired\n    fired,\n        // Flag to prevent firing\n    locked,\n        // Actual callback list\n    list = [],\n        // Queue of execution data for repeatable lists\n    queue = [],\n        // Index of currently firing callback (modified by add/remove as needed)\n    firingIndex = -1,\n        // Fire callbacks\n    fire = function () {\n      // Enforce single-firing\n      locked = locked || options.once; // Execute callbacks for all pending executions,\n      // respecting firingIndex overrides and runtime changes\n\n      fired = firing = true;\n\n      for (; queue.length; firingIndex = -1) {\n        memory = queue.shift();\n\n        while (++firingIndex < list.length) {\n          // Run callback and check for early termination\n          if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n            // Jump to end and forget the data so .add doesn't re-fire\n            firingIndex = list.length;\n            memory = false;\n          }\n        }\n      } // Forget the data if we're done with it\n\n\n      if (!options.memory) {\n        memory = false;\n      }\n\n      firing = false; // Clean up if we're done firing for good\n\n      if (locked) {\n        // Keep an empty list if we have data for future add calls\n        if (memory) {\n          list = []; // Otherwise, this object is spent\n        } else {\n          list = \"\";\n        }\n      }\n    },\n        // Actual Callbacks object\n    self = {\n      // Add a callback or a collection of callbacks to the list\n      add: function () {\n        if (list) {\n          // If we have memory from a past run, we should fire after adding\n          if (memory && !firing) {\n            firingIndex = list.length - 1;\n            queue.push(memory);\n          }\n\n          (function add(args) {\n            jQuery.each(args, function (_, arg) {\n              if (isFunction(arg)) {\n                if (!options.unique || !self.has(arg)) {\n                  list.push(arg);\n                }\n              } else if (arg && arg.length && toType(arg) !== \"string\") {\n                // Inspect recursively\n                add(arg);\n              }\n            });\n          })(arguments);\n\n          if (memory && !firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Remove a callback from the list\n      remove: function () {\n        jQuery.each(arguments, function (_, arg) {\n          var index;\n\n          while ((index = jQuery.inArray(arg, list, index)) > -1) {\n            list.splice(index, 1); // Handle firing indexes\n\n            if (index <= firingIndex) {\n              firingIndex--;\n            }\n          }\n        });\n        return this;\n      },\n      // Check if a given callback is in the list.\n      // If no argument is given, return whether or not list has callbacks attached.\n      has: function (fn) {\n        return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n      },\n      // Remove all callbacks from the list\n      empty: function () {\n        if (list) {\n          list = [];\n        }\n\n        return this;\n      },\n      // Disable .fire and .add\n      // Abort any current/pending executions\n      // Clear all callbacks and values\n      disable: function () {\n        locked = queue = [];\n        list = memory = \"\";\n        return this;\n      },\n      disabled: function () {\n        return !list;\n      },\n      // Disable .fire\n      // Also disable .add unless we have memory (since it would have no effect)\n      // Abort any pending executions\n      lock: function () {\n        locked = queue = [];\n\n        if (!memory && !firing) {\n          list = memory = \"\";\n        }\n\n        return this;\n      },\n      locked: function () {\n        return !!locked;\n      },\n      // Call all callbacks with the given context and arguments\n      fireWith: function (context, args) {\n        if (!locked) {\n          args = args || [];\n          args = [context, args.slice ? args.slice() : args];\n          queue.push(args);\n\n          if (!firing) {\n            fire();\n          }\n        }\n\n        return this;\n      },\n      // Call all the callbacks with the given arguments\n      fire: function () {\n        self.fireWith(this, arguments);\n        return this;\n      },\n      // To know if the callbacks have already been called at least once\n      fired: function () {\n        return !!fired;\n      }\n    };\n\n    return self;\n  };\n\n  function Identity(v) {\n    return v;\n  }\n\n  function Thrower(ex) {\n    throw ex;\n  }\n\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject); // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject); // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      } // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n\n  jQuery.extend({\n    Deferred: function (func) {\n      var tuples = [// action, add listener, callbacks,\n      // ... .then handlers, argument index, [final state]\n      [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n          state = \"pending\",\n          promise = {\n        state: function () {\n          return state;\n        },\n        always: function () {\n          deferred.done(arguments).fail(arguments);\n          return this;\n        },\n        \"catch\": function (fn) {\n          return promise.then(null, fn);\n        },\n        // Keep pipe for back-compat\n        pipe: function ()\n        /* fnDone, fnFail, fnProgress */\n        {\n          var fns = arguments;\n          return jQuery.Deferred(function (newDefer) {\n            jQuery.each(tuples, function (i, tuple) {\n              // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n              var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]]; // deferred.progress(function() { bind to newDefer or newDefer.notify })\n              // deferred.done(function() { bind to newDefer or newDefer.resolve })\n              // deferred.fail(function() { bind to newDefer or newDefer.reject })\n\n              deferred[tuple[1]](function () {\n                var returned = fn && fn.apply(this, arguments);\n\n                if (returned && isFunction(returned.promise)) {\n                  returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                } else {\n                  newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                }\n              });\n            });\n            fns = null;\n          }).promise();\n        },\n        then: function (onFulfilled, onRejected, onProgress) {\n          var maxDepth = 0;\n\n          function resolve(depth, deferred, handler, special) {\n            return function () {\n              var that = this,\n                  args = arguments,\n                  mightThrow = function () {\n                var returned, then; // Support: Promises/A+ section 2.3.3.3.3\n                // https://promisesaplus.com/#point-59\n                // Ignore double-resolution attempts\n\n                if (depth < maxDepth) {\n                  return;\n                }\n\n                returned = handler.apply(that, args); // Support: Promises/A+ section 2.3.1\n                // https://promisesaplus.com/#point-48\n\n                if (returned === deferred.promise()) {\n                  throw new TypeError(\"Thenable self-resolution\");\n                } // Support: Promises/A+ sections 2.3.3.1, 3.5\n                // https://promisesaplus.com/#point-54\n                // https://promisesaplus.com/#point-75\n                // Retrieve `then` only once\n\n\n                then = returned && ( // Support: Promises/A+ section 2.3.4\n                // https://promisesaplus.com/#point-64\n                // Only check objects and functions for thenability\n                typeof returned === \"object\" || typeof returned === \"function\") && returned.then; // Handle a returned thenable\n\n                if (isFunction(then)) {\n                  // Special processors (notify) just wait for resolution\n                  if (special) {\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special)); // Normal processors (resolve) also hook into progress\n                  } else {\n                    // ...and disregard older resolution values\n                    maxDepth++;\n                    then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                  } // Handle all other returned values\n\n                } else {\n                  // Only substitute handlers pass on context\n                  // and multiple values (non-spec behavior)\n                  if (handler !== Identity) {\n                    that = undefined;\n                    args = [returned];\n                  } // Process the value(s)\n                  // Default process is resolve\n\n\n                  (special || deferred.resolveWith)(that, args);\n                }\n              },\n                  // Only normal processors (resolve) catch and reject exceptions\n              process = special ? mightThrow : function () {\n                try {\n                  mightThrow();\n                } catch (e) {\n                  if (jQuery.Deferred.exceptionHook) {\n                    jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                  } // Support: Promises/A+ section 2.3.3.3.4.1\n                  // https://promisesaplus.com/#point-61\n                  // Ignore post-resolution exceptions\n\n\n                  if (depth + 1 >= maxDepth) {\n                    // Only substitute handlers pass on context\n                    // and multiple values (non-spec behavior)\n                    if (handler !== Thrower) {\n                      that = undefined;\n                      args = [e];\n                    }\n\n                    deferred.rejectWith(that, args);\n                  }\n                }\n              }; // Support: Promises/A+ section 2.3.3.3.1\n              // https://promisesaplus.com/#point-57\n              // Re-resolve promises immediately to dodge false rejection from\n              // subsequent errors\n\n\n              if (depth) {\n                process();\n              } else {\n                // Call an optional hook to record the stack, in case of exception\n                // since it's otherwise lost when execution goes async\n                if (jQuery.Deferred.getStackHook) {\n                  process.stackTrace = jQuery.Deferred.getStackHook();\n                }\n\n                window.setTimeout(process);\n              }\n            };\n          }\n\n          return jQuery.Deferred(function (newDefer) {\n            // progress_handlers.add( ... )\n            tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith)); // fulfilled_handlers.add( ... )\n\n            tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity)); // rejected_handlers.add( ... )\n\n            tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n          }).promise();\n        },\n        // Get a promise for this deferred\n        // If obj is provided, the promise aspect is added to the object\n        promise: function (obj) {\n          return obj != null ? jQuery.extend(obj, promise) : promise;\n        }\n      },\n          deferred = {}; // Add list-specific methods\n\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n            stateString = tuple[5]; // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n\n        promise[tuple[1]] = list.add; // Handle state\n\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            state = stateString;\n          }, // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable, // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable, // progress_callbacks.lock\n          tuples[0][2].lock, // progress_handlers.lock\n          tuples[0][3].lock);\n        } // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n\n\n        list.add(tuple[3].fire); // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        }; // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n\n\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      }); // Make the deferred a promise\n\n      promise.promise(deferred); // Call given func if any\n\n      if (func) {\n        func.call(deferred, deferred);\n      } // All done!\n\n\n      return deferred;\n    },\n    // Deferred helper\n    when: function (singleValue) {\n      var // count of uncompleted subordinates\n      remaining = arguments.length,\n          // count of unprocessed arguments\n      i = remaining,\n          // subordinate fulfillment data\n      resolveContexts = Array(i),\n          resolveValues = slice.call(arguments),\n          // the master Deferred\n      master = jQuery.Deferred(),\n          // subordinate callback factory\n      updateFunc = function (i) {\n        return function (value) {\n          resolveContexts[i] = this;\n          resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n\n          if (! --remaining) {\n            master.resolveWith(resolveContexts, resolveValues);\n          }\n        };\n      }; // Single- and empty arguments are adopted like Promise.resolve\n\n\n      if (remaining <= 1) {\n        adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining); // Use .then() to unwrap secondary thenables (cf. gh-3000)\n\n        if (master.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return master.then();\n        }\n      } // Multiple arguments are aggregated like Promise.all array elements\n\n\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), master.reject);\n      }\n\n      return master.promise();\n    }\n  }); // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  jQuery.Deferred.exceptionHook = function (error, stack) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, stack);\n    }\n  };\n\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  }; // The deferred used on DOM ready\n\n\n  var readyList = jQuery.Deferred();\n\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn) // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    .catch(function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See #6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function (wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      } // Remember that the DOM is ready\n\n\n      jQuery.isReady = true; // If a normal DOM Ready event fired, decrement, and wait if need be\n\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      } // If there are functions bound, to execute\n\n\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then; // The ready event handler and self cleanup method\n\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  } // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n\n\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed); // A fallback to window.onload, that will always work\n\n    window.addEventListener(\"load\", completed);\n  } // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n\n\n  var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n        len = elems.length,\n        bulk = key == null; // Sets many values\n\n    if (toType(key) === \"object\") {\n      chainable = true;\n\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      } // Sets one value\n\n    } else if (value !== undefined) {\n      chainable = true;\n\n      if (!isFunction(value)) {\n        raw = true;\n      }\n\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null; // ...except when executing function values\n        } else {\n          bulk = fn;\n\n          fn = function (elem, key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n\n    if (chainable) {\n      return elems;\n    } // Gets\n\n\n    if (bulk) {\n      return fn.call(elems);\n    }\n\n    return len ? fn(elems[0], key) : emptyGet;\n  }; // Matches dashed string for camelizing\n\n\n  var rmsPrefix = /^-ms-/,\n      rdashAlpha = /-([a-z])/g; // Used by camelCase as callback to replace()\n\n  function fcamelCase(all, letter) {\n    return letter.toUpperCase();\n  } // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (#9572)\n\n\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n\n  var acceptData = function (owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function (owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando]; // If not, create one\n\n      if (!value) {\n        value = {}; // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see #8335.\n        // Always return an empty object.\n\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value; // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function (owner, data, value) {\n      var prop,\n          cache = this.cache(owner); // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value; // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n\n      return cache;\n    },\n    get: function (owner, key) {\n      return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function (owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      } // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n\n\n      this.set(owner, key, value); // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n\n      return value !== undefined ? value : key;\n    },\n    remove: function (owner, key) {\n      var i,\n          cache = owner[this.expando];\n\n      if (cache === undefined) {\n        return;\n      }\n\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key); // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n\n        i = key.length;\n\n        while (i--) {\n          delete cache[key[i]];\n        }\n      } // Remove the expando if there's no more data\n\n\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function (owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data(); //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n      rmultiDash = /[A-Z]/g;\n\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n\n    if (data === \"false\") {\n      return false;\n    }\n\n    if (data === \"null\") {\n      return null;\n    } // Only convert to a number if it doesn't change the string\n\n\n    if (data === +data + \"\") {\n      return +data;\n    }\n\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n\n    return data;\n  }\n\n  function dataAttr(elem, key, data) {\n    var name; // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {} // Make sure we set the data so it isn't changed later\n\n\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n\n    return data;\n  }\n\n  jQuery.extend({\n    hasData: function (elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function (elem, name, data) {\n      return dataUser.access(elem, name, data);\n    },\n    removeData: function (elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function (elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function (elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function (key, value) {\n      var i,\n          name,\n          data,\n          elem = this[0],\n          attrs = elem && elem.attributes; // Gets all values\n\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (#14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n\n        return data;\n      } // Sets multiple values\n\n\n      if (typeof key === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n\n      return access(this, function (value) {\n        var data; // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n\n\n          data = dataAttr(elem, key);\n\n          if (data !== undefined) {\n            return data;\n          } // We tried really hard, but the data doesn't exist.\n\n\n          return;\n        } // Set the data...\n\n\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function (key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function (elem, type, data) {\n      var queue;\n\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type); // Speed up dequeue by getting out quickly if this is just a lookup\n\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n\n        return queue || [];\n      }\n    },\n    dequeue: function (elem, type) {\n      type = type || \"fx\";\n\n      var queue = jQuery.queue(elem, type),\n          startLength = queue.length,\n          fn = queue.shift(),\n          hooks = jQuery._queueHooks(elem, type),\n          next = function () {\n        jQuery.dequeue(elem, type);\n      }; // If the fx queue is dequeued, always remove the progress sentinel\n\n\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        } // Clear up the last queue stop function\n\n\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function (elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function (type, data) {\n      var setter = 2;\n\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data); // Ensure a hooks for this queue\n\n        jQuery._queueHooks(this, type);\n\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function (type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function (type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function (type, obj) {\n      var tmp,\n          count = 1,\n          defer = jQuery.Deferred(),\n          elements = this,\n          i = this.length,\n          resolve = function () {\n        if (! --count) {\n          defer.resolveWith(elements, [elements]);\n        }\n      };\n\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n\n      type = type || \"fx\";\n\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n\n  var isHiddenWithinTree = function (elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem; // Inline style trumps all\n\n    return elem.style.display === \"none\" || elem.style.display === \"\" && // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n\n  var swap = function (elem, options, callback, args) {\n    var ret,\n        name,\n        old = {}; // Remember the old values, and insert the new ones\n\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n\n    ret = callback.apply(elem, args || []); // Revert the old values\n\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n\n    return ret;\n  };\n\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n        scale,\n        maxIterations = 20,\n        currentValue = tween ? function () {\n      return tween.cur();\n    } : function () {\n      return jQuery.css(elem, prop, \"\");\n    },\n        initial = currentValue(),\n        unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n        // Starting value computation is required for potential unit mismatches\n    initialInUnit = (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2; // Trust units reported by jQuery.css\n\n      unit = unit || initialInUnit[3]; // Iteratively approximate from a nonzero starting point\n\n      initialInUnit = +initial || 1;\n\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n\n        initialInUnit = initialInUnit / scale;\n      }\n\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit); // Make sure we update the tween properties later on\n\n      valueParts = valueParts || [];\n    }\n\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0; // Apply relative offset (+=/-=) if specified\n\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n\n    return adjusted;\n  }\n\n  var defaultDisplayMap = {};\n\n  function getDefaultDisplay(elem) {\n    var temp,\n        doc = elem.ownerDocument,\n        nodeName = elem.nodeName,\n        display = defaultDisplayMap[nodeName];\n\n    if (display) {\n      return display;\n    }\n\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n\n    if (display === \"none\") {\n      display = \"block\";\n    }\n\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n\n  function showHide(elements, show) {\n    var display,\n        elem,\n        values = [],\n        index = 0,\n        length = elements.length; // Determine new display value for elements that need to change\n\n    for (; index < length; index++) {\n      elem = elements[index];\n\n      if (!elem.style) {\n        continue;\n      }\n\n      display = elem.style.display;\n\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\"; // Remember what we're overwriting\n\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    } // Set the display of the elements in a second loop to avoid constant reflow\n\n\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n\n    return elements;\n  }\n\n  jQuery.fn.extend({\n    show: function () {\n      return showHide(this, true);\n    },\n    hide: function () {\n      return showHide(this);\n    },\n    toggle: function (state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i; // We have to close these tags to support XHTML (#13200)\n\n  var wrapMap = {\n    // Support: IE <=9 only\n    option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  }; // Support: IE <=9 only\n\n  wrapMap.optgroup = wrapMap.option;\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n    var ret;\n\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n\n    return ret;\n  } // Mark scripts as having already been evaluated\n\n\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n\n  var rhtml = /<|&#?\\w+;/;\n\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n        tmp,\n        tag,\n        wrap,\n        contains,\n        j,\n        fragment = context.createDocumentFragment(),\n        nodes = [],\n        i = 0,\n        l = elems.length;\n\n    for (; i < l; i++) {\n      elem = elems[i];\n\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem); // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem)); // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\")); // Deserialize a standard representation\n\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]; // Descend through wrappers to the right content\n\n          j = wrap[0];\n\n          while (j--) {\n            tmp = tmp.lastChild;\n          } // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n\n\n          jQuery.merge(nodes, tmp.childNodes); // Remember the top-level container\n\n          tmp = fragment.firstChild; // Ensure the created nodes are orphaned (#12392)\n\n          tmp.textContent = \"\";\n        }\n      }\n    } // Remove wrapper from fragment\n\n\n    fragment.textContent = \"\";\n    i = 0;\n\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n\n        continue;\n      }\n\n      contains = jQuery.contains(elem.ownerDocument, elem); // Append to fragment\n\n      tmp = getAll(fragment.appendChild(elem), \"script\"); // Preserve script evaluation history\n\n      if (contains) {\n        setGlobalEval(tmp);\n      } // Capture executables\n\n\n      if (scripts) {\n        j = 0;\n\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n\n    return fragment;\n  }\n\n  (function () {\n    var fragment = document.createDocumentFragment(),\n        div = fragment.appendChild(document.createElement(\"div\")),\n        input = document.createElement(\"input\"); // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (#11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (#14901)\n\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input); // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked; // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n  })();\n\n  var documentElement = document.documentElement;\n  var rkeyEvent = /^key/,\n      rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n      rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Support: IE <=9 only\n  // See #13393 for more info\n\n\n  function safeActiveElement() {\n    try {\n      return document.activeElement;\n    } catch (err) {}\n  }\n\n  function on(elem, types, selector, data, fn, one) {\n    var origFn, type; // Types can be a map of types/handlers\n\n    if (typeof types === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n\n      for (type in types) {\n        on(elem, type, selector, data, types[type], one);\n      }\n\n      return elem;\n    }\n\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n\n    if (one === 1) {\n      origFn = fn;\n\n      fn = function (event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      }; // Use same guid so caller can remove using origFn\n\n\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n\n\n  jQuery.event = {\n    global: {},\n    add: function (elem, types, handler, data, selector) {\n      var handleObjIn,\n          eventHandle,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.get(elem); // Don't attach events to noData or text/comment nodes (but allow plain objects)\n\n      if (!elemData) {\n        return;\n      } // Caller can pass in an object of custom data in lieu of the handler\n\n\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      } // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n\n\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      } // Make sure that the handler has a unique ID, used to find/remove it later\n\n\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      } // Init the element's event structure and main handler, if this is the first\n\n\n      if (!(events = elemData.events)) {\n        events = elemData.events = {};\n      }\n\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      } // Handle multiple events separated by a space\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // There *must* be a type, no attaching namespace-only handlers\n\n        if (!type) {\n          continue;\n        } // If event changes its type, use the special event handlers for the changed type\n\n\n        special = jQuery.event.special[type] || {}; // If selector defined, determine special event api type, otherwise given type\n\n        type = (selector ? special.delegateType : special.bindType) || type; // Update special based on newly reset type\n\n        special = jQuery.event.special[type] || {}; // handleObj is passed to all event handlers\n\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn); // Init the event handler queue if we're the first\n\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0; // Only use addEventListener if the special events handler returns false\n\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n\n        if (special.add) {\n          special.add.call(elem, handleObj);\n\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        } // Add to the element's handler list, delegates in front\n\n\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        } // Keep track of which events have ever been used, for event optimization\n\n\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function (elem, types, handler, selector, mappedTypes) {\n      var j,\n          origCount,\n          tmp,\n          events,\n          t,\n          handleObj,\n          special,\n          handlers,\n          type,\n          namespaces,\n          origType,\n          elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      } // Once for each type.namespace in types; type may be omitted\n\n\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort(); // Unbind all events (on this namespace, if provided) for the element\n\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n\n          continue;\n        }\n\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"); // Remove matching events\n\n        origCount = j = handlers.length;\n\n        while (j--) {\n          handleObj = handlers[j];\n\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        } // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n\n\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n\n          delete events[type];\n        }\n      } // Remove data and the expando if it's no longer used\n\n\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function (nativeEvent) {\n      // Make a writable jQuery.Event from the native event object\n      var event = jQuery.event.fix(nativeEvent);\n      var i,\n          j,\n          ret,\n          matched,\n          handleObj,\n          handlerQueue,\n          args = new Array(arguments.length),\n          handlers = (dataPriv.get(this, \"events\") || {})[event.type] || [],\n          special = jQuery.event.special[event.type] || {}; // Use the fix-ed jQuery.Event rather than the (read-only) native event\n\n      args[0] = event;\n\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      event.delegateTarget = this; // Call the preDispatch hook for the mapped type, and let it bail if desired\n\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      } // Determine handlers\n\n\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers); // Run delegates first; they may want to stop propagation beneath us\n\n      i = 0;\n\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n          // a subset or equal to those in the bound event (both can have no namespace).\n          if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      } // Call the postDispatch hook for the mapped type\n\n\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n\n      return event.result;\n    },\n    handlers: function (event, handlers) {\n      var i,\n          handleObj,\n          sel,\n          matchedHandlers,\n          matchedSelectors,\n          handlerQueue = [],\n          delegateCount = handlers.delegateCount,\n          cur = event.target; // Find delegate handlers\n\n      if (delegateCount && // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType && // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (#13208)\n          // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = handlers[i]; // Don't conflict with Object.prototype properties (#13203)\n\n              sel = handleObj.selector + \" \";\n\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      } // Add the remaining (directly-bound) handlers\n\n\n      cur = this;\n\n      if (delegateCount < handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: handlers.slice(delegateCount)\n        });\n      }\n\n      return handlerQueue;\n    },\n    addProp: function (name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function (value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function (originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      focus: {\n        // Fire native event if possible so blur/focus sequence is correct\n        trigger: function () {\n          if (this !== safeActiveElement() && this.focus) {\n            this.focus();\n            return false;\n          }\n        },\n        delegateType: \"focusin\"\n      },\n      blur: {\n        trigger: function () {\n          if (this === safeActiveElement() && this.blur) {\n            this.blur();\n            return false;\n          }\n        },\n        delegateType: \"focusout\"\n      },\n      click: {\n        // For checkbox, fire native event so checked state will be right\n        trigger: function () {\n          if (this.type === \"checkbox\" && this.click && nodeName(this, \"input\")) {\n            this.click();\n            return false;\n          }\n        },\n        // For cross-browser consistency, don't fire native .click() on links\n        _default: function (event) {\n          return nodeName(event.target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function (event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    } // Event object\n\n\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type; // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse; // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (#504, #13143)\n\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget; // Event type\n    } else {\n      this.type = src;\n    } // Put explicitly provided properties onto the event object\n\n\n    if (props) {\n      jQuery.extend(this, props);\n    } // Create a timestamp if incoming event doesn't have one\n\n\n    this.timeStamp = src && src.timeStamp || Date.now(); // Mark it as fixed\n\n    this[jQuery.expando] = true;\n  }; // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n\n\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function () {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function () {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function () {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n\n      this.stopPropagation();\n    }\n  }; // Includes all common event props including KeyEvent and MouseEvent specific props\n\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: function (event) {\n      var button = event.button; // Add which for key events\n\n      if (event.which == null && rkeyEvent.test(event.type)) {\n        return event.charCode != null ? event.charCode : event.keyCode;\n      } // Add which for click: 1 === left; 2 === middle; 3 === right\n\n\n      if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n        if (button & 1) {\n          return 1;\n        }\n\n        if (button & 2) {\n          return 3;\n        }\n\n        if (button & 4) {\n          return 2;\n        }\n\n        return 0;\n      }\n\n      return event.which;\n    }\n  }, jQuery.event.addProp); // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function (event) {\n        var ret,\n            target = this,\n            related = event.relatedTarget,\n            handleObj = event.handleObj; // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn);\n    },\n    one: function (types, selector, data, fn) {\n      return on(this, types, selector, data, fn, 1);\n    },\n    off: function (types, selector, fn) {\n      var handleObj, type;\n\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n\n      if (typeof types === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n\n        return this;\n      }\n\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n\n      if (fn === false) {\n        fn = returnFalse;\n      }\n\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n  /* eslint-disable max-len */\n  // See https://github.com/eslint/eslint/issues/3229\n  rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n\n  /* eslint-enable */\n  // Support: IE <=10 - 11, Edge 12 - 13 only\n  // In IE/Edge using regex groups here causes severe slowdowns.\n  // See https://connect.microsoft.com/IE/feedback/details/1736512/\n  rnoInnerhtml = /<script|<style|<link/i,\n      // checked=\"checked\" or checked\n  rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n      rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g; // Prefer a tbody over its parent table for containing new rows\n\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n\n    return elem;\n  } // Replace/restore the type attribute of script elements for safe DOM manipulation\n\n\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n\n    return elem;\n  }\n\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n    if (dest.nodeType !== 1) {\n      return;\n    } // 1. Copy private data: events, handlers, etc.\n\n\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.access(src);\n      pdataCur = dataPriv.set(dest, pdataOld);\n      events = pdataOld.events;\n\n      if (events) {\n        delete pdataCur.handle;\n        pdataCur.events = {};\n\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    } // 2. Copy user data\n\n\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  } // Fix IE bugs, see support tests\n\n\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase(); // Fails to persist the checked state of a cloned checkbox or radio button.\n\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked; // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = concat.apply([], args);\n    var fragment,\n        first,\n        scripts,\n        hasScripts,\n        node,\n        doc,\n        i = 0,\n        l = collection.length,\n        iNoClone = l - 1,\n        value = args[0],\n        valueIsFunction = isFunction(value); // We can't cloneNode fragments that contain checked, in WebKit\n\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n\n        domManip(self, args, callback, ignored);\n      });\n    }\n\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      } // Require either new content or an interest in ignored elements to invoke the callback\n\n\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length; // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (#8070).\n\n        for (; i < l; i++) {\n          node = fragment;\n\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true); // Keep references to cloned scripts for later restoration\n\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n\n          callback.call(collection[i], node, i);\n        }\n\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument; // Reenable scripts\n\n          jQuery.map(scripts, restoreScript); // Evaluate executable scripts on first document insertion\n\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl) {\n                  jQuery._evalUrl(node.src);\n                }\n              } else {\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), doc, node);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return collection;\n  }\n\n  function remove(elem, selector, keepData) {\n    var node,\n        nodes = selector ? jQuery.filter(selector, elem) : elem,\n        i = 0;\n\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n\n      if (node.parentNode) {\n        if (keepData && jQuery.contains(node.ownerDocument, node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    return elem;\n  }\n\n  jQuery.extend({\n    htmlPrefilter: function (html) {\n      return html.replace(rxhtmlTag, \"<$1></$2>\");\n    },\n    clone: function (elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n          l,\n          srcElements,\n          destElements,\n          clone = elem.cloneNode(true),\n          inPage = jQuery.contains(elem.ownerDocument, elem); // Fix IE cloning issues\n\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      } // Copy the events from the original to the clone\n\n\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      } // Preserve script evaluation history\n\n\n      destElements = getAll(clone, \"script\");\n\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      } // Return the cloned set\n\n\n      return clone;\n    },\n    cleanData: function (elems) {\n      var data,\n          elem,\n          type,\n          special = jQuery.event.special,\n          i = 0;\n\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type); // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            } // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n\n\n            elem[dataPriv.expando] = undefined;\n          }\n\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function (selector) {\n      return remove(this, selector, true);\n    },\n    remove: function (selector) {\n      return remove(this, selector);\n    },\n    text: function (value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function () {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function () {\n      var elem,\n          i = 0;\n\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false)); // Remove any remaining nodes\n\n          elem.textContent = \"\";\n        }\n      }\n\n      return this;\n    },\n    clone: function (dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function (value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n            i = 0,\n            l = this.length;\n\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        } // See if we can take a shortcut and just use innerHTML\n\n\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {}; // Remove element nodes and prevent memory leaks\n\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n\n            elem = 0; // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function () {\n      var ignored = []; // Make the changes, replacing each non-ignored context element with the new content\n\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        } // Force callback invocation\n\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n          ret = [],\n          insert = jQuery(selector),\n          last = insert.length - 1,\n          i = 0;\n\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems); // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n\n        push.apply(ret, elems.get());\n      }\n\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n\n  var getStyles = function (elem) {\n    // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n\n    if (!view || !view.opener) {\n      view = window;\n    }\n\n    return view.getComputedStyle(elem);\n  };\n\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\"; // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12; // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36; // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36; // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = div.offsetWidth === 36 || \"absolute\";\n      documentElement.removeChild(container); // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n\n      div = null;\n    }\n\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n\n    var pixelPositionVal,\n        boxSizingReliableVal,\n        scrollboxSizeVal,\n        pixelBoxStylesVal,\n        reliableMarginLeftVal,\n        container = document.createElement(\"div\"),\n        div = document.createElement(\"div\"); // Finish early in limited (non-browser) environments\n\n    if (!div.style) {\n      return;\n    } // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (#8908)\n\n\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function () {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function () {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function () {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function () {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function () {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      }\n    });\n  })();\n\n  function curCSS(elem, name, computed) {\n    var width,\n        minWidth,\n        maxWidth,\n        ret,\n        // Support: Firefox 51+\n    // Retrieving style before computed somehow\n    // fixes an issue with getting wrong values\n    // on detached elements\n    style = elem.style;\n    computed = computed || getStyles(elem); // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, #12537)\n    //   .css('--customProperty) (#3144)\n\n    if (computed) {\n      ret = computed.getPropertyValue(name) || computed[name];\n\n      if (ret === \"\" && !jQuery.contains(elem.ownerDocument, elem)) {\n        ret = jQuery.style(elem, name);\n      } // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n\n\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth; // Put in the new values to get a computed value out\n\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width; // Revert the changed values\n\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n\n    return ret !== undefined ? // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function () {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        } // Hook needed; redefine it so that the support test is not executed again.\n\n\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n\n  var // Swappable if display is none or starts with table\n  // except \"table\", \"table-cell\", or \"table-caption\"\n  // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n  rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n      rcustomProp = /^--/,\n      cssShow = {\n    position: \"absolute\",\n    visibility: \"hidden\",\n    display: \"block\"\n  },\n      cssNormalTransform = {\n    letterSpacing: \"0\",\n    fontWeight: \"400\"\n  },\n      cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n      emptyStyle = document.createElement(\"div\").style; // Return a css property mapped to a potentially vendor prefixed property\n\n  function vendorPropName(name) {\n    // Shortcut for names that are not vendor prefixed\n    if (name in emptyStyle) {\n      return name;\n    } // Check for vendor prefixed names\n\n\n    var capName = name[0].toUpperCase() + name.slice(1),\n        i = cssPrefixes.length;\n\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  } // Return a property mapped along what jQuery.cssProps suggests or to\n  // a vendor prefixed property.\n\n\n  function finalPropName(name) {\n    var ret = jQuery.cssProps[name];\n\n    if (!ret) {\n      ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n    }\n\n    return ret;\n  }\n\n  function setPositiveNumber(elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n        extra = 0,\n        delta = 0; // Adjustment may not be necessary\n\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      if (box === \"margin\") {\n        delta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      } // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n\n\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles); // For \"border\" or \"margin\", add border\n\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles); // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        } // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        } // For \"content\" or \"padding\", subtract border\n\n\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    } // Account for positive content-box scroll gutter when requested by providing computedVal\n\n\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5));\n    }\n\n    return delta;\n  }\n\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n        val = curCSS(elem, dimension, styles),\n        isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n        valueIsBorderBox = isBorderBox; // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n\n      val = \"auto\";\n    } // Check for style in case a browser which returns unreliable values\n    // for getComputedStyle silently falls back to the reliable elem.style\n\n\n    valueIsBorderBox = valueIsBorderBox && (support.boxSizingReliable() || val === elem.style[dimension]); // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n\n    if (val === \"auto\" || !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") {\n      val = elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)]; // offsetWidth/offsetHeight provide border-box values\n\n      valueIsBorderBox = true;\n    } // Normalize \"\" and auto\n\n\n    val = parseFloat(val) || 0; // Adjust for the element's box model\n\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles, // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function (elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      \"animationIterationCount\": true,\n      \"columnCount\": true,\n      \"fillOpacity\": true,\n      \"flexGrow\": true,\n      \"flexShrink\": true,\n      \"fontWeight\": true,\n      \"lineHeight\": true,\n      \"opacity\": true,\n      \"order\": true,\n      \"orphans\": true,\n      \"widows\": true,\n      \"zIndex\": true,\n      \"zoom\": true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function (elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      } // Make sure that we're working with the right name\n\n\n      var ret,\n          type,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name),\n          style = elem.style; // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Gets hook for the prefixed version, then unprefixed version\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // Check if we're setting a value\n\n      if (value !== undefined) {\n        type = typeof value; // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret); // Fixes bug #9237\n\n          type = \"number\";\n        } // Make sure that null and NaN values aren't set (#7116)\n\n\n        if (value == null || value !== value) {\n          return;\n        } // If a number was passed in, add the unit (except for certain CSS properties)\n\n\n        if (type === \"number\") {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        } // background-* props affect original clone's values\n\n\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        } // If a hook was provided, use that value, otherwise just set the specified value\n\n\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        } // Otherwise just get the value from the style object\n\n\n        return style[name];\n      }\n    },\n    css: function (elem, name, extra, styles) {\n      var val,\n          num,\n          hooks,\n          origName = camelCase(name),\n          isCustomProp = rcustomProp.test(name); // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      } // Try prefixed name followed by the unprefixed name\n\n\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName]; // If a hook was provided get the computed value from there\n\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      } // Otherwise, if a way to get the computed value exists, use that\n\n\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      } // Convert \"normal\" to computed value\n\n\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      } // Make numeric if forced or a qualifier was provided and val looks numeric\n\n\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function (elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && ( // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function (elem, value, extra) {\n        var matches,\n            styles = getStyles(elem),\n            isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n            subtract = extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles); // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n\n        if (isBorderBox && support.scrollboxSize() === styles.position) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        } // Convert to pixels if value adjustment is needed\n\n\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  }); // These hooks are used by animate to expand properties\n\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function (value) {\n        var i = 0,\n            expanded = {},\n            // Assumes a single number if not a string\n        parts = typeof value === \"string\" ? value.split(\" \") : [value];\n\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n\n        return expanded;\n      }\n    };\n\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function (name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n            len,\n            map = {},\n            i = 0;\n\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n\n          return map;\n        }\n\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function (elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function () {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function (percent) {\n      var eased,\n          hooks = Tween.propHooks[this.prop];\n\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n\n      this.now = (this.end - this.start) * eased + this.start;\n\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function (tween) {\n        var result; // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        } // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n\n\n        result = jQuery.css(tween.elem, tween.prop, \"\"); // Empty strings, null, undefined and \"auto\" are converted to 0.\n\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function (tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  }; // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function (tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function (p) {\n      return p;\n    },\n    swing: function (p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init; // Back compat <1.8 extension point\n\n  jQuery.fx.step = {};\n  var fxNow,\n      inProgress,\n      rfxtypes = /^(?:toggle|show|hide)$/,\n      rrun = /queueHooks$/;\n\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n\n      jQuery.fx.tick();\n    }\n  } // Animations created synchronously will run synchronously\n\n\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  } // Generate parameters to create a standard animation\n\n\n  function genFx(type, includeWidth) {\n    var which,\n        i = 0,\n        attrs = {\n      height: type\n    }; // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n\n    includeWidth = includeWidth ? 1 : 0;\n\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n\n    return attrs;\n  }\n\n  function createTween(value, prop, animation) {\n    var tween,\n        collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n        index = 0,\n        length = collection.length;\n\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n        value,\n        toggle,\n        hooks,\n        oldfire,\n        propTween,\n        restoreDisplay,\n        display,\n        isBox = \"width\" in props || \"height\" in props,\n        anim = this,\n        orig = {},\n        style = elem.style,\n        hidden = elem.nodeType && isHiddenWithinTree(elem),\n        dataShow = dataPriv.get(elem, \"fxshow\"); // Queue-skipping animations hijack the fx hooks\n\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    } // Detect show/hide animations\n\n\n    for (prop in props) {\n      value = props[prop];\n\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true; // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    } // Bail out if this is a no-op like .hide().hide()\n\n\n    propTween = !jQuery.isEmptyObject(props);\n\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    } // Restrict \"overflow\" and \"display\" styles during box animations\n\n\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY]; // Identify a display type, preferring old show/hide data over the CSS cascade\n\n      restoreDisplay = dataShow && dataShow.display;\n\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n\n      display = jQuery.css(elem, \"display\");\n\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      } // Animate inline elements as inline-block\n\n\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n\n          style.display = \"inline-block\";\n        }\n      }\n    }\n\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    } // Implement show/hide animations\n\n\n    propTween = false;\n\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        } // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n\n\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        } // Show elements before animating them\n\n\n        if (hidden) {\n          showHide([elem], true);\n        }\n        /* eslint-disable no-loop-func */\n\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n\n          dataPriv.remove(elem, \"fxshow\");\n\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      } // Per-property setup\n\n\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks; // camelCase, specialEasing and expand cssHook pass\n\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n\n      hooks = jQuery.cssHooks[name];\n\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name]; // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n\n  function Animation(elem, properties, options) {\n    var result,\n        stopped,\n        index = 0,\n        length = Animation.prefilters.length,\n        deferred = jQuery.Deferred().always(function () {\n      // Don't match elem in the :animated selector\n      delete tick.elem;\n    }),\n        tick = function () {\n      if (stopped) {\n        return false;\n      }\n\n      var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n      // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n      temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n\n      for (; index < length; index++) {\n        animation.tweens[index].run(percent);\n      }\n\n      deferred.notifyWith(elem, [animation, percent, remaining]); // If there's more to do, yield\n\n      if (percent < 1 && length) {\n        return remaining;\n      } // If this was an empty animation, synthesize a final progress notification\n\n\n      if (!length) {\n        deferred.notifyWith(elem, [animation, 1, 0]);\n      } // Resolve the animation and report its conclusion\n\n\n      deferred.resolveWith(elem, [animation]);\n      return false;\n    },\n        animation = deferred.promise({\n      elem: elem,\n      props: jQuery.extend({}, properties),\n      opts: jQuery.extend(true, {\n        specialEasing: {},\n        easing: jQuery.easing._default\n      }, options),\n      originalProperties: properties,\n      originalOptions: options,\n      startTime: fxNow || createFxNow(),\n      duration: options.duration,\n      tweens: [],\n      createTween: function (prop, end) {\n        var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n        animation.tweens.push(tween);\n        return tween;\n      },\n      stop: function (gotoEnd) {\n        var index = 0,\n            // If we are going to the end, we want to run all the tweens\n        // otherwise we skip this part\n        length = gotoEnd ? animation.tweens.length : 0;\n\n        if (stopped) {\n          return this;\n        }\n\n        stopped = true;\n\n        for (; index < length; index++) {\n          animation.tweens[index].run(1);\n        } // Resolve when we played the last frame; otherwise, reject\n\n\n        if (gotoEnd) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n          deferred.resolveWith(elem, [animation, gotoEnd]);\n        } else {\n          deferred.rejectWith(elem, [animation, gotoEnd]);\n        }\n\n        return this;\n      }\n    }),\n        props = animation.props;\n\n    propFilter(props, animation.opts.specialEasing);\n\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n\n        return result;\n      }\n    }\n\n    jQuery.map(props, createTween, animation);\n\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    } // Attach callbacks from options\n\n\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function (props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n\n      var prop,\n          index = 0,\n          length = props.length;\n\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function (callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && typeof speed === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    }; // Go to the end state if fx are off\n\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    } // Normalize opt.queue - true/undefined/null -> \"fx\"\n\n\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    } // Queueing\n\n\n    opt.old = opt.complete;\n\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n\n    return opt;\n  };\n\n  jQuery.fn.extend({\n    fadeTo: function (speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show() // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function (prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n          optall = jQuery.speed(speed, easing, callback),\n          doAnimation = function () {\n        // Operate on a copy of prop so per-property easing won't be lost\n        var anim = Animation(this, jQuery.extend({}, prop), optall); // Empty animations, or finishing resolves immediately\n\n        if (empty || dataPriv.get(this, \"finish\")) {\n          anim.stop(true);\n        }\n      };\n\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function (type, clearQueue, gotoEnd) {\n      var stopQueue = function (hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n\n      if (clearQueue && type !== false) {\n        this.queue(type || \"fx\", []);\n      }\n\n      return this.each(function () {\n        var dequeue = true,\n            index = type != null && type + \"queueHooks\",\n            timers = jQuery.timers,\n            data = dataPriv.get(this);\n\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        } // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n\n\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function (type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n\n      return this.each(function () {\n        var index,\n            data = dataPriv.get(this),\n            queue = data[type + \"queue\"],\n            hooks = data[type + \"queueHooks\"],\n            timers = jQuery.timers,\n            length = queue ? queue.length : 0; // Enable finishing flag on private data\n\n        data.finish = true; // Empty the queue first\n\n        jQuery.queue(this, type, []);\n\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        } // Look for any active animations, and finish them\n\n\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        } // Look for any animations in the old queue and finish them\n\n\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        } // Turn off finishing flag\n\n\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (i, name) {\n    var cssFn = jQuery.fn[name];\n\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  }); // Generate shortcuts for custom animations\n\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n\n  jQuery.fx.tick = function () {\n    var timer,\n        i = 0,\n        timers = jQuery.timers;\n    fxNow = Date.now();\n\n    for (; i < timers.length; i++) {\n      timer = timers[i]; // Run the timer and safely remove it when done (allowing for external removal)\n\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n\n    fxNow = undefined;\n  };\n\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n\n  jQuery.fx.interval = 13;\n\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n\n    inProgress = true;\n    schedule();\n  };\n\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  }; // Based off of the plugin by Clint Helfers, with permission.\n  // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n\n  (function () {\n    var input = document.createElement(\"input\"),\n        select = document.createElement(\"select\"),\n        opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\"; // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n\n    support.checkOn = input.value !== \"\"; // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n\n    support.optSelected = opt.selected; // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n\n  var boolHook,\n      attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function (name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function (name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set attributes on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      } // Fallback to prop when attributes are not supported\n\n\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      } // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      ret = jQuery.find.attr(elem, name); // Non-existent attributes return null, we normalize to undefined\n\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function (elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n\n            if (val) {\n              elem.value = val;\n            }\n\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function (elem, value) {\n      var name,\n          i = 0,\n          // Attribute names can contain non-HTML whitespace characters\n      // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n      attrNames = value && value.match(rnothtmlwhite);\n\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  }); // Hooks for boolean attributes\n\n  boolHook = {\n    set: function (elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n          handle,\n          lowercaseName = name.toLowerCase();\n\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n      rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function (name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function (name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function (elem, name, value) {\n      var ret,\n          hooks,\n          nType = elem.nodeType; // Don't get/set properties on text, comment and attribute nodes\n\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n\n        return elem[name] = value;\n      }\n\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function (elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n          // Use proper attribute retrieval(#12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  }); // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n\n        return null;\n      },\n      set: function (elem) {\n        /* eslint no-unused-expressions: \"off\" */\n        var parent = elem.parentNode;\n\n        if (parent) {\n          parent.selectedIndex;\n\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  }); // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n\n    return [];\n  }\n\n  jQuery.fn.extend({\n    addClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem);\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              if (cur.indexOf(\" \" + clazz + \" \") < 0) {\n                cur += clazz + \" \";\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    removeClass: function (value) {\n      var classes,\n          elem,\n          cur,\n          curValue,\n          clazz,\n          j,\n          finalValue,\n          i = 0;\n\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n\n      classes = classesToArray(value);\n\n      if (classes.length) {\n        while (elem = this[i++]) {\n          curValue = getClass(elem); // This expression is here for better compressibility (see addClass)\n\n          cur = elem.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n\n          if (cur) {\n            j = 0;\n\n            while (clazz = classes[j++]) {\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + clazz + \" \") > -1) {\n                cur = cur.replace(\" \" + clazz + \" \", \" \");\n              }\n            } // Only assign if different to avoid unneeded rendering.\n\n\n            finalValue = stripAndCollapse(cur);\n\n            if (curValue !== finalValue) {\n              elem.setAttribute(\"class\", finalValue);\n            }\n          }\n        }\n      }\n\n      return this;\n    },\n    toggleClass: function (value, stateVal) {\n      var type = typeof value,\n          isValidValue = type === \"string\" || Array.isArray(value);\n\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n\n      return this.each(function () {\n        var className, i, self, classNames;\n\n        if (isValidValue) {\n          // Toggle individual class names\n          i = 0;\n          self = jQuery(this);\n          classNames = classesToArray(value);\n\n          while (className = classNames[i++]) {\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          } // Toggle whole class name\n\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          } // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n\n\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function (selector) {\n      var className,\n          elem,\n          i = 0;\n      className = \" \" + selector + \" \";\n\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function (value) {\n      var hooks,\n          ret,\n          valueIsFunction,\n          elem = this[0];\n\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n\n          ret = elem.value; // Handle most common string cases\n\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          } // Handle cases where value is null/undef or number\n\n\n          return ret == null ? \"\" : ret;\n        }\n\n        return;\n      }\n\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n\n        if (this.nodeType !== 1) {\n          return;\n        }\n\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        } // Treat null/undefined as \"\"; convert numbers to string\n\n\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]; // If set returns undefined, fall back to normal setting\n\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function (elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val : // Support: IE <=10 - 11 only\n          // option.text throws exceptions (#14686, #14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function (elem) {\n          var value,\n              option,\n              i,\n              options = elem.options,\n              index = elem.selectedIndex,\n              one = elem.type === \"select-one\",\n              values = one ? null : [],\n              max = one ? index + 1 : options.length;\n\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          } // Loop through all the selected options\n\n\n          for (; i < max; i++) {\n            option = options[i]; // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (#2551)\n\n            if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val(); // We don't need an array for one selects\n\n              if (one) {\n                return value;\n              } // Multi-Selects return an array\n\n\n              values.push(value);\n            }\n          }\n\n          return values;\n        },\n        set: function (elem, value) {\n          var optionSet,\n              option,\n              options = elem.options,\n              values = jQuery.makeArray(value),\n              i = options.length;\n\n          while (i--) {\n            option = options[i];\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n            /* eslint-enable no-cond-assign */\n\n          } // Force browsers to behave consistently when non-matching value is set\n\n\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n\n          return values;\n        }\n      }\n    }\n  }); // Radios and checkboxes getter/setter\n\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function (elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  }); // Return jQuery for attributes-only inclusion\n\n  support.focusin = \"onfocusin\" in window;\n\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n      stopPropagationCallback = function (e) {\n    e.stopPropagation();\n  };\n\n  jQuery.extend(jQuery.event, {\n    trigger: function (event, data, elem, onlyHandlers) {\n      var i,\n          cur,\n          tmp,\n          bubbleType,\n          ontype,\n          handle,\n          special,\n          lastElement,\n          eventPath = [elem || document],\n          type = hasOwn.call(event, \"type\") ? event.type : event,\n          namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document; // Don't do events on text and comment nodes\n\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      } // focus/blur morphs to focusin/out; ensure we're not firing them right now\n\n\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type; // Caller can pass in a jQuery.Event object, Object, or just an event type string\n\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === \"object\" && event); // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null; // Clean up the event in case it is being reused\n\n      event.result = undefined;\n\n      if (!event.target) {\n        event.target = elem;\n      } // Clone any incoming data and prepend the event, creating the handler arg list\n\n\n      data = data == null ? [event] : jQuery.makeArray(data, [event]); // Allow special events to draw outside the lines\n\n      special = jQuery.event.special[type] || {};\n\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      } // Determine event propagation path in advance, per W3C events spec (#9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\n\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        } // Only add window if we got to document (e.g., not plain obj or detached DOM)\n\n\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      } // Fire handlers on the event path\n\n\n      i = 0;\n\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type; // jQuery handler\n\n        handle = (dataPriv.get(cur, \"events\") || {})[event.type] && dataPriv.get(cur, \"handle\");\n\n        if (handle) {\n          handle.apply(cur, data);\n        } // Native handler\n\n\n        handle = ontype && cur[ontype];\n\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n\n      event.type = type; // If nobody prevented the default action, do it now\n\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (#6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n\n            if (tmp) {\n              elem[ontype] = null;\n            } // Prevent re-triggering of the same event, since we already bubbled it above\n\n\n            jQuery.event.triggered = type;\n\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n\n            elem[type]();\n\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n\n            jQuery.event.triggered = undefined;\n\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function (type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function (type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function (type, data) {\n      var elem = this[0];\n\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  }); // Support: Firefox <=44\n  // Firefox doesn't have focus(in | out) events\n  // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n  //\n  // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n  // focus(in | out) events fire after focus & blur events,\n  // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n  // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n\n  if (!support.focusin) {\n    jQuery.each({\n      focus: \"focusin\",\n      blur: \"focusout\"\n    }, function (orig, fix) {\n      // Attach a single capturing handler on the document while someone wants focusin/focusout\n      var handler = function (event) {\n        jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n      };\n\n      jQuery.event.special[fix] = {\n        setup: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix);\n\n          if (!attaches) {\n            doc.addEventListener(orig, handler, true);\n          }\n\n          dataPriv.access(doc, fix, (attaches || 0) + 1);\n        },\n        teardown: function () {\n          var doc = this.ownerDocument || this,\n              attaches = dataPriv.access(doc, fix) - 1;\n\n          if (!attaches) {\n            doc.removeEventListener(orig, handler, true);\n            dataPriv.remove(doc, fix);\n          } else {\n            dataPriv.access(doc, fix, attaches);\n          }\n        }\n      };\n    });\n  }\n\n  var location = window.location;\n  var nonce = Date.now();\n  var rquery = /\\?/; // Cross-browser xml parsing\n\n  jQuery.parseXML = function (data) {\n    var xml;\n\n    if (!data || typeof data !== \"string\") {\n      return null;\n    } // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n\n\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {\n      xml = undefined;\n    }\n\n    if (!xml || xml.getElementsByTagName(\"parsererror\").length) {\n      jQuery.error(\"Invalid XML: \" + data);\n    }\n\n    return xml;\n  };\n\n  var rbracket = /\\[\\]$/,\n      rCRLF = /\\r?\\n/g,\n      rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n      rsubmittable = /^(?:input|select|textarea|keygen)/i;\n\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (typeof v === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  } // Serialize an array of form elements or a set of\n  // key/values into a query string\n\n\n  jQuery.param = function (a, traditional) {\n    var prefix,\n        s = [],\n        add = function (key, valueOrFunction) {\n      // If value is a function, invoke it and use its return value\n      var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n      s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n    }; // If an array was passed in, assume that it is an array of form elements.\n\n\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    } // Return the resulting serialization\n\n\n    return s.join(\"&\");\n  };\n\n  jQuery.fn.extend({\n    serialize: function () {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function () {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type; // Use .is( \":disabled\" ) so that fieldset[disabled] works\n\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (i, elem) {\n        var val = jQuery(this).val();\n\n        if (val == null) {\n          return null;\n        }\n\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n      rhash = /#.*$/,\n      rantiCache = /([?&])_=[^&]*/,\n      rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n      // #7653, #8125, #8152: local protocol detection\n  rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n      rnoContent = /^(?:GET|HEAD)$/,\n      rprotocol = /^\\/\\//,\n\n  /* Prefilters\n   * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n   * 2) These are called:\n   *    - BEFORE asking for a transport\n   *    - AFTER param serialization (s.data is a string if s.processData is true)\n   * 3) key is the dataType\n   * 4) the catchall symbol \"*\" can be used\n   * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n   */\n  prefilters = {},\n\n  /* Transports bindings\n   * 1) key is the dataType\n   * 2) the catchall symbol \"*\" can be used\n   * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n   */\n  transports = {},\n      // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n  allTypes = \"*/\".concat(\"*\"),\n      // Anchor tag for parsing the document origin\n  originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href; // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n\n      var dataType,\n          i = 0,\n          dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func); // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  } // Base inspection function for prefilters and transports\n\n\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n        seekingTransport = structure === transports;\n\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  } // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes #9887\n\n\n  function ajaxExtend(target, src) {\n    var key,\n        deep,\n        flatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n\n    return target;\n  }\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n\n\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n        type,\n        finalDataType,\n        firstDataType,\n        contents = s.contents,\n        dataTypes = s.dataTypes; // Remove auto dataType and get content-type in the process\n\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    } // Check if we're dealing with a known content-type\n\n\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    } // Check to see if we have a response for the expected dataType\n\n\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      } // Or just use first one\n\n\n      finalDataType = finalDataType || firstDataType;\n    } // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n\n\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n\n      return responses[finalDataType];\n    }\n  }\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n\n\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n        current,\n        conv,\n        tmp,\n        prev,\n        converters = {},\n        // Work with a copy of dataTypes in case we need to modify it for conversion\n    dataTypes = s.dataTypes.slice(); // Create converters map with lowercased keys\n\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n\n    current = dataTypes.shift(); // Convert to each sequential dataType\n\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      } // Apply the dataFilter if provided\n\n\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n\n      prev = current;\n      current = dataTypes.shift();\n\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev; // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current]; // If none found, seek a pair\n\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2]; // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n\n                  break;\n                }\n              }\n            }\n          } // Apply converter (if not an equivalence)\n\n\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s.throws) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function (target, settings) {\n      return settings ? // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function (url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (typeof url === \"object\") {\n        options = url;\n        url = undefined;\n      } // Force options to be an object\n\n\n      options = options || {};\n      var transport,\n          // URL without anti-cache param\n      cacheURL,\n          // Response headers\n      responseHeadersString,\n          responseHeaders,\n          // timeout handle\n      timeoutTimer,\n          // Url cleanup var\n      urlAnchor,\n          // Request state (becomes false upon send and true upon completion)\n      completed,\n          // To know if global events are to be dispatched\n      fireGlobals,\n          // Loop variable\n      i,\n          // uncached part of the url\n      uncached,\n          // Create the final options object\n      s = jQuery.ajaxSetup({}, options),\n          // Callbacks context\n      callbackContext = s.context || s,\n          // Context for global events is callbackContext if it is a DOM node or jQuery collection\n      globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n          // Deferreds\n      deferred = jQuery.Deferred(),\n          completeDeferred = jQuery.Callbacks(\"once memory\"),\n          // Status-dependent callbacks\n      statusCode = s.statusCode || {},\n          // Headers (they are sent all at once)\n      requestHeaders = {},\n          requestHeadersNames = {},\n          // Default abort message\n      strAbort = \"canceled\",\n          // Fake xhr\n      jqXHR = {\n        readyState: 0,\n        // Builds headers hashtable if needed\n        getResponseHeader: function (key) {\n          var match;\n\n          if (completed) {\n            if (!responseHeaders) {\n              responseHeaders = {};\n\n              while (match = rheaders.exec(responseHeadersString)) {\n                responseHeaders[match[1].toLowerCase()] = match[2];\n              }\n            }\n\n            match = responseHeaders[key.toLowerCase()];\n          }\n\n          return match == null ? null : match;\n        },\n        // Raw string\n        getAllResponseHeaders: function () {\n          return completed ? responseHeadersString : null;\n        },\n        // Caches the header\n        setRequestHeader: function (name, value) {\n          if (completed == null) {\n            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n            requestHeaders[name] = value;\n          }\n\n          return this;\n        },\n        // Overrides response content-type header\n        overrideMimeType: function (type) {\n          if (completed == null) {\n            s.mimeType = type;\n          }\n\n          return this;\n        },\n        // Status-dependent callbacks\n        statusCode: function (map) {\n          var code;\n\n          if (map) {\n            if (completed) {\n              // Execute the appropriate callbacks\n              jqXHR.always(map[jqXHR.status]);\n            } else {\n              // Lazy-add the new callbacks in a way that preserves old ones\n              for (code in map) {\n                statusCode[code] = [statusCode[code], map[code]];\n              }\n            }\n          }\n\n          return this;\n        },\n        // Cancel the request\n        abort: function (statusText) {\n          var finalText = statusText || strAbort;\n\n          if (transport) {\n            transport.abort(finalText);\n          }\n\n          done(0, finalText);\n          return this;\n        }\n      }; // Attach deferreds\n\n      deferred.promise(jqXHR); // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (#10093: consistency with old signature)\n      // We also use the url parameter if available\n\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\"); // Alias method option to type as per ticket #12004\n\n      s.type = options.method || options.type || s.method || s.type; // Extract dataTypes list\n\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"]; // A cross-domain request is in order when the origin doesn't match the current origin.\n\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\"); // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n\n        try {\n          urlAnchor.href = s.url; // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      } // Convert data if not already a string\n\n\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      } // Apply prefilters\n\n\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR); // If request was aborted inside a prefilter, stop there\n\n      if (completed) {\n        return jqXHR;\n      } // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n\n\n      fireGlobals = jQuery.event && s.global; // Watch for a new set of requests\n\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      } // Uppercase the type\n\n\n      s.type = s.type.toUpperCase(); // Determine if request has content\n\n      s.hasContent = !rnoContent.test(s.type); // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n\n      cacheURL = s.url.replace(rhash, \"\"); // More options handling for requests with no content\n\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length); // If data is available and should be processed, append data to url\n\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data; // #9682: remove data so that it's not used in an eventual retry\n\n          delete s.data;\n        } // Add or update anti-cache param if needed\n\n\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce++ + uncached;\n        } // Put hash and anti-cache on the URL that will be requested (gh-1732)\n\n\n        s.url = cacheURL + uncached; // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      } // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\n\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      } // Set the correct header, if data is being sent\n\n\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      } // Set the Accepts header for the server, depending on the dataType\n\n\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]); // Check for headers option\n\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      } // Allow custom headers/mimetypes and early abort\n\n\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      } // Aborting is no longer a cancellation\n\n\n      strAbort = \"abort\"; // Install callbacks on deferreds\n\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error); // Get transport\n\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR); // If no transport, we auto-abort\n\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1; // Send global event\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        } // If request was aborted inside ajaxSend, stop there\n\n\n        if (completed) {\n          return jqXHR;\n        } // Timeout\n\n\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          } // Propagate others as results\n\n\n          done(-1, e);\n        }\n      } // Callback for when everything is done\n\n\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n            success,\n            error,\n            response,\n            modified,\n            statusText = nativeStatusText; // Ignore repeat invocations\n\n        if (completed) {\n          return;\n        }\n\n        completed = true; // Clear timeout if it exists\n\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        } // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n\n\n        transport = undefined; // Cache response headers\n\n        responseHeadersString = headers || \"\"; // Set readyState\n\n        jqXHR.readyState = status > 0 ? 4 : 0; // Determine if successful\n\n        isSuccess = status >= 200 && status < 300 || status === 304; // Get response data\n\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        } // Convert no matter what (that way responseXXX fields are always set)\n\n\n        response = ajaxConvert(s, response, jqXHR, isSuccess); // If successful, handle type chaining\n\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n\n            modified = jqXHR.getResponseHeader(\"etag\");\n\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          } // if no content\n\n\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\"; // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\"; // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n\n          if (status || !statusText) {\n            statusText = \"error\";\n\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        } // Set data for the fake xhr object\n\n\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\"; // Success/Error\n\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        } // Status-dependent callbacks\n\n\n        jqXHR.statusCode(statusCode);\n        statusCode = undefined;\n\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        } // Complete\n\n\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]); // Handle the global AJAX counter\n\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n\n      return jqXHR;\n    },\n    getJSON: function (url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function (url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      } // The url can be an options object (which then must have .url)\n\n\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n\n  jQuery._evalUrl = function (url) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (#11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      \"throws\": true\n    });\n  };\n\n  jQuery.fn.extend({\n    wrapAll: function (html) {\n      var wrap;\n\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        } // The elements to wrap the target around\n\n\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n\n        wrap.map(function () {\n          var elem = this;\n\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n\n          return elem;\n        }).append(this);\n      }\n\n      return this;\n    },\n    wrapInner: function (html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n\n      return this.each(function () {\n        var self = jQuery(this),\n            contents = self.contents();\n\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function (html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function (selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n\n  var xhrSuccessStatus = {\n    // File protocol always yields status code 0, assume 200\n    0: 200,\n    // Support: IE <=9 only\n    // #1450: sometimes IE returns 1223 when it should be 204\n    1223: 204\n  },\n      xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var callback, errorCallback; // Cross domain only allowed if supported through XMLHttpRequest\n\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function (headers, complete) {\n          var i,\n              xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password); // Apply custom fields if provided\n\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          } // Override mime type if needed\n\n\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          } // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n\n\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          } // Set headers\n\n\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          } // Callback\n\n\n          callback = function (type) {\n            return function () {\n              if (callback) {\n                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete( // File: protocol always yields status 0; see #8605, #14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          }; // Listen to events\n\n\n          xhr.onload = callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = callback(\"error\"); // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          } // Create the abort callback\n\n\n          callback = callback(\"abort\");\n\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // #14683: Only rethrow if this hasn't been notified as an error yet\n            if (callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  }); // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  }); // Install script dataType\n\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function (text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  }); // Handle cache's special case and crossDomain\n\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  }); // Bind script tag hack transport\n\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain requests\n    if (s.crossDomain) {\n      var script, callback;\n      return {\n        send: function (_, complete) {\n          script = jQuery(\"<script>\").prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", callback = function (evt) {\n            script.remove();\n            callback = null;\n\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          }); // Use native DOM manipulation to avoid our domManip AJAX trickery\n\n          document.head.appendChild(script[0]);\n        },\n        abort: function () {\n          if (callback) {\n            callback();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n      rjsonp = /(=)\\?(?=&|$)|\\?\\?/; // Default jsonp settings\n\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function () {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce++;\n      this[callback] = true;\n      return callback;\n    }\n  }); // Detect, normalize options and install callbacks for jsonp requests\n\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n        overwritten,\n        responseContainer,\n        jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\"); // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback; // Insert callback into url or form data\n\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      } // Use data converter to retrieve json after script execution\n\n\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n\n        return responseContainer[0];\n      }; // Force json dataType\n\n\n      s.dataTypes[0] = \"json\"; // Install callback\n\n      overwritten = window[callbackName];\n\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      }; // Clean-up function (fires after converters)\n\n\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName); // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        } // Save back as free\n\n\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback; // Save the callback name for future use\n\n          oldCallbacks.push(callbackName);\n        } // Call if it was a function and we have a response\n\n\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n\n        responseContainer = overwritten = undefined;\n      }); // Delegate to script\n\n      return \"script\";\n    }\n  }); // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }(); // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n\n\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n\n    var base, parsed, scripts;\n\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\"); // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && []; // Single tag\n\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n\n    parsed = buildFragment([data], context, scripts);\n\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n\n    return jQuery.merge([], parsed.childNodes);\n  };\n  /**\n   * Load a url into a page\n   */\n\n\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n        type,\n        response,\n        self = this,\n        off = url.indexOf(\" \");\n\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    } // If it's a function\n\n\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined; // Otherwise, build a param string\n    } else if (params && typeof params === \"object\") {\n      type = \"POST\";\n    } // If we have elements to modify, make the request\n\n\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n        responseText); // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n\n    return this;\n  }; // Attach a bunch of functions for handling common AJAX events\n\n\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n\n  jQuery.offset = {\n    setOffset: function (elem, options, i) {\n      var curPosition,\n          curLeft,\n          curCSSTop,\n          curTop,\n          curOffset,\n          curCSSLeft,\n          calculatePosition,\n          position = jQuery.css(elem, \"position\"),\n          curElem = jQuery(elem),\n          props = {}; // Set position first, in-case top/left are set even on static elem\n\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1; // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function (options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n\n      var rect,\n          win,\n          elem = this[0];\n\n      if (!elem) {\n        return;\n      } // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n\n\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      } // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n\n\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function () {\n      if (!this[0]) {\n        return;\n      }\n\n      var offsetParent,\n          offset,\n          doc,\n          elem = this[0],\n          parentOffset = {\n        top: 0,\n        left: 0\n      }; // position:fixed elements are offset from the viewport, which itself always has zero offset\n\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset(); // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      } // Subtract parent offsets and element margins\n\n\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function () {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || documentElement;\n      });\n    }\n  }); // Create scrollLeft and scrollTop methods\n\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  }); // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n\n  jQuery.each([\"top\", \"left\"], function (i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop); // If curCSS returns percentage, fallback to offset\n\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  }); // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n            extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          } // Get document width or height\n\n\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement; // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n\n          return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) : // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n  jQuery.fn.extend({\n    hover: function (fnOver, fnOut) {\n      return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n    }\n  });\n  jQuery.fn.extend({\n    bind: function (types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function (types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function (selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function (selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    }\n  }); // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    } // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n\n\n    if (!isFunction(fn)) {\n      return undefined;\n    } // Simulated bind\n\n\n    args = slice.call(arguments, 2);\n\n    proxy = function () {\n      return fn.apply(context || this, args.concat(slice.call(arguments)));\n    }; // Set the guid of unique handler to the same of original handler, so it can be removed\n\n\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") && // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  }; // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n\n  var // Map over jQuery in case of overwrite\n  _jQuery = window.jQuery,\n      // Map over the $ in case of overwrite\n  _$ = window.$;\n\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n\n    return jQuery;\n  }; // Expose jQuery and $ identifiers, even in AMD\n  // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (#13566)\n\n\n  if (!noGlobal) {\n    window.jQuery = window.$ = jQuery;\n  }\n\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/lodash/_Symbol.js":
/*!****************************************!*\
  !*** ./node_modules/lodash/_Symbol.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;\n\n//# sourceURL=webpack:///./node_modules/lodash/_Symbol.js?");

/***/ }),

/***/ "./node_modules/lodash/_baseGetTag.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_baseGetTag.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\"),\n    getRawTag = __webpack_require__(/*! ./_getRawTag */ \"./node_modules/lodash/_getRawTag.js\"),\n    objectToString = __webpack_require__(/*! ./_objectToString */ \"./node_modules/lodash/_objectToString.js\");\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n//# sourceURL=webpack:///./node_modules/lodash/_baseGetTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_freeGlobal.js":
/*!********************************************!*\
  !*** ./node_modules/lodash/_freeGlobal.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/lodash/_freeGlobal.js?");

/***/ }),

/***/ "./node_modules/lodash/_getRawTag.js":
/*!*******************************************!*\
  !*** ./node_modules/lodash/_getRawTag.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var Symbol = __webpack_require__(/*! ./_Symbol */ \"./node_modules/lodash/_Symbol.js\");\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n//# sourceURL=webpack:///./node_modules/lodash/_getRawTag.js?");

/***/ }),

/***/ "./node_modules/lodash/_objectToString.js":
/*!************************************************!*\
  !*** ./node_modules/lodash/_objectToString.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n//# sourceURL=webpack:///./node_modules/lodash/_objectToString.js?");

/***/ }),

/***/ "./node_modules/lodash/_root.js":
/*!**************************************!*\
  !*** ./node_modules/lodash/_root.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var freeGlobal = __webpack_require__(/*! ./_freeGlobal */ \"./node_modules/lodash/_freeGlobal.js\");\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;\n\n//# sourceURL=webpack:///./node_modules/lodash/_root.js?");

/***/ }),

/***/ "./node_modules/lodash/debounce.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/debounce.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\"),\n    now = __webpack_require__(/*! ./now */ \"./node_modules/lodash/now.js\"),\n    toNumber = __webpack_require__(/*! ./toNumber */ \"./node_modules/lodash/toNumber.js\");\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n    return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n\n//# sourceURL=webpack:///./node_modules/lodash/debounce.js?");

/***/ }),

/***/ "./node_modules/lodash/isObject.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isObject.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n//# sourceURL=webpack:///./node_modules/lodash/isObject.js?");

/***/ }),

/***/ "./node_modules/lodash/isObjectLike.js":
/*!*********************************************!*\
  !*** ./node_modules/lodash/isObjectLike.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n//# sourceURL=webpack:///./node_modules/lodash/isObjectLike.js?");

/***/ }),

/***/ "./node_modules/lodash/isSymbol.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/isSymbol.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ \"./node_modules/lodash/_baseGetTag.js\"),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ \"./node_modules/lodash/isObjectLike.js\");\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;\n\n//# sourceURL=webpack:///./node_modules/lodash/isSymbol.js?");

/***/ }),

/***/ "./node_modules/lodash/now.js":
/*!************************************!*\
  !*** ./node_modules/lodash/now.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var root = __webpack_require__(/*! ./_root */ \"./node_modules/lodash/_root.js\");\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\n\nvar now = function () {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n\n//# sourceURL=webpack:///./node_modules/lodash/now.js?");

/***/ }),

/***/ "./node_modules/lodash/toNumber.js":
/*!*****************************************!*\
  !*** ./node_modules/lodash/toNumber.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var isObject = __webpack_require__(/*! ./isObject */ \"./node_modules/lodash/isObject.js\"),\n    isSymbol = __webpack_require__(/*! ./isSymbol */ \"./node_modules/lodash/isSymbol.js\");\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;\n\n//# sourceURL=webpack:///./node_modules/lodash/toNumber.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};\n\n//# sourceURL=webpack:///./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n  \"use strict\";\n\n  if (global.setImmediate) {\n    return;\n  }\n\n  var nextHandle = 1; // Spec says greater than zero\n\n  var tasksByHandle = {};\n  var currentlyRunningATask = false;\n  var doc = global.document;\n  var registerImmediate;\n\n  function setImmediate(callback) {\n    // Callback can either be a function or a string\n    if (typeof callback !== \"function\") {\n      callback = new Function(\"\" + callback);\n    } // Copy function arguments\n\n\n    var args = new Array(arguments.length - 1);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 1];\n    } // Store and register the task\n\n\n    var task = {\n      callback: callback,\n      args: args\n    };\n    tasksByHandle[nextHandle] = task;\n    registerImmediate(nextHandle);\n    return nextHandle++;\n  }\n\n  function clearImmediate(handle) {\n    delete tasksByHandle[handle];\n  }\n\n  function run(task) {\n    var callback = task.callback;\n    var args = task.args;\n\n    switch (args.length) {\n      case 0:\n        callback();\n        break;\n\n      case 1:\n        callback(args[0]);\n        break;\n\n      case 2:\n        callback(args[0], args[1]);\n        break;\n\n      case 3:\n        callback(args[0], args[1], args[2]);\n        break;\n\n      default:\n        callback.apply(undefined, args);\n        break;\n    }\n  }\n\n  function runIfPresent(handle) {\n    // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n    // So if we're currently running a task, we'll need to delay this invocation.\n    if (currentlyRunningATask) {\n      // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n      // \"too much recursion\" error.\n      setTimeout(runIfPresent, 0, handle);\n    } else {\n      var task = tasksByHandle[handle];\n\n      if (task) {\n        currentlyRunningATask = true;\n\n        try {\n          run(task);\n        } finally {\n          clearImmediate(handle);\n          currentlyRunningATask = false;\n        }\n      }\n    }\n  }\n\n  function installNextTickImplementation() {\n    registerImmediate = function (handle) {\n      process.nextTick(function () {\n        runIfPresent(handle);\n      });\n    };\n  }\n\n  function canUsePostMessage() {\n    // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n    // where `global.postMessage` means something completely different and can't be used for this purpose.\n    if (global.postMessage && !global.importScripts) {\n      var postMessageIsAsynchronous = true;\n      var oldOnMessage = global.onmessage;\n\n      global.onmessage = function () {\n        postMessageIsAsynchronous = false;\n      };\n\n      global.postMessage(\"\", \"*\");\n      global.onmessage = oldOnMessage;\n      return postMessageIsAsynchronous;\n    }\n  }\n\n  function installPostMessageImplementation() {\n    // Installs an event handler on `global` for the `message` event: see\n    // * https://developer.mozilla.org/en/DOM/window.postMessage\n    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n    var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n\n    var onGlobalMessage = function (event) {\n      if (event.source === global && typeof event.data === \"string\" && event.data.indexOf(messagePrefix) === 0) {\n        runIfPresent(+event.data.slice(messagePrefix.length));\n      }\n    };\n\n    if (global.addEventListener) {\n      global.addEventListener(\"message\", onGlobalMessage, false);\n    } else {\n      global.attachEvent(\"onmessage\", onGlobalMessage);\n    }\n\n    registerImmediate = function (handle) {\n      global.postMessage(messagePrefix + handle, \"*\");\n    };\n  }\n\n  function installMessageChannelImplementation() {\n    var channel = new MessageChannel();\n\n    channel.port1.onmessage = function (event) {\n      var handle = event.data;\n      runIfPresent(handle);\n    };\n\n    registerImmediate = function (handle) {\n      channel.port2.postMessage(handle);\n    };\n  }\n\n  function installReadyStateChangeImplementation() {\n    var html = doc.documentElement;\n\n    registerImmediate = function (handle) {\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var script = doc.createElement(\"script\");\n\n      script.onreadystatechange = function () {\n        runIfPresent(handle);\n        script.onreadystatechange = null;\n        html.removeChild(script);\n        script = null;\n      };\n\n      html.appendChild(script);\n    };\n  }\n\n  function installSetTimeoutImplementation() {\n    registerImmediate = function (handle) {\n      setTimeout(runIfPresent, 0, handle);\n    };\n  } // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n\n\n  var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n  attachTo = attachTo && attachTo.setTimeout ? attachTo : global; // Don't get fooled by e.g. browserify environments.\n\n  if ({}.toString.call(global.process) === \"[object process]\") {\n    // For Node.js before 0.9\n    installNextTickImplementation();\n  } else if (canUsePostMessage()) {\n    // For non-IE10 modern browsers\n    installPostMessageImplementation();\n  } else if (global.MessageChannel) {\n    // For web workers, where supported\n    installMessageChannelImplementation();\n  } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n    // For IE 6–8\n    installReadyStateChangeImplementation();\n  } else {\n    // For older browsers\n    installSetTimeoutImplementation();\n  }\n\n  attachTo.setImmediate = setImmediate;\n  attachTo.clearImmediate = clearImmediate;\n})(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/setimmediate/setImmediate.js?");

/***/ }),

/***/ "./node_modules/style-properties/module/change-case.js":
/*!*************************************************************!*\
  !*** ./node_modules/style-properties/module/change-case.js ***!
  \*************************************************************/
/*! exports provided: toCamelCase, toKebabCase */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toCamelCase\", function() { return toCamelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toKebabCase\", function() { return toKebabCase; });\nvar delimiters = [' ', '-', '_'];\nfunction toCamelCase() {\n  var input = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n  var characters = input.split('');\n  var result = [];\n  var character = void 0;\n\n  while (character = characters.shift()) {\n    if (delimiters.indexOf(character) !== -1) {\n      if (character = characters.shift()) {\n        character = character.toUpperCase();\n      }\n    }\n\n    result.push(character);\n  }\n\n  return result.join('');\n}\nfunction toKebabCase() {\n  var input = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n  var characters = input.split('');\n  var result = [];\n  characters.forEach(function (character) {\n    var lowercase_character = character.toLowerCase();\n\n    if (character !== lowercase_character) {\n      result.push('-', lowercase_character);\n    } else if (delimiters.indexOf(character) !== -1) {\n      result.push('-');\n    } else {\n      result.push(character);\n    }\n  });\n  return result.join('');\n}\n\n//# sourceURL=webpack:///./node_modules/style-properties/module/change-case.js?");

/***/ }),

/***/ "./node_modules/style-properties/module/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/style-properties/module/index.js ***!
  \*******************************************************/
/*! exports provided: getStyleProperty, getStyleProperties */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStyleProperty\", function() { return getStyleProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getStyleProperties\", function() { return getStyleProperties; });\n/* harmony import */ var _change_case__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./change-case */ \"./node_modules/style-properties/module/change-case.js\");\n/* harmony import */ var _parse_property_value__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parse-property-value */ \"./node_modules/style-properties/module/parse-property-value.js\");\n\n\n/**\n * @typedef {Object} StyleProperty\n * @property {string} unit - unit of the property, e.g. px, rgb\n * @property {string|number} value - value of the property\n * @property {string} output - valid string representation of value and unit\n *\n * @example <caption>Simple property.</caption>\n * {\n *   unit: 'px',\n *   value: 100,\n *   output: '100px'\n * }\n *\n * @example <caption>Color property.</caption>\n * {\n *   unit: 'rgb',\n *   value: [255, 255, 255],\n *   output: '#ffffff'\n * }\n */\n\n/**\n * Attempts to fix the element when using Webcomponents with ShadowDOMPolyfill. It returns either original element or wrapped element, depending on whether the polyfill replaced the original `getComputedStyle` method or not.\n * This is madness and no sane person should ever do hacks like this. ShadowDOMPolyfill sucks donkey balls!\n * @param {Object|HTMLElement} element\n * @returns {Object|HTMLElement}\n */\n\nfunction fixWebcomponentsElement(element) {\n  if (typeof window.ShadowDOMPolyfill !== 'undefined') {\n    var is_native = document.defaultView.getComputedStyle.toString().indexOf('[native code]') !== -1; // Can't check if element is instance of HTMLElement, because the polyfill\n    // hijacks this. Only reliable way of checking if it is wrapped I found\n    // is using this ugly ass property.\n\n    var is_wrapped = typeof element.__impl4cf1e782hg__ !== 'undefined';\n\n    if (is_native && is_wrapped) {\n      element = window.ShadowDOMPolyfill.unwrap(element);\n    }\n\n    if (!is_native && !is_wrapped) {\n      element = window.ShadowDOMPolyfill.wrap(element);\n    }\n  }\n\n  return element;\n}\n/**\n * Returns information about unit and value of given property for given element.\n * @param {HTMLElement} element\n * @param {string} property - Name of the property. You can use either camelCase (e.g. zIndex) or kebab-case (e.g. z-index).\n * @returns {StyleProperty}\n *\n * @example\n * var element_width = getStyleProperty(my_element, 'width');\n * // returns {unit: 'px', value: 100, output: '100px'}\n */\n\n\nfunction getStyleProperty(element, property) {\n  property = Object(_change_case__WEBPACK_IMPORTED_MODULE_0__[\"toKebabCase\"])(property);\n  element = fixWebcomponentsElement(element);\n  var value = document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\n  return Object(_parse_property_value__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(value);\n}\n/**\n * Returns information about multiple properties of given element.\n * @param {HTMLElement} element\n * @param {Array|string} properties - List of properties. Single property (string) will be converted to an array.\n * @returns {Object} - Keys of the returned objects are property names, values are objects containing information about given property.\n *\n * @example\n * var element_size = getStyleProperties(my_element, ['width', 'height']);\n * // returns\n * // {\n * //   width: {unit: 'px', value: 100, output: '100px'},\n * //   height: {unit: 'px', value: 100, output: '100px'}\n * // }\n */\n\nfunction getStyleProperties(element) {\n  var properties = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\n  if (typeof properties === 'string') {\n    properties = [properties];\n  }\n\n  var result = {};\n  properties.forEach(function (property) {\n    result[property] = getStyleProperty(element, property);\n  });\n  return result;\n}\n\n//# sourceURL=webpack:///./node_modules/style-properties/module/index.js?");

/***/ }),

/***/ "./node_modules/style-properties/module/parse-property-value.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-properties/module/parse-property-value.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar re_color = /^rgb\\((\\d+),\\s?(\\d+),\\s?(\\d+)\\)$/;\nvar re_prop = /^(-?\\d*\\.?\\d*)(.*)$/; // converts number in base 10 to base 16, adds padding zero if needed\n\nfunction convertColorComponent(input) {\n  var result = input.toString(16);\n\n  if (result.length < 2) {\n    result = '0' + result;\n  }\n\n  return result;\n}\n\nfunction parseColorProperty(value) {\n  var matches = value.match(re_color);\n  var result = {};\n  result.unit = 'rgb';\n  result.value = [parseInt(matches[1], 10), parseInt(matches[2], 10), parseInt(matches[3], 10)];\n  result.output = '#' + convertColorComponent(result.value[0]) + convertColorComponent(result.value[1]) + convertColorComponent(result.value[2]);\n  return result;\n}\n\nfunction parseRegularProperty(value) {\n  var result = {\n    unit: '',\n    value: null,\n    output: 'auto'\n  };\n\n  if (value !== 'auto') {\n    var matches = value.match(re_prop);\n    result.value = parseFloat(matches[1]);\n    result.unit = matches[2];\n    result.output = result.value + result.unit;\n  }\n\n  return result;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (value) {\n  var result = re_color.test(value) ? parseColorProperty(value) : parseRegularProperty(value);\n  result.original = value;\n  return result;\n});\n\n//# sourceURL=webpack:///./node_modules/style-properties/module/parse-property-value.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/css/theme.blue.min.css":
/*!**************************************************************!*\
  !*** ./node_modules/tablesorter/dist/css/theme.blue.min.css ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/css/theme.blue.min.css?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/jquery.tablesorter.js":
/*!****************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/jquery.tablesorter.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  /*! TableSorter (FORK) v2.31.0 */\n\n  /*\n  * Client-side table sorting with ease!\n  * @requires jQuery v1.2.6+\n  *\n  * Copyright (c) 2007 Christian Bach\n  * fork maintained by Rob Garrison\n  *\n  * Examples and original docs at: http://tablesorter.com\n  * Dual licensed under the MIT and GPL licenses:\n  * http://www.opensource.org/licenses/mit-license.php\n  * http://www.gnu.org/licenses/gpl.html\n  *\n  * @type jQuery\n  * @name tablesorter (FORK)\n  * @cat Plugins/Tablesorter\n  * @author Christian Bach - christian.bach@polyester.se\n  * @contributor Rob Garrison - https://github.com/Mottie/tablesorter\n  * @docs (fork) - https://mottie.github.io/tablesorter/docs/\n  */\n\n  /*jshint browser:true, jquery:true, unused:false, expr: true */\n  ;\n\n  (function ($) {\n    'use strict';\n\n    var ts = $.tablesorter = {\n      version: '2.31.0',\n      parsers: [],\n      widgets: [],\n      defaults: {\n        // *** appearance\n        theme: 'default',\n        // adds tablesorter-{theme} to the table for styling\n        widthFixed: false,\n        // adds colgroup to fix widths of columns\n        showProcessing: false,\n        // show an indeterminate timer icon in the header when the table is sorted or filtered.\n        headerTemplate: '{content}',\n        // header layout template (HTML ok); {content} = innerHTML, {icon} = <i/> // class from cssIcon\n        onRenderTemplate: null,\n        // function( index, template ) { return template; }, // template is a string\n        onRenderHeader: null,\n        // function( index ) {}, // nothing to return\n        // *** functionality\n        cancelSelection: true,\n        // prevent text selection in the header\n        tabIndex: true,\n        // add tabindex to header for keyboard accessibility\n        dateFormat: 'mmddyyyy',\n        // other options: 'ddmmyyy' or 'yyyymmdd'\n        sortMultiSortKey: 'shiftKey',\n        // key used to select additional columns\n        sortResetKey: 'ctrlKey',\n        // key used to remove sorting on a column\n        usNumberFormat: true,\n        // false for German '1.234.567,89' or French '1 234 567,89'\n        delayInit: false,\n        // if false, the parsed table contents will not update until the first sort\n        serverSideSorting: false,\n        // if true, server-side sorting should be performed because client-side sorting will be disabled, but the ui and events will still be used.\n        resort: true,\n        // default setting to trigger a resort after an 'update', 'addRows', 'updateCell', etc has completed\n        // *** sort options\n        headers: {},\n        // set sorter, string, empty, locked order, sortInitialOrder, filter, etc.\n        ignoreCase: true,\n        // ignore case while sorting\n        sortForce: null,\n        // column(s) first sorted; always applied\n        sortList: [],\n        // Initial sort order; applied initially; updated when manually sorted\n        sortAppend: null,\n        // column(s) sorted last; always applied\n        sortStable: false,\n        // when sorting two rows with exactly the same content, the original sort order is maintained\n        sortInitialOrder: 'asc',\n        // sort direction on first click\n        sortLocaleCompare: false,\n        // replace equivalent character (accented characters)\n        sortReset: false,\n        // third click on the header will reset column to default - unsorted\n        sortRestart: false,\n        // restart sort to 'sortInitialOrder' when clicking on previously unsorted columns\n        emptyTo: 'bottom',\n        // sort empty cell to bottom, top, none, zero, emptyMax, emptyMin\n        stringTo: 'max',\n        // sort strings in numerical column as max, min, top, bottom, zero\n        duplicateSpan: true,\n        // colspan cells in the tbody will have duplicated content in the cache for each spanned column\n        textExtraction: 'basic',\n        // text extraction method/function - function( node, table, cellIndex ) {}\n        textAttribute: 'data-text',\n        // data-attribute that contains alternate cell text (used in default textExtraction function)\n        textSorter: null,\n        // choose overall or specific column sorter function( a, b, direction, table, columnIndex ) [alt: ts.sortText]\n        numberSorter: null,\n        // choose overall numeric sorter function( a, b, direction, maxColumnValue )\n        // *** widget options\n        initWidgets: true,\n        // apply widgets on tablesorter initialization\n        widgetClass: 'widget-{name}',\n        // table class name template to match to include a widget\n        widgets: [],\n        // method to add widgets, e.g. widgets: ['zebra']\n        widgetOptions: {\n          zebra: ['even', 'odd'] // zebra widget alternating row class names\n\n        },\n        // *** callbacks\n        initialized: null,\n        // function( table ) {},\n        // *** extra css class names\n        tableClass: '',\n        cssAsc: '',\n        cssDesc: '',\n        cssNone: '',\n        cssHeader: '',\n        cssHeaderRow: '',\n        cssProcessing: '',\n        // processing icon applied to header during sort/filter\n        cssChildRow: 'tablesorter-childRow',\n        // class name indiciating that a row is to be attached to its parent\n        cssInfoBlock: 'tablesorter-infoOnly',\n        // don't sort tbody with this class name (only one class name allowed here!)\n        cssNoSort: 'tablesorter-noSort',\n        // class name added to element inside header; clicking on it won't cause a sort\n        cssIgnoreRow: 'tablesorter-ignoreRow',\n        // header row to ignore; cells within this row will not be added to c.$headers\n        cssIcon: 'tablesorter-icon',\n        // if this class does not exist, the {icon} will not be added from the headerTemplate\n        cssIconNone: '',\n        // class name added to the icon when there is no column sort\n        cssIconAsc: '',\n        // class name added to the icon when the column has an ascending sort\n        cssIconDesc: '',\n        // class name added to the icon when the column has a descending sort\n        cssIconDisabled: '',\n        // class name added to the icon when the column has a disabled sort\n        // *** events\n        pointerClick: 'click',\n        pointerDown: 'mousedown',\n        pointerUp: 'mouseup',\n        // *** selectors\n        selectorHeaders: '> thead th, > thead td',\n        selectorSort: 'th, td',\n        // jQuery selector of content within selectorHeaders that is clickable to trigger a sort\n        selectorRemove: '.remove-me',\n        // *** advanced\n        debug: false,\n        // *** Internal variables\n        headerList: [],\n        empties: {},\n        strings: {},\n        parsers: [],\n        // *** parser options for validator; values must be falsy!\n        globalize: 0,\n        imgAttr: 0 // removed: widgetZebra: { css: ['even', 'odd'] }\n\n      },\n      // internal css classes - these will ALWAYS be added to\n      // the table and MUST only contain one class name - fixes #381\n      css: {\n        table: 'tablesorter',\n        cssHasChild: 'tablesorter-hasChildRow',\n        childRow: 'tablesorter-childRow',\n        colgroup: 'tablesorter-colgroup',\n        header: 'tablesorter-header',\n        headerRow: 'tablesorter-headerRow',\n        headerIn: 'tablesorter-header-inner',\n        icon: 'tablesorter-icon',\n        processing: 'tablesorter-processing',\n        sortAsc: 'tablesorter-headerAsc',\n        sortDesc: 'tablesorter-headerDesc',\n        sortNone: 'tablesorter-headerUnSorted'\n      },\n      // labels applied to sortable headers for accessibility (aria) support\n      language: {\n        sortAsc: 'Ascending sort applied, ',\n        sortDesc: 'Descending sort applied, ',\n        sortNone: 'No sort applied, ',\n        sortDisabled: 'sorting is disabled',\n        nextAsc: 'activate to apply an ascending sort',\n        nextDesc: 'activate to apply a descending sort',\n        nextNone: 'activate to remove the sort'\n      },\n      regex: {\n        templateContent: /\\{content\\}/g,\n        templateIcon: /\\{icon\\}/g,\n        templateName: /\\{name\\}/i,\n        spaces: /\\s+/g,\n        nonWord: /\\W/g,\n        formElements: /(input|select|button|textarea)/i,\n        // *** sort functions ***\n        // regex used in natural sort\n        // chunk/tokenize numbers & letters\n        chunk: /(^([+\\-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)?$|^0x[0-9a-f]+$|\\d+)/gi,\n        // replace chunks @ ends\n        chunks: /(^\\\\0|\\\\0$)/,\n        hex: /^0x[0-9a-f]+$/i,\n        // *** formatFloat ***\n        comma: /,/g,\n        digitNonUS: /[\\s|\\.]/g,\n        digitNegativeTest: /^\\s*\\([.\\d]+\\)/,\n        digitNegativeReplace: /^\\s*\\(([.\\d]+)\\)/,\n        // *** isDigit ***\n        digitTest: /^[\\-+(]?\\d+[)]?$/,\n        digitReplace: /[,.'\"\\s]/g\n      },\n      // digit sort, text location\n      string: {\n        max: 1,\n        min: -1,\n        emptymin: 1,\n        emptymax: -1,\n        zero: 0,\n        none: 0,\n        'null': 0,\n        top: true,\n        bottom: false\n      },\n      keyCodes: {\n        enter: 13\n      },\n      // placeholder date parser data (globalize)\n      dates: {},\n      // These methods can be applied on table.config instance\n      instanceMethods: {},\n\n      /*\n      ▄█████ ██████ ██████ ██  ██ █████▄\n      ▀█▄    ██▄▄     ██   ██  ██ ██▄▄██\n         ▀█▄ ██▀▀     ██   ██  ██ ██▀▀▀\n      █████▀ ██████   ██   ▀████▀ ██\n      */\n      setup: function (table, c) {\n        // if no thead or tbody, or tablesorter is already present, quit\n        if (!table || !table.tHead || table.tBodies.length === 0 || table.hasInitialized === true) {\n          if (ts.debug(c, 'core')) {\n            if (table.hasInitialized) {\n              console.warn('Stopping initialization. Tablesorter has already been initialized');\n            } else {\n              console.error('Stopping initialization! No table, thead or tbody', table);\n            }\n          }\n\n          return;\n        }\n\n        var tmp = '',\n            $table = $(table),\n            meta = $.metadata; // initialization flag\n\n        table.hasInitialized = false; // table is being processed flag\n\n        table.isProcessing = true; // make sure to store the config object\n\n        table.config = c; // save the settings where they read\n\n        $.data(table, 'tablesorter', c);\n\n        if (ts.debug(c, 'core')) {\n          console[console.group ? 'group' : 'log']('Initializing tablesorter v' + ts.version);\n          $.data(table, 'startoveralltimer', new Date());\n        } // removing this in version 3 (only supports jQuery 1.7+)\n\n\n        c.supportsDataObject = function (version) {\n          version[0] = parseInt(version[0], 10);\n          return version[0] > 1 || version[0] === 1 && parseInt(version[1], 10) >= 4;\n        }($.fn.jquery.split('.')); // ensure case insensitivity\n\n\n        c.emptyTo = c.emptyTo.toLowerCase();\n        c.stringTo = c.stringTo.toLowerCase();\n        c.last = {\n          sortList: [],\n          clickedIndex: -1\n        }; // add table theme class only if there isn't already one there\n\n        if (!/tablesorter\\-/.test($table.attr('class'))) {\n          tmp = c.theme !== '' ? ' tablesorter-' + c.theme : '';\n        } // give the table a unique id, which will be used in namespace binding\n\n\n        if (!c.namespace) {\n          c.namespace = '.tablesorter' + Math.random().toString(16).slice(2);\n        } else {\n          // make sure namespace starts with a period & doesn't have weird characters\n          c.namespace = '.' + c.namespace.replace(ts.regex.nonWord, '');\n        }\n\n        c.table = table;\n        c.$table = $table // add namespace to table to allow bindings on extra elements to target\n        // the parent table (e.g. parser-input-select)\n        .addClass(ts.css.table + ' ' + c.tableClass + tmp + ' ' + c.namespace.slice(1)).attr('role', 'grid');\n        c.$headers = $table.find(c.selectorHeaders);\n        c.$table.children().children('tr').attr('role', 'row');\n        c.$tbodies = $table.children('tbody:not(.' + c.cssInfoBlock + ')').attr({\n          'aria-live': 'polite',\n          'aria-relevant': 'all'\n        });\n\n        if (c.$table.children('caption').length) {\n          tmp = c.$table.children('caption')[0];\n\n          if (!tmp.id) {\n            tmp.id = c.namespace.slice(1) + 'caption';\n          }\n\n          c.$table.attr('aria-labelledby', tmp.id);\n        }\n\n        c.widgetInit = {}; // keep a list of initialized widgets\n        // change textExtraction via data-attribute\n\n        c.textExtraction = c.$table.attr('data-text-extraction') || c.textExtraction || 'basic'; // build headers\n\n        ts.buildHeaders(c); // fixate columns if the users supplies the fixedWidth option\n        // do this after theme has been applied\n\n        ts.fixColumnWidth(table); // add widgets from class name\n\n        ts.addWidgetFromClass(table); // add widget options before parsing (e.g. grouping widget has parser settings)\n\n        ts.applyWidgetOptions(table); // try to auto detect column type, and store in tables config\n\n        ts.setupParsers(c); // start total row count at zero\n\n        c.totalRows = 0; // only validate options while debugging. See #1528\n\n        if (c.debug) {\n          ts.validateOptions(c);\n        } // build the cache for the tbody cells\n        // delayInit will delay building the cache until the user starts a sort\n\n\n        if (!c.delayInit) {\n          ts.buildCache(c);\n        } // bind all header events and methods\n\n\n        ts.bindEvents(table, c.$headers, true);\n        ts.bindMethods(c); // get sort list from jQuery data or metadata\n        // in jQuery < 1.4, an error occurs when calling $table.data()\n\n        if (c.supportsDataObject && typeof $table.data().sortlist !== 'undefined') {\n          c.sortList = $table.data().sortlist;\n        } else if (meta && $table.metadata() && $table.metadata().sortlist) {\n          c.sortList = $table.metadata().sortlist;\n        } // apply widget init code\n\n\n        ts.applyWidget(table, true); // if user has supplied a sort list to constructor\n\n        if (c.sortList.length > 0) {\n          ts.sortOn(c, c.sortList, {}, !c.initWidgets);\n        } else {\n          ts.setHeadersCss(c);\n\n          if (c.initWidgets) {\n            // apply widget format\n            ts.applyWidget(table, false);\n          }\n        } // show processesing icon\n\n\n        if (c.showProcessing) {\n          $table.unbind('sortBegin' + c.namespace + ' sortEnd' + c.namespace).bind('sortBegin' + c.namespace + ' sortEnd' + c.namespace, function (e) {\n            clearTimeout(c.timerProcessing);\n            ts.isProcessing(table);\n\n            if (e.type === 'sortBegin') {\n              c.timerProcessing = setTimeout(function () {\n                ts.isProcessing(table, true);\n              }, 500);\n            }\n          });\n        } // initialized\n\n\n        table.hasInitialized = true;\n        table.isProcessing = false;\n\n        if (ts.debug(c, 'core')) {\n          console.log('Overall initialization time:' + ts.benchmark($.data(table, 'startoveralltimer')));\n\n          if (ts.debug(c, 'core') && console.groupEnd) {\n            console.groupEnd();\n          }\n        }\n\n        $table.triggerHandler('tablesorter-initialized', table);\n\n        if (typeof c.initialized === 'function') {\n          c.initialized(table);\n        }\n      },\n      bindMethods: function (c) {\n        var $table = c.$table,\n            namespace = c.namespace,\n            events = ('sortReset update updateRows updateAll updateHeaders addRows updateCell updateComplete ' + 'sorton appendCache updateCache applyWidgetId applyWidgets refreshWidgets destroy mouseup ' + 'mouseleave ').split(' ').join(namespace + ' '); // apply easy methods that trigger bound events\n\n        $table.unbind(events.replace(ts.regex.spaces, ' ')).bind('sortReset' + namespace, function (e, callback) {\n          e.stopPropagation(); // using this.config to ensure functions are getting a non-cached version of the config\n\n          ts.sortReset(this.config, function (table) {\n            if (table.isApplyingWidgets) {\n              // multiple triggers in a row... filterReset, then sortReset - see #1361\n              // wait to update widgets\n              setTimeout(function () {\n                ts.applyWidget(table, '', callback);\n              }, 100);\n            } else {\n              ts.applyWidget(table, '', callback);\n            }\n          });\n        }).bind('updateAll' + namespace, function (e, resort, callback) {\n          e.stopPropagation();\n          ts.updateAll(this.config, resort, callback);\n        }).bind('update' + namespace + ' updateRows' + namespace, function (e, resort, callback) {\n          e.stopPropagation();\n          ts.update(this.config, resort, callback);\n        }).bind('updateHeaders' + namespace, function (e, callback) {\n          e.stopPropagation();\n          ts.updateHeaders(this.config, callback);\n        }).bind('updateCell' + namespace, function (e, cell, resort, callback) {\n          e.stopPropagation();\n          ts.updateCell(this.config, cell, resort, callback);\n        }).bind('addRows' + namespace, function (e, $row, resort, callback) {\n          e.stopPropagation();\n          ts.addRows(this.config, $row, resort, callback);\n        }).bind('updateComplete' + namespace, function () {\n          this.isUpdating = false;\n        }).bind('sorton' + namespace, function (e, list, callback, init) {\n          e.stopPropagation();\n          ts.sortOn(this.config, list, callback, init);\n        }).bind('appendCache' + namespace, function (e, callback, init) {\n          e.stopPropagation();\n          ts.appendCache(this.config, init);\n\n          if ($.isFunction(callback)) {\n            callback(this);\n          }\n        }) // $tbodies variable is used by the tbody sorting widget\n        .bind('updateCache' + namespace, function (e, callback, $tbodies) {\n          e.stopPropagation();\n          ts.updateCache(this.config, callback, $tbodies);\n        }).bind('applyWidgetId' + namespace, function (e, id) {\n          e.stopPropagation();\n          ts.applyWidgetId(this, id);\n        }).bind('applyWidgets' + namespace, function (e, callback) {\n          e.stopPropagation(); // apply widgets (false = not initializing)\n\n          ts.applyWidget(this, false, callback);\n        }).bind('refreshWidgets' + namespace, function (e, all, dontapply) {\n          e.stopPropagation();\n          ts.refreshWidgets(this, all, dontapply);\n        }).bind('removeWidget' + namespace, function (e, name, refreshing) {\n          e.stopPropagation();\n          ts.removeWidget(this, name, refreshing);\n        }).bind('destroy' + namespace, function (e, removeClasses, callback) {\n          e.stopPropagation();\n          ts.destroy(this, removeClasses, callback);\n        }).bind('resetToLoadState' + namespace, function (e) {\n          e.stopPropagation(); // remove all widgets\n\n          ts.removeWidget(this, true, false);\n          var tmp = $.extend(true, {}, c.originalSettings); // restore original settings; this clears out current settings, but does not clear\n          // values saved to storage.\n\n          c = $.extend(true, {}, ts.defaults, tmp);\n          c.originalSettings = tmp;\n          this.hasInitialized = false; // setup the entire table again\n\n          ts.setup(this, c);\n        });\n      },\n      bindEvents: function (table, $headers, core) {\n        table = $(table)[0];\n        var tmp,\n            c = table.config,\n            namespace = c.namespace,\n            downTarget = null;\n\n        if (core !== true) {\n          $headers.addClass(namespace.slice(1) + '_extra_headers');\n          tmp = ts.getClosest($headers, 'table');\n\n          if (tmp.length && tmp[0].nodeName === 'TABLE' && tmp[0] !== table) {\n            $(tmp[0]).addClass(namespace.slice(1) + '_extra_table');\n          }\n        }\n\n        tmp = (c.pointerDown + ' ' + c.pointerUp + ' ' + c.pointerClick + ' sort keyup ').replace(ts.regex.spaces, ' ').split(' ').join(namespace + ' '); // apply event handling to headers and/or additional headers (stickyheaders, scroller, etc)\n\n        $headers // http://stackoverflow.com/questions/5312849/jquery-find-self;\n        .find(c.selectorSort).add($headers.filter(c.selectorSort)).unbind(tmp).bind(tmp, function (e, external) {\n          var $cell,\n              cell,\n              temp,\n              $target = $(e.target),\n              // wrap event type in spaces, so the match doesn't trigger on inner words\n          type = ' ' + e.type + ' '; // only recognize left clicks\n\n          if ((e.which || e.button) !== 1 && !type.match(' ' + c.pointerClick + ' | sort | keyup ') || // allow pressing enter\n          type === ' keyup ' && e.which !== ts.keyCodes.enter || // allow triggering a click event (e.which is undefined) & ignore physical clicks\n          type.match(' ' + c.pointerClick + ' ') && typeof e.which !== 'undefined') {\n            return;\n          } // ignore mouseup if mousedown wasn't on the same target\n\n\n          if (type.match(' ' + c.pointerUp + ' ') && downTarget !== e.target && external !== true) {\n            return;\n          } // set target on mousedown\n\n\n          if (type.match(' ' + c.pointerDown + ' ')) {\n            downTarget = e.target; // preventDefault needed or jQuery v1.3.2 and older throws an\n            // \"Uncaught TypeError: handler.apply is not a function\" error\n\n            temp = $target.jquery.split('.');\n\n            if (temp[0] === '1' && temp[1] < 4) {\n              e.preventDefault();\n            }\n\n            return;\n          }\n\n          downTarget = null;\n          $cell = ts.getClosest($(this), '.' + ts.css.header); // prevent sort being triggered on form elements\n\n          if (ts.regex.formElements.test(e.target.nodeName) || // nosort class name, or elements within a nosort container\n          $target.hasClass(c.cssNoSort) || $target.parents('.' + c.cssNoSort).length > 0 || // disabled cell directly clicked\n          $cell.hasClass('sorter-false') || // elements within a button\n          $target.parents('button').length > 0) {\n            return !c.cancelSelection;\n          }\n\n          if (c.delayInit && ts.isEmptyObject(c.cache)) {\n            ts.buildCache(c);\n          } // use column index from data-attribute or index of current row; fixes #1116\n\n\n          c.last.clickedIndex = $cell.attr('data-column') || $cell.index();\n          cell = c.$headerIndexed[c.last.clickedIndex][0];\n\n          if (cell && !cell.sortDisabled) {\n            ts.initSort(c, cell, e);\n          }\n        });\n\n        if (c.cancelSelection) {\n          // cancel selection\n          $headers.attr('unselectable', 'on').bind('selectstart', false).css({\n            'user-select': 'none',\n            'MozUserSelect': 'none' // not needed for jQuery 1.8+\n\n          });\n        }\n      },\n      buildHeaders: function (c) {\n        var $temp, icon, timer, indx;\n        c.headerList = [];\n        c.headerContent = [];\n        c.sortVars = [];\n\n        if (ts.debug(c, 'core')) {\n          timer = new Date();\n        } // children tr in tfoot - see issue #196 & #547\n        // don't pass table.config to computeColumnIndex here - widgets (math) pass it to \"quickly\" index tbody cells\n\n\n        c.columns = ts.computeColumnIndex(c.$table.children('thead, tfoot').children('tr')); // add icon if cssIcon option exists\n\n        icon = c.cssIcon ? '<i class=\"' + (c.cssIcon === ts.css.icon ? ts.css.icon : c.cssIcon + ' ' + ts.css.icon) + '\"></i>' : ''; // redefine c.$headers here in case of an updateAll that replaces or adds an entire header cell - see #683\n\n        c.$headers = $($.map(c.$table.find(c.selectorHeaders), function (elem, index) {\n          var configHeaders,\n              header,\n              column,\n              template,\n              tmp,\n              $elem = $(elem); // ignore cell (don't add it to c.$headers) if row has ignoreRow class\n\n          if (ts.getClosest($elem, 'tr').hasClass(c.cssIgnoreRow)) {\n            return;\n          } // transfer data-column to element if not th/td - #1459\n\n\n          if (!/(th|td)/i.test(elem.nodeName)) {\n            tmp = ts.getClosest($elem, 'th, td');\n            $elem.attr('data-column', tmp.attr('data-column'));\n          } // make sure to get header cell & not column indexed cell\n\n\n          configHeaders = ts.getColumnData(c.table, c.headers, index, true); // save original header content\n\n          c.headerContent[index] = $elem.html(); // if headerTemplate is empty, don't reformat the header cell\n\n          if (c.headerTemplate !== '' && !$elem.find('.' + ts.css.headerIn).length) {\n            // set up header template\n            template = c.headerTemplate.replace(ts.regex.templateContent, $elem.html()).replace(ts.regex.templateIcon, $elem.find('.' + ts.css.icon).length ? '' : icon);\n\n            if (c.onRenderTemplate) {\n              header = c.onRenderTemplate.apply($elem, [index, template]); // only change t if something is returned\n\n              if (header && typeof header === 'string') {\n                template = header;\n              }\n            }\n\n            $elem.html('<div class=\"' + ts.css.headerIn + '\">' + template + '</div>'); // faster than wrapInner\n          }\n\n          if (c.onRenderHeader) {\n            c.onRenderHeader.apply($elem, [index, c, c.$table]);\n          }\n\n          column = parseInt($elem.attr('data-column'), 10);\n          elem.column = column;\n          tmp = ts.getOrder(ts.getData($elem, configHeaders, 'sortInitialOrder') || c.sortInitialOrder); // this may get updated numerous times if there are multiple rows\n\n          c.sortVars[column] = {\n            count: -1,\n            // set to -1 because clicking on the header automatically adds one\n            order: tmp ? c.sortReset ? [1, 0, 2] : [1, 0] : // desc, asc, unsorted\n            c.sortReset ? [0, 1, 2] : [0, 1],\n            // asc, desc, unsorted\n            lockedOrder: false,\n            sortedBy: ''\n          };\n          tmp = ts.getData($elem, configHeaders, 'lockedOrder') || false;\n\n          if (typeof tmp !== 'undefined' && tmp !== false) {\n            c.sortVars[column].lockedOrder = true;\n            c.sortVars[column].order = ts.getOrder(tmp) ? [1, 1] : [0, 0];\n          } // add cell to headerList\n\n\n          c.headerList[index] = elem;\n          $elem.addClass(ts.css.header + ' ' + c.cssHeader); // add to parent in case there are multiple rows\n\n          ts.getClosest($elem, 'tr').addClass(ts.css.headerRow + ' ' + c.cssHeaderRow).attr('role', 'row'); // allow keyboard cursor to focus on element\n\n          if (c.tabIndex) {\n            $elem.attr('tabindex', 0);\n          }\n\n          return elem;\n        })); // cache headers per column\n\n        c.$headerIndexed = [];\n\n        for (indx = 0; indx < c.columns; indx++) {\n          // colspan in header making a column undefined\n          if (ts.isEmptyObject(c.sortVars[indx])) {\n            c.sortVars[indx] = {};\n          } // Use c.$headers.parent() in case selectorHeaders doesn't point to the th/td\n\n\n          $temp = c.$headers.filter('[data-column=\"' + indx + '\"]'); // target sortable column cells, unless there are none, then use non-sortable cells\n          // .last() added in jQuery 1.4; use .filter(':last') to maintain compatibility with jQuery v1.2.6\n\n          c.$headerIndexed[indx] = $temp.length ? $temp.not('.sorter-false').length ? $temp.not('.sorter-false').filter(':last') : $temp.filter(':last') : $();\n        }\n\n        c.$table.find(c.selectorHeaders).attr({\n          scope: 'col',\n          role: 'columnheader'\n        }); // enable/disable sorting\n\n        ts.updateHeader(c);\n\n        if (ts.debug(c, 'core')) {\n          console.log('Built headers:' + ts.benchmark(timer));\n          console.log(c.$headers);\n        }\n      },\n      // Use it to add a set of methods to table.config which will be available for all tables.\n      // This should be done before table initialization\n      addInstanceMethods: function (methods) {\n        $.extend(ts.instanceMethods, methods);\n      },\n\n      /*\n      █████▄ ▄████▄ █████▄ ▄█████ ██████ █████▄ ▄█████\n      ██▄▄██ ██▄▄██ ██▄▄██ ▀█▄    ██▄▄   ██▄▄██ ▀█▄\n      ██▀▀▀  ██▀▀██ ██▀██     ▀█▄ ██▀▀   ██▀██     ▀█▄\n      ██     ██  ██ ██  ██ █████▀ ██████ ██  ██ █████▀\n      */\n      setupParsers: function (c, $tbodies) {\n        var rows,\n            list,\n            span,\n            max,\n            colIndex,\n            indx,\n            header,\n            configHeaders,\n            noParser,\n            parser,\n            extractor,\n            time,\n            tbody,\n            len,\n            table = c.table,\n            tbodyIndex = 0,\n            debug = ts.debug(c, 'core'),\n            debugOutput = {}; // update table bodies in case we start with an empty table\n\n        c.$tbodies = c.$table.children('tbody:not(.' + c.cssInfoBlock + ')');\n        tbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies;\n        len = tbody.length;\n\n        if (len === 0) {\n          return debug ? console.warn('Warning: *Empty table!* Not building a parser cache') : '';\n        } else if (debug) {\n          time = new Date();\n          console[console.group ? 'group' : 'log']('Detecting parsers for each column');\n        }\n\n        list = {\n          extractors: [],\n          parsers: []\n        };\n\n        while (tbodyIndex < len) {\n          rows = tbody[tbodyIndex].rows;\n\n          if (rows.length) {\n            colIndex = 0;\n            max = c.columns;\n\n            for (indx = 0; indx < max; indx++) {\n              header = c.$headerIndexed[colIndex];\n\n              if (header && header.length) {\n                // get column indexed table cell; adding true parameter fixes #1362 but\n                // it would break backwards compatibility...\n                configHeaders = ts.getColumnData(table, c.headers, colIndex); // , true );\n                // get column parser/extractor\n\n                extractor = ts.getParserById(ts.getData(header, configHeaders, 'extractor'));\n                parser = ts.getParserById(ts.getData(header, configHeaders, 'sorter'));\n                noParser = ts.getData(header, configHeaders, 'parser') === 'false'; // empty cells behaviour - keeping emptyToBottom for backwards compatibility\n\n                c.empties[colIndex] = (ts.getData(header, configHeaders, 'empty') || c.emptyTo || (c.emptyToBottom ? 'bottom' : 'top')).toLowerCase(); // text strings behaviour in numerical sorts\n\n                c.strings[colIndex] = (ts.getData(header, configHeaders, 'string') || c.stringTo || 'max').toLowerCase();\n\n                if (noParser) {\n                  parser = ts.getParserById('no-parser');\n                }\n\n                if (!extractor) {\n                  // For now, maybe detect someday\n                  extractor = false;\n                }\n\n                if (!parser) {\n                  parser = ts.detectParserForColumn(c, rows, -1, colIndex);\n                }\n\n                if (debug) {\n                  debugOutput['(' + colIndex + ') ' + header.text()] = {\n                    parser: parser.id,\n                    extractor: extractor ? extractor.id : 'none',\n                    string: c.strings[colIndex],\n                    empty: c.empties[colIndex]\n                  };\n                }\n\n                list.parsers[colIndex] = parser;\n                list.extractors[colIndex] = extractor;\n                span = header[0].colSpan - 1;\n\n                if (span > 0) {\n                  colIndex += span;\n                  max += span;\n\n                  while (span + 1 > 0) {\n                    // set colspan columns to use the same parsers & extractors\n                    list.parsers[colIndex - span] = parser;\n                    list.extractors[colIndex - span] = extractor;\n                    span--;\n                  }\n                }\n              }\n\n              colIndex++;\n            }\n          }\n\n          tbodyIndex += list.parsers.length ? len : 1;\n        }\n\n        if (debug) {\n          if (!ts.isEmptyObject(debugOutput)) {\n            console[console.table ? 'table' : 'log'](debugOutput);\n          } else {\n            console.warn('  No parsers detected!');\n          }\n\n          console.log('Completed detecting parsers' + ts.benchmark(time));\n\n          if (console.groupEnd) {\n            console.groupEnd();\n          }\n        }\n\n        c.parsers = list.parsers;\n        c.extractors = list.extractors;\n      },\n      addParser: function (parser) {\n        var indx,\n            len = ts.parsers.length,\n            add = true;\n\n        for (indx = 0; indx < len; indx++) {\n          if (ts.parsers[indx].id.toLowerCase() === parser.id.toLowerCase()) {\n            add = false;\n          }\n        }\n\n        if (add) {\n          ts.parsers[ts.parsers.length] = parser;\n        }\n      },\n      getParserById: function (name) {\n        /*jshint eqeqeq:false */\n        // eslint-disable-next-line eqeqeq\n        if (name == 'false') {\n          return false;\n        }\n\n        var indx,\n            len = ts.parsers.length;\n\n        for (indx = 0; indx < len; indx++) {\n          if (ts.parsers[indx].id.toLowerCase() === name.toString().toLowerCase()) {\n            return ts.parsers[indx];\n          }\n        }\n\n        return false;\n      },\n      detectParserForColumn: function (c, rows, rowIndex, cellIndex) {\n        var cur,\n            $node,\n            row,\n            indx = ts.parsers.length,\n            node = false,\n            nodeValue = '',\n            debug = ts.debug(c, 'core'),\n            keepLooking = true;\n\n        while (nodeValue === '' && keepLooking) {\n          rowIndex++;\n          row = rows[rowIndex]; // stop looking after 50 empty rows\n\n          if (row && rowIndex < 50) {\n            if (row.className.indexOf(ts.cssIgnoreRow) < 0) {\n              node = rows[rowIndex].cells[cellIndex];\n              nodeValue = ts.getElementText(c, node, cellIndex);\n              $node = $(node);\n\n              if (debug) {\n                console.log('Checking if value was empty on row ' + rowIndex + ', column: ' + cellIndex + ': \"' + nodeValue + '\"');\n              }\n            }\n          } else {\n            keepLooking = false;\n          }\n        }\n\n        while (--indx >= 0) {\n          cur = ts.parsers[indx]; // ignore the default text parser because it will always be true\n\n          if (cur && cur.id !== 'text' && cur.is && cur.is(nodeValue, c.table, node, $node)) {\n            return cur;\n          }\n        } // nothing found, return the generic parser (text)\n\n\n        return ts.getParserById('text');\n      },\n      getElementText: function (c, node, cellIndex) {\n        if (!node) {\n          return '';\n        }\n\n        var tmp,\n            extract = c.textExtraction || '',\n            // node could be a jquery object\n        // http://jsperf.com/jquery-vs-instanceof-jquery/2\n        $node = node.jquery ? node : $(node);\n\n        if (typeof extract === 'string') {\n          // check data-attribute first when set to 'basic'; don't use node.innerText - it's really slow!\n          // http://www.kellegous.com/j/2013/02/27/innertext-vs-textcontent/\n          if (extract === 'basic' && typeof (tmp = $node.attr(c.textAttribute)) !== 'undefined') {\n            return $.trim(tmp);\n          }\n\n          return $.trim(node.textContent || $node.text());\n        } else {\n          if (typeof extract === 'function') {\n            return $.trim(extract($node[0], c.table, cellIndex));\n          } else if (typeof (tmp = ts.getColumnData(c.table, extract, cellIndex)) === 'function') {\n            return $.trim(tmp($node[0], c.table, cellIndex));\n          }\n        } // fallback\n\n\n        return $.trim($node[0].textContent || $node.text());\n      },\n      // centralized function to extract/parse cell contents\n      getParsedText: function (c, cell, colIndex, txt) {\n        if (typeof txt === 'undefined') {\n          txt = ts.getElementText(c, cell, colIndex);\n        } // if no parser, make sure to return the txt\n\n\n        var val = '' + txt,\n            parser = c.parsers[colIndex],\n            extractor = c.extractors[colIndex];\n\n        if (parser) {\n          // do extract before parsing, if there is one\n          if (extractor && typeof extractor.format === 'function') {\n            txt = extractor.format(txt, c.table, cell, colIndex);\n          } // allow parsing if the string is empty, previously parsing would change it to zero,\n          // in case the parser needs to extract data from the table cell attributes\n\n\n          val = parser.id === 'no-parser' ? '' : // make sure txt is a string (extractor may have converted it)\n          parser.format('' + txt, c.table, cell, colIndex);\n\n          if (c.ignoreCase && typeof val === 'string') {\n            val = val.toLowerCase();\n          }\n        }\n\n        return val;\n      },\n\n      /*\n      ▄████▄ ▄████▄ ▄████▄ ██  ██ ██████\n      ██  ▀▀ ██▄▄██ ██  ▀▀ ██▄▄██ ██▄▄\n      ██  ▄▄ ██▀▀██ ██  ▄▄ ██▀▀██ ██▀▀\n      ▀████▀ ██  ██ ▀████▀ ██  ██ ██████\n      */\n      buildCache: function (c, callback, $tbodies) {\n        var cache,\n            val,\n            txt,\n            rowIndex,\n            colIndex,\n            tbodyIndex,\n            $tbody,\n            $row,\n            cols,\n            $cells,\n            cell,\n            cacheTime,\n            totalRows,\n            rowData,\n            prevRowData,\n            colMax,\n            span,\n            cacheIndex,\n            hasParser,\n            max,\n            len,\n            index,\n            table = c.table,\n            parsers = c.parsers,\n            debug = ts.debug(c, 'core'); // update tbody variable\n\n        c.$tbodies = c.$table.children('tbody:not(.' + c.cssInfoBlock + ')');\n        $tbody = typeof $tbodies === 'undefined' ? c.$tbodies : $tbodies, c.cache = {};\n        c.totalRows = 0; // if no parsers found, return - it's an empty table.\n\n        if (!parsers) {\n          return debug ? console.warn('Warning: *Empty table!* Not building a cache') : '';\n        }\n\n        if (debug) {\n          cacheTime = new Date();\n        } // processing icon\n\n\n        if (c.showProcessing) {\n          ts.isProcessing(table, true);\n        }\n\n        for (tbodyIndex = 0; tbodyIndex < $tbody.length; tbodyIndex++) {\n          colMax = []; // column max value per tbody\n\n          cache = c.cache[tbodyIndex] = {\n            normalized: [] // array of normalized row data; last entry contains 'rowData' above\n            // colMax: #   // added at the end\n\n          };\n          totalRows = $tbody[tbodyIndex] && $tbody[tbodyIndex].rows.length || 0;\n\n          for (rowIndex = 0; rowIndex < totalRows; ++rowIndex) {\n            rowData = {\n              // order: original row order #\n              // $row : jQuery Object[]\n              child: [],\n              // child row text (filter widget)\n              raw: [] // original row text\n\n            };\n            /** Add the table data to main data array */\n\n            $row = $($tbody[tbodyIndex].rows[rowIndex]);\n            cols = []; // ignore \"remove-me\" rows\n\n            if ($row.hasClass(c.selectorRemove.slice(1))) {\n              continue;\n            } // if this is a child row, add it to the last row's children and continue to the next row\n            // ignore child row class, if it is the first row\n\n\n            if ($row.hasClass(c.cssChildRow) && rowIndex !== 0) {\n              len = cache.normalized.length - 1;\n              prevRowData = cache.normalized[len][c.columns];\n              prevRowData.$row = prevRowData.$row.add($row); // add 'hasChild' class name to parent row\n\n              if (!$row.prev().hasClass(c.cssChildRow)) {\n                $row.prev().addClass(ts.css.cssHasChild);\n              } // save child row content (un-parsed!)\n\n\n              $cells = $row.children('th, td');\n              len = prevRowData.child.length;\n              prevRowData.child[len] = []; // child row content does not account for colspans/rowspans; so indexing may be off\n\n              cacheIndex = 0;\n              max = c.columns;\n\n              for (colIndex = 0; colIndex < max; colIndex++) {\n                cell = $cells[colIndex];\n\n                if (cell) {\n                  prevRowData.child[len][colIndex] = ts.getParsedText(c, cell, colIndex);\n                  span = $cells[colIndex].colSpan - 1;\n\n                  if (span > 0) {\n                    cacheIndex += span;\n                    max += span;\n                  }\n                }\n\n                cacheIndex++;\n              } // go to the next for loop\n\n\n              continue;\n            }\n\n            rowData.$row = $row;\n            rowData.order = rowIndex; // add original row position to rowCache\n\n            cacheIndex = 0;\n            max = c.columns;\n\n            for (colIndex = 0; colIndex < max; ++colIndex) {\n              cell = $row[0].cells[colIndex];\n\n              if (cell && cacheIndex < c.columns) {\n                hasParser = typeof parsers[cacheIndex] !== 'undefined';\n\n                if (!hasParser && debug) {\n                  console.warn('No parser found for row: ' + rowIndex + ', column: ' + colIndex + '; cell containing: \"' + $(cell).text() + '\"; does it have a header?');\n                }\n\n                val = ts.getElementText(c, cell, cacheIndex);\n                rowData.raw[cacheIndex] = val; // save original row text\n                // save raw column text even if there is no parser set\n\n                txt = ts.getParsedText(c, cell, cacheIndex, val);\n                cols[cacheIndex] = txt;\n\n                if (hasParser && (parsers[cacheIndex].type || '').toLowerCase() === 'numeric') {\n                  // determine column max value (ignore sign)\n                  colMax[cacheIndex] = Math.max(Math.abs(txt) || 0, colMax[cacheIndex] || 0);\n                } // allow colSpan in tbody\n\n\n                span = cell.colSpan - 1;\n\n                if (span > 0) {\n                  index = 0;\n\n                  while (index <= span) {\n                    // duplicate text (or not) to spanned columns\n                    // instead of setting duplicate span to empty string, use textExtraction to try to get a value\n                    // see http://stackoverflow.com/q/36449711/145346\n                    txt = c.duplicateSpan || index === 0 ? val : typeof c.textExtraction !== 'string' ? ts.getElementText(c, cell, cacheIndex + index) || '' : '';\n                    rowData.raw[cacheIndex + index] = txt;\n                    cols[cacheIndex + index] = txt;\n                    index++;\n                  }\n\n                  cacheIndex += span;\n                  max += span;\n                }\n              }\n\n              cacheIndex++;\n            } // ensure rowData is always in the same location (after the last column)\n\n\n            cols[c.columns] = rowData;\n            cache.normalized[cache.normalized.length] = cols;\n          }\n\n          cache.colMax = colMax; // total up rows, not including child rows\n\n          c.totalRows += cache.normalized.length;\n        }\n\n        if (c.showProcessing) {\n          ts.isProcessing(table); // remove processing icon\n        }\n\n        if (debug) {\n          len = Math.min(5, c.cache[0].normalized.length);\n          console[console.group ? 'group' : 'log']('Building cache for ' + c.totalRows + ' rows (showing ' + len + ' rows in log) and ' + c.columns + ' columns' + ts.benchmark(cacheTime));\n          val = {};\n\n          for (colIndex = 0; colIndex < c.columns; colIndex++) {\n            for (cacheIndex = 0; cacheIndex < len; cacheIndex++) {\n              if (!val['row: ' + cacheIndex]) {\n                val['row: ' + cacheIndex] = {};\n              }\n\n              val['row: ' + cacheIndex][c.$headerIndexed[colIndex].text()] = c.cache[0].normalized[cacheIndex][colIndex];\n            }\n          }\n\n          console[console.table ? 'table' : 'log'](val);\n\n          if (console.groupEnd) {\n            console.groupEnd();\n          }\n        }\n\n        if ($.isFunction(callback)) {\n          callback(table);\n        }\n      },\n      getColumnText: function (table, column, callback, rowFilter) {\n        table = $(table)[0];\n        var tbodyIndex,\n            rowIndex,\n            cache,\n            row,\n            tbodyLen,\n            rowLen,\n            raw,\n            parsed,\n            $cell,\n            result,\n            hasCallback = typeof callback === 'function',\n            allColumns = column === 'all',\n            data = {\n          raw: [],\n          parsed: [],\n          $cell: []\n        },\n            c = table.config;\n\n        if (ts.isEmptyObject(c)) {\n          if (ts.debug(c, 'core')) {\n            console.warn('No cache found - aborting getColumnText function!');\n          }\n        } else {\n          tbodyLen = c.$tbodies.length;\n\n          for (tbodyIndex = 0; tbodyIndex < tbodyLen; tbodyIndex++) {\n            cache = c.cache[tbodyIndex].normalized;\n            rowLen = cache.length;\n\n            for (rowIndex = 0; rowIndex < rowLen; rowIndex++) {\n              row = cache[rowIndex];\n\n              if (rowFilter && !row[c.columns].$row.is(rowFilter)) {\n                continue;\n              }\n\n              result = true;\n              parsed = allColumns ? row.slice(0, c.columns) : row[column];\n              row = row[c.columns];\n              raw = allColumns ? row.raw : row.raw[column];\n              $cell = allColumns ? row.$row.children() : row.$row.children().eq(column);\n\n              if (hasCallback) {\n                result = callback({\n                  tbodyIndex: tbodyIndex,\n                  rowIndex: rowIndex,\n                  parsed: parsed,\n                  raw: raw,\n                  $row: row.$row,\n                  $cell: $cell\n                });\n              }\n\n              if (result !== false) {\n                data.parsed[data.parsed.length] = parsed;\n                data.raw[data.raw.length] = raw;\n                data.$cell[data.$cell.length] = $cell;\n              }\n            }\n          } // return everything\n\n\n          return data;\n        }\n      },\n\n      /*\n      ██  ██ █████▄ █████▄ ▄████▄ ██████ ██████\n      ██  ██ ██▄▄██ ██  ██ ██▄▄██   ██   ██▄▄\n      ██  ██ ██▀▀▀  ██  ██ ██▀▀██   ██   ██▀▀\n      ▀████▀ ██     █████▀ ██  ██   ██   ██████\n      */\n      setHeadersCss: function (c) {\n        var indx,\n            column,\n            list = c.sortList,\n            len = list.length,\n            none = ts.css.sortNone + ' ' + c.cssNone,\n            css = [ts.css.sortAsc + ' ' + c.cssAsc, ts.css.sortDesc + ' ' + c.cssDesc],\n            cssIcon = [c.cssIconAsc, c.cssIconDesc, c.cssIconNone],\n            aria = ['ascending', 'descending'],\n            updateColumnSort = function ($el, index) {\n          $el.removeClass(none).addClass(css[index]).attr('aria-sort', aria[index]).find('.' + ts.css.icon).removeClass(cssIcon[2]).addClass(cssIcon[index]);\n        },\n            // find the footer\n        $extras = c.$table.find('tfoot tr').children('td, th').add($(c.namespace + '_extra_headers')).removeClass(css.join(' ')),\n            // remove all header information\n        $sorted = c.$headers.add($('thead ' + c.namespace + '_extra_headers')).removeClass(css.join(' ')).addClass(none).attr('aria-sort', 'none').find('.' + ts.css.icon).removeClass(cssIcon.join(' ')).end(); // add css none to all sortable headers\n\n\n        $sorted.not('.sorter-false').find('.' + ts.css.icon).addClass(cssIcon[2]); // add disabled css icon class\n\n        if (c.cssIconDisabled) {\n          $sorted.filter('.sorter-false').find('.' + ts.css.icon).addClass(c.cssIconDisabled);\n        }\n\n        for (indx = 0; indx < len; indx++) {\n          // direction = 2 means reset!\n          if (list[indx][1] !== 2) {\n            // multicolumn sorting updating - see #1005\n            // .not(function() {}) needs jQuery 1.4\n            // filter(function(i, el) {}) <- el is undefined in jQuery v1.2.6\n            $sorted = c.$headers.filter(function (i) {\n              // only include headers that are in the sortList (this includes colspans)\n              var include = true,\n                  $el = c.$headers.eq(i),\n                  col = parseInt($el.attr('data-column'), 10),\n                  end = col + ts.getClosest($el, 'th, td')[0].colSpan;\n\n              for (; col < end; col++) {\n                include = include ? include || ts.isValueInArray(col, c.sortList) > -1 : false;\n              }\n\n              return include;\n            }); // choose the :last in case there are nested columns\n\n            $sorted = $sorted.not('.sorter-false').filter('[data-column=\"' + list[indx][0] + '\"]' + (len === 1 ? ':last' : ''));\n\n            if ($sorted.length) {\n              for (column = 0; column < $sorted.length; column++) {\n                if (!$sorted[column].sortDisabled) {\n                  updateColumnSort($sorted.eq(column), list[indx][1]);\n                }\n              }\n            } // add sorted class to footer & extra headers, if they exist\n\n\n            if ($extras.length) {\n              updateColumnSort($extras.filter('[data-column=\"' + list[indx][0] + '\"]'), list[indx][1]);\n            }\n          }\n        } // add verbose aria labels\n\n\n        len = c.$headers.length;\n\n        for (indx = 0; indx < len; indx++) {\n          ts.setColumnAriaLabel(c, c.$headers.eq(indx));\n        }\n      },\n      getClosest: function ($el, selector) {\n        // jQuery v1.2.6 doesn't have closest()\n        if ($.fn.closest) {\n          return $el.closest(selector);\n        }\n\n        return $el.is(selector) ? $el : $el.parents(selector).filter(':first');\n      },\n      // nextSort (optional), lets you disable next sort text\n      setColumnAriaLabel: function (c, $header, nextSort) {\n        if ($header.length) {\n          var column = parseInt($header.attr('data-column'), 10),\n              vars = c.sortVars[column],\n              tmp = $header.hasClass(ts.css.sortAsc) ? 'sortAsc' : $header.hasClass(ts.css.sortDesc) ? 'sortDesc' : 'sortNone',\n              txt = $.trim($header.text()) + ': ' + ts.language[tmp];\n\n          if ($header.hasClass('sorter-false') || nextSort === false) {\n            txt += ts.language.sortDisabled;\n          } else {\n            tmp = (vars.count + 1) % vars.order.length;\n            nextSort = vars.order[tmp]; // if nextSort\n\n            txt += ts.language[nextSort === 0 ? 'nextAsc' : nextSort === 1 ? 'nextDesc' : 'nextNone'];\n          }\n\n          $header.attr('aria-label', txt);\n\n          if (vars.sortedBy) {\n            $header.attr('data-sortedBy', vars.sortedBy);\n          } else {\n            $header.removeAttr('data-sortedBy');\n          }\n        }\n      },\n      updateHeader: function (c) {\n        var index,\n            isDisabled,\n            $header,\n            col,\n            table = c.table,\n            len = c.$headers.length;\n\n        for (index = 0; index < len; index++) {\n          $header = c.$headers.eq(index);\n          col = ts.getColumnData(table, c.headers, index, true); // add 'sorter-false' class if 'parser-false' is set\n\n          isDisabled = ts.getData($header, col, 'sorter') === 'false' || ts.getData($header, col, 'parser') === 'false';\n          ts.setColumnSort(c, $header, isDisabled);\n        }\n      },\n      setColumnSort: function (c, $header, isDisabled) {\n        var id = c.table.id;\n        $header[0].sortDisabled = isDisabled;\n        $header[isDisabled ? 'addClass' : 'removeClass']('sorter-false').attr('aria-disabled', '' + isDisabled); // disable tab index on disabled cells\n\n        if (c.tabIndex) {\n          if (isDisabled) {\n            $header.removeAttr('tabindex');\n          } else {\n            $header.attr('tabindex', '0');\n          }\n        } // aria-controls - requires table ID\n\n\n        if (id) {\n          if (isDisabled) {\n            $header.removeAttr('aria-controls');\n          } else {\n            $header.attr('aria-controls', id);\n          }\n        }\n      },\n      updateHeaderSortCount: function (c, list) {\n        var col,\n            dir,\n            group,\n            indx,\n            primary,\n            temp,\n            val,\n            order,\n            sortList = list || c.sortList,\n            len = sortList.length;\n        c.sortList = [];\n\n        for (indx = 0; indx < len; indx++) {\n          val = sortList[indx]; // ensure all sortList values are numeric - fixes #127\n\n          col = parseInt(val[0], 10); // prevents error if sorton array is wrong\n\n          if (col < c.columns) {\n            // set order if not already defined - due to colspan header without associated header cell\n            // adding this check prevents a javascript error\n            if (!c.sortVars[col].order) {\n              if (ts.getOrder(c.sortInitialOrder)) {\n                order = c.sortReset ? [1, 0, 2] : [1, 0];\n              } else {\n                order = c.sortReset ? [0, 1, 2] : [0, 1];\n              }\n\n              c.sortVars[col].order = order;\n              c.sortVars[col].count = 0;\n            }\n\n            order = c.sortVars[col].order;\n            dir = ('' + val[1]).match(/^(1|d|s|o|n)/);\n            dir = dir ? dir[0] : ''; // 0/(a)sc (default), 1/(d)esc, (s)ame, (o)pposite, (n)ext\n\n            switch (dir) {\n              case '1':\n              case 'd':\n                // descending\n                dir = 1;\n                break;\n\n              case 's':\n                // same direction (as primary column)\n                // if primary sort is set to 's', make it ascending\n                dir = primary || 0;\n                break;\n\n              case 'o':\n                temp = order[(primary || 0) % order.length]; // opposite of primary column; but resets if primary resets\n\n                dir = temp === 0 ? 1 : temp === 1 ? 0 : 2;\n                break;\n\n              case 'n':\n                dir = order[++c.sortVars[col].count % order.length];\n                break;\n\n              default:\n                // ascending\n                dir = 0;\n                break;\n            }\n\n            primary = indx === 0 ? dir : primary;\n            group = [col, parseInt(dir, 10) || 0];\n            c.sortList[c.sortList.length] = group;\n            dir = $.inArray(group[1], order); // fixes issue #167\n\n            c.sortVars[col].count = dir >= 0 ? dir : group[1] % order.length;\n          }\n        }\n      },\n      updateAll: function (c, resort, callback) {\n        var table = c.table;\n        table.isUpdating = true;\n        ts.refreshWidgets(table, true, true);\n        ts.buildHeaders(c);\n        ts.bindEvents(table, c.$headers, true);\n        ts.bindMethods(c);\n        ts.commonUpdate(c, resort, callback);\n      },\n      update: function (c, resort, callback) {\n        var table = c.table;\n        table.isUpdating = true; // update sorting (if enabled/disabled)\n\n        ts.updateHeader(c);\n        ts.commonUpdate(c, resort, callback);\n      },\n      // simple header update - see #989\n      updateHeaders: function (c, callback) {\n        c.table.isUpdating = true;\n        ts.buildHeaders(c);\n        ts.bindEvents(c.table, c.$headers, true);\n        ts.resortComplete(c, callback);\n      },\n      updateCell: function (c, cell, resort, callback) {\n        // updateCell for child rows is a mess - we'll ignore them for now\n        // eventually I'll break out the \"update\" row cache code to make everything consistent\n        if ($(cell).closest('tr').hasClass(c.cssChildRow)) {\n          console.warn('Tablesorter Warning! \"updateCell\" for child row content has been disabled, use \"update\" instead');\n          return;\n        }\n\n        if (ts.isEmptyObject(c.cache)) {\n          // empty table, do an update instead - fixes #1099\n          ts.updateHeader(c);\n          ts.commonUpdate(c, resort, callback);\n          return;\n        }\n\n        c.table.isUpdating = true;\n        c.$table.find(c.selectorRemove).remove(); // get position from the dom\n\n        var tmp,\n            indx,\n            row,\n            icell,\n            cache,\n            len,\n            $tbodies = c.$tbodies,\n            $cell = $(cell),\n            // update cache - format: function( s, table, cell, cellIndex )\n        // no closest in jQuery v1.2.6\n        tbodyIndex = $tbodies.index(ts.getClosest($cell, 'tbody')),\n            tbcache = c.cache[tbodyIndex],\n            $row = ts.getClosest($cell, 'tr');\n        cell = $cell[0]; // in case cell is a jQuery object\n        // tbody may not exist if update is initialized while tbody is removed for processing\n\n        if ($tbodies.length && tbodyIndex >= 0) {\n          row = $tbodies.eq(tbodyIndex).find('tr').not('.' + c.cssChildRow).index($row);\n          cache = tbcache.normalized[row];\n          len = $row[0].cells.length;\n\n          if (len !== c.columns) {\n            // colspan in here somewhere!\n            icell = 0;\n            tmp = false;\n\n            for (indx = 0; indx < len; indx++) {\n              if (!tmp && $row[0].cells[indx] !== cell) {\n                icell += $row[0].cells[indx].colSpan;\n              } else {\n                tmp = true;\n              }\n            }\n          } else {\n            icell = $cell.index();\n          }\n\n          tmp = ts.getElementText(c, cell, icell); // raw\n\n          cache[c.columns].raw[icell] = tmp;\n          tmp = ts.getParsedText(c, cell, icell, tmp);\n          cache[icell] = tmp; // parsed\n\n          if ((c.parsers[icell].type || '').toLowerCase() === 'numeric') {\n            // update column max value (ignore sign)\n            tbcache.colMax[icell] = Math.max(Math.abs(tmp) || 0, tbcache.colMax[icell] || 0);\n          }\n\n          tmp = resort !== 'undefined' ? resort : c.resort;\n\n          if (tmp !== false) {\n            // widgets will be reapplied\n            ts.checkResort(c, tmp, callback);\n          } else {\n            // don't reapply widgets is resort is false, just in case it causes\n            // problems with element focus\n            ts.resortComplete(c, callback);\n          }\n        } else {\n          if (ts.debug(c, 'core')) {\n            console.error('updateCell aborted, tbody missing or not within the indicated table');\n          }\n\n          c.table.isUpdating = false;\n        }\n      },\n      addRows: function (c, $row, resort, callback) {\n        var txt,\n            val,\n            tbodyIndex,\n            rowIndex,\n            rows,\n            cellIndex,\n            len,\n            order,\n            cacheIndex,\n            rowData,\n            cells,\n            cell,\n            span,\n            // allow passing a row string if only one non-info tbody exists in the table\n        valid = typeof $row === 'string' && c.$tbodies.length === 1 && /<tr/.test($row || ''),\n            table = c.table;\n\n        if (valid) {\n          $row = $($row);\n          c.$tbodies.append($row);\n        } else if (!$row || // row is a jQuery object?\n        !($row instanceof $) || // row contained in the table?\n        ts.getClosest($row, 'table')[0] !== c.table) {\n          if (ts.debug(c, 'core')) {\n            console.error('addRows method requires (1) a jQuery selector reference to rows that have already ' + 'been added to the table, or (2) row HTML string to be added to a table with only one tbody');\n          }\n\n          return false;\n        }\n\n        table.isUpdating = true;\n\n        if (ts.isEmptyObject(c.cache)) {\n          // empty table, do an update instead - fixes #450\n          ts.updateHeader(c);\n          ts.commonUpdate(c, resort, callback);\n        } else {\n          rows = $row.filter('tr').attr('role', 'row').length;\n          tbodyIndex = c.$tbodies.index($row.parents('tbody').filter(':first')); // fixes adding rows to an empty table - see issue #179\n\n          if (!(c.parsers && c.parsers.length)) {\n            ts.setupParsers(c);\n          } // add each row\n\n\n          for (rowIndex = 0; rowIndex < rows; rowIndex++) {\n            cacheIndex = 0;\n            len = $row[rowIndex].cells.length;\n            order = c.cache[tbodyIndex].normalized.length;\n            cells = [];\n            rowData = {\n              child: [],\n              raw: [],\n              $row: $row.eq(rowIndex),\n              order: order\n            }; // add each cell\n\n            for (cellIndex = 0; cellIndex < len; cellIndex++) {\n              cell = $row[rowIndex].cells[cellIndex];\n              txt = ts.getElementText(c, cell, cacheIndex);\n              rowData.raw[cacheIndex] = txt;\n              val = ts.getParsedText(c, cell, cacheIndex, txt);\n              cells[cacheIndex] = val;\n\n              if ((c.parsers[cacheIndex].type || '').toLowerCase() === 'numeric') {\n                // update column max value (ignore sign)\n                c.cache[tbodyIndex].colMax[cacheIndex] = Math.max(Math.abs(val) || 0, c.cache[tbodyIndex].colMax[cacheIndex] || 0);\n              }\n\n              span = cell.colSpan - 1;\n\n              if (span > 0) {\n                cacheIndex += span;\n              }\n\n              cacheIndex++;\n            } // add the row data to the end\n\n\n            cells[c.columns] = rowData; // update cache\n\n            c.cache[tbodyIndex].normalized[order] = cells;\n          } // resort using current settings\n\n\n          ts.checkResort(c, resort, callback);\n        }\n      },\n      updateCache: function (c, callback, $tbodies) {\n        // rebuild parsers\n        if (!(c.parsers && c.parsers.length)) {\n          ts.setupParsers(c, $tbodies);\n        } // rebuild the cache map\n\n\n        ts.buildCache(c, callback, $tbodies);\n      },\n      // init flag (true) used by pager plugin to prevent widget application\n      // renamed from appendToTable\n      appendCache: function (c, init) {\n        var parsed,\n            totalRows,\n            $tbody,\n            $curTbody,\n            rowIndex,\n            tbodyIndex,\n            appendTime,\n            table = c.table,\n            $tbodies = c.$tbodies,\n            rows = [],\n            cache = c.cache; // empty table - fixes #206/#346\n\n        if (ts.isEmptyObject(cache)) {\n          // run pager appender in case the table was just emptied\n          return c.appender ? c.appender(table, rows) : table.isUpdating ? c.$table.triggerHandler('updateComplete', table) : ''; // Fixes #532\n        }\n\n        if (ts.debug(c, 'core')) {\n          appendTime = new Date();\n        }\n\n        for (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++) {\n          $tbody = $tbodies.eq(tbodyIndex);\n\n          if ($tbody.length) {\n            // detach tbody for manipulation\n            $curTbody = ts.processTbody(table, $tbody, true);\n            parsed = cache[tbodyIndex].normalized;\n            totalRows = parsed.length;\n\n            for (rowIndex = 0; rowIndex < totalRows; rowIndex++) {\n              rows[rows.length] = parsed[rowIndex][c.columns].$row; // removeRows used by the pager plugin; don't render if using ajax - fixes #411\n\n              if (!c.appender || c.pager && !c.pager.removeRows && !c.pager.ajax) {\n                $curTbody.append(parsed[rowIndex][c.columns].$row);\n              }\n            } // restore tbody\n\n\n            ts.processTbody(table, $curTbody, false);\n          }\n        }\n\n        if (c.appender) {\n          c.appender(table, rows);\n        }\n\n        if (ts.debug(c, 'core')) {\n          console.log('Rebuilt table' + ts.benchmark(appendTime));\n        } // apply table widgets; but not before ajax completes\n\n\n        if (!init && !c.appender) {\n          ts.applyWidget(table);\n        }\n\n        if (table.isUpdating) {\n          c.$table.triggerHandler('updateComplete', table);\n        }\n      },\n      commonUpdate: function (c, resort, callback) {\n        // remove rows/elements before update\n        c.$table.find(c.selectorRemove).remove(); // rebuild parsers\n\n        ts.setupParsers(c); // rebuild the cache map\n\n        ts.buildCache(c);\n        ts.checkResort(c, resort, callback);\n      },\n\n      /*\n      ▄█████ ▄████▄ █████▄ ██████ ██ █████▄ ▄████▄\n      ▀█▄    ██  ██ ██▄▄██   ██   ██ ██  ██ ██ ▄▄▄\n         ▀█▄ ██  ██ ██▀██    ██   ██ ██  ██ ██ ▀██\n      █████▀ ▀████▀ ██  ██   ██   ██ ██  ██ ▀████▀\n      */\n      initSort: function (c, cell, event) {\n        if (c.table.isUpdating) {\n          // let any updates complete before initializing a sort\n          return setTimeout(function () {\n            ts.initSort(c, cell, event);\n          }, 50);\n        }\n\n        var arry,\n            indx,\n            headerIndx,\n            dir,\n            temp,\n            tmp,\n            $header,\n            notMultiSort = !event[c.sortMultiSortKey],\n            table = c.table,\n            len = c.$headers.length,\n            th = ts.getClosest($(cell), 'th, td'),\n            col = parseInt(th.attr('data-column'), 10),\n            sortedBy = event.type === 'mouseup' ? 'user' : event.type,\n            order = c.sortVars[col].order;\n        th = th[0]; // Only call sortStart if sorting is enabled\n\n        c.$table.triggerHandler('sortStart', table); // get current column sort order\n\n        tmp = (c.sortVars[col].count + 1) % order.length;\n        c.sortVars[col].count = event[c.sortResetKey] ? 2 : tmp; // reset all sorts on non-current column - issue #30\n\n        if (c.sortRestart) {\n          for (headerIndx = 0; headerIndx < len; headerIndx++) {\n            $header = c.$headers.eq(headerIndx);\n            tmp = parseInt($header.attr('data-column'), 10); // only reset counts on columns that weren't just clicked on and if not included in a multisort\n\n            if (col !== tmp && (notMultiSort || $header.hasClass(ts.css.sortNone))) {\n              c.sortVars[tmp].count = -1;\n            }\n          }\n        } // user only wants to sort on one column\n\n\n        if (notMultiSort) {\n          $.each(c.sortVars, function (i) {\n            c.sortVars[i].sortedBy = '';\n          }); // flush the sort list\n\n          c.sortList = [];\n          c.last.sortList = [];\n\n          if (c.sortForce !== null) {\n            arry = c.sortForce;\n\n            for (indx = 0; indx < arry.length; indx++) {\n              if (arry[indx][0] !== col) {\n                c.sortList[c.sortList.length] = arry[indx];\n                c.sortVars[arry[indx][0]].sortedBy = 'sortForce';\n              }\n            }\n          } // add column to sort list\n\n\n          dir = order[c.sortVars[col].count];\n\n          if (dir < 2) {\n            c.sortList[c.sortList.length] = [col, dir];\n            c.sortVars[col].sortedBy = sortedBy; // add other columns if header spans across multiple\n\n            if (th.colSpan > 1) {\n              for (indx = 1; indx < th.colSpan; indx++) {\n                c.sortList[c.sortList.length] = [col + indx, dir]; // update count on columns in colSpan\n\n                c.sortVars[col + indx].count = $.inArray(dir, order);\n                c.sortVars[col + indx].sortedBy = sortedBy;\n              }\n            }\n          } // multi column sorting\n\n        } else {\n          // get rid of the sortAppend before adding more - fixes issue #115 & #523\n          c.sortList = $.extend([], c.last.sortList); // the user has clicked on an already sorted column\n\n          if (ts.isValueInArray(col, c.sortList) >= 0) {\n            // reverse the sorting direction\n            c.sortVars[col].sortedBy = sortedBy;\n\n            for (indx = 0; indx < c.sortList.length; indx++) {\n              tmp = c.sortList[indx];\n\n              if (tmp[0] === col) {\n                // order.count seems to be incorrect when compared to cell.count\n                tmp[1] = order[c.sortVars[col].count];\n\n                if (tmp[1] === 2) {\n                  c.sortList.splice(indx, 1);\n                  c.sortVars[col].count = -1;\n                }\n              }\n            }\n          } else {\n            // add column to sort list array\n            dir = order[c.sortVars[col].count];\n            c.sortVars[col].sortedBy = sortedBy;\n\n            if (dir < 2) {\n              c.sortList[c.sortList.length] = [col, dir]; // add other columns if header spans across multiple\n\n              if (th.colSpan > 1) {\n                for (indx = 1; indx < th.colSpan; indx++) {\n                  c.sortList[c.sortList.length] = [col + indx, dir]; // update count on columns in colSpan\n\n                  c.sortVars[col + indx].count = $.inArray(dir, order);\n                  c.sortVars[col + indx].sortedBy = sortedBy;\n                }\n              }\n            }\n          }\n        } // save sort before applying sortAppend\n\n\n        c.last.sortList = $.extend([], c.sortList);\n\n        if (c.sortList.length && c.sortAppend) {\n          arry = $.isArray(c.sortAppend) ? c.sortAppend : c.sortAppend[c.sortList[0][0]];\n\n          if (!ts.isEmptyObject(arry)) {\n            for (indx = 0; indx < arry.length; indx++) {\n              if (arry[indx][0] !== col && ts.isValueInArray(arry[indx][0], c.sortList) < 0) {\n                dir = arry[indx][1];\n                temp = ('' + dir).match(/^(a|d|s|o|n)/);\n\n                if (temp) {\n                  tmp = c.sortList[0][1];\n\n                  switch (temp[0]) {\n                    case 'd':\n                      dir = 1;\n                      break;\n\n                    case 's':\n                      dir = tmp;\n                      break;\n\n                    case 'o':\n                      dir = tmp === 0 ? 1 : 0;\n                      break;\n\n                    case 'n':\n                      dir = (tmp + 1) % order.length;\n                      break;\n\n                    default:\n                      dir = 0;\n                      break;\n                  }\n                }\n\n                c.sortList[c.sortList.length] = [arry[indx][0], dir];\n                c.sortVars[arry[indx][0]].sortedBy = 'sortAppend';\n              }\n            }\n          }\n        } // sortBegin event triggered immediately before the sort\n\n\n        c.$table.triggerHandler('sortBegin', table); // setTimeout needed so the processing icon shows up\n\n        setTimeout(function () {\n          // set css for headers\n          ts.setHeadersCss(c);\n          ts.multisort(c);\n          ts.appendCache(c);\n          c.$table.triggerHandler('sortBeforeEnd', table);\n          c.$table.triggerHandler('sortEnd', table);\n        }, 1);\n      },\n      // sort multiple columns\n      multisort: function (c) {\n        /*jshint loopfunc:true */\n        var tbodyIndex,\n            sortTime,\n            colMax,\n            rows,\n            tmp,\n            table = c.table,\n            sorter = [],\n            dir = 0,\n            textSorter = c.textSorter || '',\n            sortList = c.sortList,\n            sortLen = sortList.length,\n            len = c.$tbodies.length;\n\n        if (c.serverSideSorting || ts.isEmptyObject(c.cache)) {\n          // empty table - fixes #206/#346\n          return;\n        }\n\n        if (ts.debug(c, 'core')) {\n          sortTime = new Date();\n        } // cache textSorter to optimize speed\n\n\n        if (typeof textSorter === 'object') {\n          colMax = c.columns;\n\n          while (colMax--) {\n            tmp = ts.getColumnData(table, textSorter, colMax);\n\n            if (typeof tmp === 'function') {\n              sorter[colMax] = tmp;\n            }\n          }\n        }\n\n        for (tbodyIndex = 0; tbodyIndex < len; tbodyIndex++) {\n          colMax = c.cache[tbodyIndex].colMax;\n          rows = c.cache[tbodyIndex].normalized;\n          rows.sort(function (a, b) {\n            var sortIndex, num, col, order, sort, x, y; // rows is undefined here in IE, so don't use it!\n\n            for (sortIndex = 0; sortIndex < sortLen; sortIndex++) {\n              col = sortList[sortIndex][0];\n              order = sortList[sortIndex][1]; // sort direction, true = asc, false = desc\n\n              dir = order === 0;\n\n              if (c.sortStable && a[col] === b[col] && sortLen === 1) {\n                return a[c.columns].order - b[c.columns].order;\n              } // fallback to natural sort since it is more robust\n\n\n              num = /n/i.test(ts.getSortType(c.parsers, col));\n\n              if (num && c.strings[col]) {\n                // sort strings in numerical columns\n                if (typeof ts.string[c.strings[col]] === 'boolean') {\n                  num = (dir ? 1 : -1) * (ts.string[c.strings[col]] ? -1 : 1);\n                } else {\n                  num = c.strings[col] ? ts.string[c.strings[col]] || 0 : 0;\n                } // fall back to built-in numeric sort\n                // var sort = $.tablesorter['sort' + s]( a[col], b[col], dir, colMax[col], table );\n\n\n                sort = c.numberSorter ? c.numberSorter(a[col], b[col], dir, colMax[col], table) : ts['sortNumeric' + (dir ? 'Asc' : 'Desc')](a[col], b[col], num, colMax[col], col, c);\n              } else {\n                // set a & b depending on sort direction\n                x = dir ? a : b;\n                y = dir ? b : a; // text sort function\n\n                if (typeof textSorter === 'function') {\n                  // custom OVERALL text sorter\n                  sort = textSorter(x[col], y[col], dir, col, table);\n                } else if (typeof sorter[col] === 'function') {\n                  // custom text sorter for a SPECIFIC COLUMN\n                  sort = sorter[col](x[col], y[col], dir, col, table);\n                } else {\n                  // fall back to natural sort\n                  sort = ts['sortNatural' + (dir ? 'Asc' : 'Desc')](a[col] || '', b[col] || '', col, c);\n                }\n              }\n\n              if (sort) {\n                return sort;\n              }\n            }\n\n            return a[c.columns].order - b[c.columns].order;\n          });\n        }\n\n        if (ts.debug(c, 'core')) {\n          console.log('Applying sort ' + sortList.toString() + ts.benchmark(sortTime));\n        }\n      },\n      resortComplete: function (c, callback) {\n        if (c.table.isUpdating) {\n          c.$table.triggerHandler('updateComplete', c.table);\n        }\n\n        if ($.isFunction(callback)) {\n          callback(c.table);\n        }\n      },\n      checkResort: function (c, resort, callback) {\n        var sortList = $.isArray(resort) ? resort : c.sortList,\n            // if no resort parameter is passed, fallback to config.resort (true by default)\n        resrt = typeof resort === 'undefined' ? c.resort : resort; // don't try to resort if the table is still processing\n        // this will catch spamming of the updateCell method\n\n        if (resrt !== false && !c.serverSideSorting && !c.table.isProcessing) {\n          if (sortList.length) {\n            ts.sortOn(c, sortList, function () {\n              ts.resortComplete(c, callback);\n            }, true);\n          } else {\n            ts.sortReset(c, function () {\n              ts.resortComplete(c, callback);\n              ts.applyWidget(c.table, false);\n            });\n          }\n        } else {\n          ts.resortComplete(c, callback);\n          ts.applyWidget(c.table, false);\n        }\n      },\n      sortOn: function (c, list, callback, init) {\n        var indx,\n            table = c.table;\n        c.$table.triggerHandler('sortStart', table);\n\n        for (indx = 0; indx < c.columns; indx++) {\n          c.sortVars[indx].sortedBy = ts.isValueInArray(indx, list) > -1 ? 'sorton' : '';\n        } // update header count index\n\n\n        ts.updateHeaderSortCount(c, list); // set css for headers\n\n        ts.setHeadersCss(c); // fixes #346\n\n        if (c.delayInit && ts.isEmptyObject(c.cache)) {\n          ts.buildCache(c);\n        }\n\n        c.$table.triggerHandler('sortBegin', table); // sort the table and append it to the dom\n\n        ts.multisort(c);\n        ts.appendCache(c, init);\n        c.$table.triggerHandler('sortBeforeEnd', table);\n        c.$table.triggerHandler('sortEnd', table);\n        ts.applyWidget(table);\n\n        if ($.isFunction(callback)) {\n          callback(table);\n        }\n      },\n      sortReset: function (c, callback) {\n        c.sortList = [];\n        var indx;\n\n        for (indx = 0; indx < c.columns; indx++) {\n          c.sortVars[indx].count = -1;\n          c.sortVars[indx].sortedBy = '';\n        }\n\n        ts.setHeadersCss(c);\n        ts.multisort(c);\n        ts.appendCache(c);\n\n        if ($.isFunction(callback)) {\n          callback(c.table);\n        }\n      },\n      getSortType: function (parsers, column) {\n        return parsers && parsers[column] ? parsers[column].type || '' : '';\n      },\n      getOrder: function (val) {\n        // look for 'd' in 'desc' order; return true\n        return /^d/i.test(val) || val === 1;\n      },\n      // Natural sort - https://github.com/overset/javascript-natural-sort (date sorting removed)\n      sortNatural: function (a, b) {\n        if (a === b) {\n          return 0;\n        }\n\n        a = (a || '').toString();\n        b = (b || '').toString();\n        var aNum,\n            bNum,\n            aFloat,\n            bFloat,\n            indx,\n            max,\n            regex = ts.regex; // first try and sort Hex codes\n\n        if (regex.hex.test(b)) {\n          aNum = parseInt(a.match(regex.hex), 16);\n          bNum = parseInt(b.match(regex.hex), 16);\n\n          if (aNum < bNum) {\n            return -1;\n          }\n\n          if (aNum > bNum) {\n            return 1;\n          }\n        } // chunk/tokenize\n\n\n        aNum = a.replace(regex.chunk, '\\\\0$1\\\\0').replace(regex.chunks, '').split('\\\\0');\n        bNum = b.replace(regex.chunk, '\\\\0$1\\\\0').replace(regex.chunks, '').split('\\\\0');\n        max = Math.max(aNum.length, bNum.length); // natural sorting through split numeric strings and default strings\n\n        for (indx = 0; indx < max; indx++) {\n          // find floats not starting with '0', string or 0 if not defined\n          aFloat = isNaN(aNum[indx]) ? aNum[indx] || 0 : parseFloat(aNum[indx]) || 0;\n          bFloat = isNaN(bNum[indx]) ? bNum[indx] || 0 : parseFloat(bNum[indx]) || 0; // handle numeric vs string comparison - number < string - (Kyle Adams)\n\n          if (isNaN(aFloat) !== isNaN(bFloat)) {\n            return isNaN(aFloat) ? 1 : -1;\n          } // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'\n\n\n          if (typeof aFloat !== typeof bFloat) {\n            aFloat += '';\n            bFloat += '';\n          }\n\n          if (aFloat < bFloat) {\n            return -1;\n          }\n\n          if (aFloat > bFloat) {\n            return 1;\n          }\n        }\n\n        return 0;\n      },\n      sortNaturalAsc: function (a, b, col, c) {\n        if (a === b) {\n          return 0;\n        }\n\n        var empty = ts.string[c.empties[col] || c.emptyTo];\n\n        if (a === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? -1 : 1 : -empty || -1;\n        }\n\n        if (b === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? 1 : -1 : empty || 1;\n        }\n\n        return ts.sortNatural(a, b);\n      },\n      sortNaturalDesc: function (a, b, col, c) {\n        if (a === b) {\n          return 0;\n        }\n\n        var empty = ts.string[c.empties[col] || c.emptyTo];\n\n        if (a === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? -1 : 1 : empty || 1;\n        }\n\n        if (b === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? 1 : -1 : -empty || -1;\n        }\n\n        return ts.sortNatural(b, a);\n      },\n      // basic alphabetical sort\n      sortText: function (a, b) {\n        return a > b ? 1 : a < b ? -1 : 0;\n      },\n      // return text string value by adding up ascii value\n      // so the text is somewhat sorted when using a digital sort\n      // this is NOT an alphanumeric sort\n      getTextValue: function (val, num, max) {\n        if (max) {\n          // make sure the text value is greater than the max numerical value (max)\n          var indx,\n              len = val ? val.length : 0,\n              n = max + num;\n\n          for (indx = 0; indx < len; indx++) {\n            n += val.charCodeAt(indx);\n          }\n\n          return num * n;\n        }\n\n        return 0;\n      },\n      sortNumericAsc: function (a, b, num, max, col, c) {\n        if (a === b) {\n          return 0;\n        }\n\n        var empty = ts.string[c.empties[col] || c.emptyTo];\n\n        if (a === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? -1 : 1 : -empty || -1;\n        }\n\n        if (b === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? 1 : -1 : empty || 1;\n        }\n\n        if (isNaN(a)) {\n          a = ts.getTextValue(a, num, max);\n        }\n\n        if (isNaN(b)) {\n          b = ts.getTextValue(b, num, max);\n        }\n\n        return a - b;\n      },\n      sortNumericDesc: function (a, b, num, max, col, c) {\n        if (a === b) {\n          return 0;\n        }\n\n        var empty = ts.string[c.empties[col] || c.emptyTo];\n\n        if (a === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? -1 : 1 : empty || 1;\n        }\n\n        if (b === '' && empty !== 0) {\n          return typeof empty === 'boolean' ? empty ? 1 : -1 : -empty || -1;\n        }\n\n        if (isNaN(a)) {\n          a = ts.getTextValue(a, num, max);\n        }\n\n        if (isNaN(b)) {\n          b = ts.getTextValue(b, num, max);\n        }\n\n        return b - a;\n      },\n      sortNumeric: function (a, b) {\n        return a - b;\n      },\n\n      /*\n      ██ ██ ██ ██ █████▄ ▄████▄ ██████ ██████ ▄█████\n      ██ ██ ██ ██ ██  ██ ██ ▄▄▄ ██▄▄     ██   ▀█▄\n      ██ ██ ██ ██ ██  ██ ██ ▀██ ██▀▀     ██      ▀█▄\n      ███████▀ ██ █████▀ ▀████▀ ██████   ██   █████▀\n      */\n      addWidget: function (widget) {\n        if (widget.id && !ts.isEmptyObject(ts.getWidgetById(widget.id))) {\n          console.warn('\"' + widget.id + '\" widget was loaded more than once!');\n        }\n\n        ts.widgets[ts.widgets.length] = widget;\n      },\n      hasWidget: function ($table, name) {\n        $table = $($table);\n        return $table.length && $table[0].config && $table[0].config.widgetInit[name] || false;\n      },\n      getWidgetById: function (name) {\n        var indx,\n            widget,\n            len = ts.widgets.length;\n\n        for (indx = 0; indx < len; indx++) {\n          widget = ts.widgets[indx];\n\n          if (widget && widget.id && widget.id.toLowerCase() === name.toLowerCase()) {\n            return widget;\n          }\n        }\n      },\n      applyWidgetOptions: function (table) {\n        var indx,\n            widget,\n            wo,\n            c = table.config,\n            len = c.widgets.length;\n\n        if (len) {\n          for (indx = 0; indx < len; indx++) {\n            widget = ts.getWidgetById(c.widgets[indx]);\n\n            if (widget && widget.options) {\n              wo = $.extend(true, {}, widget.options);\n              c.widgetOptions = $.extend(true, wo, c.widgetOptions); // add widgetOptions to defaults for option validator\n\n              $.extend(true, ts.defaults.widgetOptions, widget.options);\n            }\n          }\n        }\n      },\n      addWidgetFromClass: function (table) {\n        var len,\n            indx,\n            c = table.config,\n            // look for widgets to apply from table class\n        // don't match from 'ui-widget-content'; use \\S instead of \\w to include widgets\n        // with dashes in the name, e.g. \"widget-test-2\" extracts out \"test-2\"\n        regex = '^' + c.widgetClass.replace(ts.regex.templateName, '(\\\\S+)+') + '$',\n            widgetClass = new RegExp(regex, 'g'),\n            // split up table class (widget id's can include dashes) - stop using match\n        // otherwise only one widget gets extracted, see #1109\n        widgets = (table.className || '').split(ts.regex.spaces);\n\n        if (widgets.length) {\n          len = widgets.length;\n\n          for (indx = 0; indx < len; indx++) {\n            if (widgets[indx].match(widgetClass)) {\n              c.widgets[c.widgets.length] = widgets[indx].replace(widgetClass, '$1');\n            }\n          }\n        }\n      },\n      applyWidgetId: function (table, id, init) {\n        table = $(table)[0];\n        var applied,\n            time,\n            name,\n            c = table.config,\n            wo = c.widgetOptions,\n            debug = ts.debug(c, 'core'),\n            widget = ts.getWidgetById(id);\n\n        if (widget) {\n          name = widget.id;\n          applied = false; // add widget name to option list so it gets reapplied after sorting, filtering, etc\n\n          if ($.inArray(name, c.widgets) < 0) {\n            c.widgets[c.widgets.length] = name;\n          }\n\n          if (debug) {\n            time = new Date();\n          }\n\n          if (init || !c.widgetInit[name]) {\n            // set init flag first to prevent calling init more than once (e.g. pager)\n            c.widgetInit[name] = true;\n\n            if (table.hasInitialized) {\n              // don't reapply widget options on tablesorter init\n              ts.applyWidgetOptions(table);\n            }\n\n            if (typeof widget.init === 'function') {\n              applied = true;\n\n              if (debug) {\n                console[console.group ? 'group' : 'log']('Initializing ' + name + ' widget');\n              }\n\n              widget.init(table, widget, c, wo);\n            }\n          }\n\n          if (!init && typeof widget.format === 'function') {\n            applied = true;\n\n            if (debug) {\n              console[console.group ? 'group' : 'log']('Updating ' + name + ' widget');\n            }\n\n            widget.format(table, c, wo, false);\n          }\n\n          if (debug) {\n            if (applied) {\n              console.log('Completed ' + (init ? 'initializing ' : 'applying ') + name + ' widget' + ts.benchmark(time));\n\n              if (console.groupEnd) {\n                console.groupEnd();\n              }\n            }\n          }\n        }\n      },\n      applyWidget: function (table, init, callback) {\n        table = $(table)[0]; // in case this is called externally\n\n        var indx,\n            len,\n            names,\n            widget,\n            time,\n            c = table.config,\n            debug = ts.debug(c, 'core'),\n            widgets = []; // prevent numerous consecutive widget applications\n\n        if (init !== false && table.hasInitialized && (table.isApplyingWidgets || table.isUpdating)) {\n          return;\n        }\n\n        if (debug) {\n          time = new Date();\n        }\n\n        ts.addWidgetFromClass(table); // prevent \"tablesorter-ready\" from firing multiple times in a row\n\n        clearTimeout(c.timerReady);\n\n        if (c.widgets.length) {\n          table.isApplyingWidgets = true; // ensure unique widget ids\n\n          c.widgets = $.grep(c.widgets, function (val, index) {\n            return $.inArray(val, c.widgets) === index;\n          });\n          names = c.widgets || [];\n          len = names.length; // build widget array & add priority as needed\n\n          for (indx = 0; indx < len; indx++) {\n            widget = ts.getWidgetById(names[indx]);\n\n            if (widget && widget.id) {\n              // set priority to 10 if not defined\n              if (!widget.priority) {\n                widget.priority = 10;\n              }\n\n              widgets[indx] = widget;\n            } else if (debug) {\n              console.warn('\"' + names[indx] + '\" was enabled, but the widget code has not been loaded!');\n            }\n          } // sort widgets by priority\n\n\n          widgets.sort(function (a, b) {\n            return a.priority < b.priority ? -1 : a.priority === b.priority ? 0 : 1;\n          }); // add/update selected widgets\n\n          len = widgets.length;\n\n          if (debug) {\n            console[console.group ? 'group' : 'log']('Start ' + (init ? 'initializing' : 'applying') + ' widgets');\n          }\n\n          for (indx = 0; indx < len; indx++) {\n            widget = widgets[indx];\n\n            if (widget && widget.id) {\n              ts.applyWidgetId(table, widget.id, init);\n            }\n          }\n\n          if (debug && console.groupEnd) {\n            console.groupEnd();\n          }\n        }\n\n        c.timerReady = setTimeout(function () {\n          table.isApplyingWidgets = false;\n          $.data(table, 'lastWidgetApplication', new Date());\n          c.$table.triggerHandler('tablesorter-ready'); // callback executed on init only\n\n          if (!init && typeof callback === 'function') {\n            callback(table);\n          }\n\n          if (debug) {\n            widget = c.widgets.length;\n            console.log('Completed ' + (init === true ? 'initializing ' : 'applying ') + widget + ' widget' + (widget !== 1 ? 's' : '') + ts.benchmark(time));\n          }\n        }, 10);\n      },\n      removeWidget: function (table, name, refreshing) {\n        table = $(table)[0];\n        var index,\n            widget,\n            indx,\n            len,\n            c = table.config; // if name === true, add all widgets from $.tablesorter.widgets\n\n        if (name === true) {\n          name = [];\n          len = ts.widgets.length;\n\n          for (indx = 0; indx < len; indx++) {\n            widget = ts.widgets[indx];\n\n            if (widget && widget.id) {\n              name[name.length] = widget.id;\n            }\n          }\n        } else {\n          // name can be either an array of widgets names,\n          // or a space/comma separated list of widget names\n          name = ($.isArray(name) ? name.join(',') : name || '').toLowerCase().split(/[\\s,]+/);\n        }\n\n        len = name.length;\n\n        for (index = 0; index < len; index++) {\n          widget = ts.getWidgetById(name[index]);\n          indx = $.inArray(name[index], c.widgets); // don't remove the widget from config.widget if refreshing\n\n          if (indx >= 0 && refreshing !== true) {\n            c.widgets.splice(indx, 1);\n          }\n\n          if (widget && widget.remove) {\n            if (ts.debug(c, 'core')) {\n              console.log((refreshing ? 'Refreshing' : 'Removing') + ' \"' + name[index] + '\" widget');\n            }\n\n            widget.remove(table, c, c.widgetOptions, refreshing);\n            c.widgetInit[name[index]] = false;\n          }\n        }\n\n        c.$table.triggerHandler('widgetRemoveEnd', table);\n      },\n      refreshWidgets: function (table, doAll, dontapply) {\n        table = $(table)[0]; // see issue #243\n\n        var indx,\n            widget,\n            c = table.config,\n            curWidgets = c.widgets,\n            widgets = ts.widgets,\n            len = widgets.length,\n            list = [],\n            callback = function (table) {\n          $(table).triggerHandler('refreshComplete');\n        }; // remove widgets not defined in config.widgets, unless doAll is true\n\n\n        for (indx = 0; indx < len; indx++) {\n          widget = widgets[indx];\n\n          if (widget && widget.id && (doAll || $.inArray(widget.id, curWidgets) < 0)) {\n            list[list.length] = widget.id;\n          }\n        }\n\n        ts.removeWidget(table, list.join(','), true);\n\n        if (dontapply !== true) {\n          // call widget init if\n          ts.applyWidget(table, doAll || false, callback);\n\n          if (doAll) {\n            // apply widget format\n            ts.applyWidget(table, false, callback);\n          }\n        } else {\n          callback(table);\n        }\n      },\n\n      /*\n      ██  ██ ██████ ██ ██     ██ ██████ ██ ██████ ▄█████\n      ██  ██   ██   ██ ██     ██   ██   ██ ██▄▄   ▀█▄\n      ██  ██   ██   ██ ██     ██   ██   ██ ██▀▀      ▀█▄\n      ▀████▀   ██   ██ ██████ ██   ██   ██ ██████ █████▀\n      */\n      benchmark: function (diff) {\n        return ' (' + (new Date().getTime() - diff.getTime()) + ' ms)';\n      },\n      // deprecated ts.log\n      log: function () {\n        console.log(arguments);\n      },\n      debug: function (c, name) {\n        return c && (c.debug === true || typeof c.debug === 'string' && c.debug.indexOf(name) > -1);\n      },\n      // $.isEmptyObject from jQuery v1.4\n      isEmptyObject: function (obj) {\n        /*jshint forin: false */\n        for (var name in obj) {\n          return false;\n        }\n\n        return true;\n      },\n      isValueInArray: function (column, arry) {\n        var indx,\n            len = arry && arry.length || 0;\n\n        for (indx = 0; indx < len; indx++) {\n          if (arry[indx][0] === column) {\n            return indx;\n          }\n        }\n\n        return -1;\n      },\n      formatFloat: function (str, table) {\n        if (typeof str !== 'string' || str === '') {\n          return str;\n        } // allow using formatFloat without a table; defaults to US number format\n\n\n        var num,\n            usFormat = table && table.config ? table.config.usNumberFormat !== false : typeof table !== 'undefined' ? table : true;\n\n        if (usFormat) {\n          // US Format - 1,234,567.89 -> 1234567.89\n          str = str.replace(ts.regex.comma, '');\n        } else {\n          // German Format = 1.234.567,89 -> 1234567.89\n          // French Format = 1 234 567,89 -> 1234567.89\n          str = str.replace(ts.regex.digitNonUS, '').replace(ts.regex.comma, '.');\n        }\n\n        if (ts.regex.digitNegativeTest.test(str)) {\n          // make (#) into a negative number -> (10) = -10\n          str = str.replace(ts.regex.digitNegativeReplace, '-$1');\n        }\n\n        num = parseFloat(str); // return the text instead of zero\n\n        return isNaN(num) ? $.trim(str) : num;\n      },\n      isDigit: function (str) {\n        // replace all unwanted chars and match\n        return isNaN(str) ? ts.regex.digitTest.test(str.toString().replace(ts.regex.digitReplace, '')) : str !== '';\n      },\n      // computeTableHeaderCellIndexes from:\n      // http://www.javascripttoolbox.com/lib/table/examples.php\n      // http://www.javascripttoolbox.com/temp/table_cellindex.html\n      computeColumnIndex: function ($rows, c) {\n        var i,\n            j,\n            k,\n            l,\n            cell,\n            cells,\n            rowIndex,\n            rowSpan,\n            colSpan,\n            firstAvailCol,\n            // total columns has been calculated, use it to set the matrixrow\n        columns = c && c.columns || 0,\n            matrix = [],\n            matrixrow = new Array(columns);\n\n        for (i = 0; i < $rows.length; i++) {\n          cells = $rows[i].cells;\n\n          for (j = 0; j < cells.length; j++) {\n            cell = cells[j];\n            rowIndex = i;\n            rowSpan = cell.rowSpan || 1;\n            colSpan = cell.colSpan || 1;\n\n            if (typeof matrix[rowIndex] === 'undefined') {\n              matrix[rowIndex] = [];\n            } // Find first available column in the first row\n\n\n            for (k = 0; k < matrix[rowIndex].length + 1; k++) {\n              if (typeof matrix[rowIndex][k] === 'undefined') {\n                firstAvailCol = k;\n                break;\n              }\n            } // jscs:disable disallowEmptyBlocks\n\n\n            if (columns && cell.cellIndex === firstAvailCol) {// don't to anything\n            } else if (cell.setAttribute) {\n              // jscs:enable disallowEmptyBlocks\n              // add data-column (setAttribute = IE8+)\n              cell.setAttribute('data-column', firstAvailCol);\n            } else {\n              // remove once we drop support for IE7 - 1/12/2016\n              $(cell).attr('data-column', firstAvailCol);\n            }\n\n            for (k = rowIndex; k < rowIndex + rowSpan; k++) {\n              if (typeof matrix[k] === 'undefined') {\n                matrix[k] = [];\n              }\n\n              matrixrow = matrix[k];\n\n              for (l = firstAvailCol; l < firstAvailCol + colSpan; l++) {\n                matrixrow[l] = 'x';\n              }\n            }\n          }\n        }\n\n        ts.checkColumnCount($rows, matrix, matrixrow.length);\n        return matrixrow.length;\n      },\n      checkColumnCount: function ($rows, matrix, columns) {\n        // this DOES NOT report any tbody column issues, except for the math and\n        // and column selector widgets\n        var i,\n            len,\n            valid = true,\n            cells = [];\n\n        for (i = 0; i < matrix.length; i++) {\n          // some matrix entries are undefined when testing the footer because\n          // it is using the rowIndex property\n          if (matrix[i]) {\n            len = matrix[i].length;\n\n            if (matrix[i].length !== columns) {\n              valid = false;\n              break;\n            }\n          }\n        }\n\n        if (!valid) {\n          $rows.each(function (indx, el) {\n            var cell = el.parentElement.nodeName;\n\n            if (cells.indexOf(cell) < 0) {\n              cells.push(cell);\n            }\n          });\n          console.error('Invalid or incorrect number of columns in the ' + cells.join(' or ') + '; expected ' + columns + ', but found ' + len + ' columns');\n        }\n      },\n      // automatically add a colgroup with col elements set to a percentage width\n      fixColumnWidth: function (table) {\n        table = $(table)[0];\n        var overallWidth,\n            percent,\n            $tbodies,\n            len,\n            index,\n            c = table.config,\n            $colgroup = c.$table.children('colgroup'); // remove plugin-added colgroup, in case we need to refresh the widths\n\n        if ($colgroup.length && $colgroup.hasClass(ts.css.colgroup)) {\n          $colgroup.remove();\n        }\n\n        if (c.widthFixed && c.$table.children('colgroup').length === 0) {\n          $colgroup = $('<colgroup class=\"' + ts.css.colgroup + '\">');\n          overallWidth = c.$table.width(); // only add col for visible columns - fixes #371\n\n          $tbodies = c.$tbodies.find('tr:first').children(':visible');\n          len = $tbodies.length;\n\n          for (index = 0; index < len; index++) {\n            percent = parseInt($tbodies.eq(index).width() / overallWidth * 1000, 10) / 10 + '%';\n            $colgroup.append($('<col>').css('width', percent));\n          }\n\n          c.$table.prepend($colgroup);\n        }\n      },\n      // get sorter, string, empty, etc options for each column from\n      // jQuery data, metadata, header option or header class name ('sorter-false')\n      // priority = jQuery data > meta > headers option > header class name\n      getData: function (header, configHeader, key) {\n        var meta,\n            cl4ss,\n            val = '',\n            $header = $(header);\n\n        if (!$header.length) {\n          return '';\n        }\n\n        meta = $.metadata ? $header.metadata() : false;\n        cl4ss = ' ' + ($header.attr('class') || '');\n\n        if (typeof $header.data(key) !== 'undefined' || typeof $header.data(key.toLowerCase()) !== 'undefined') {\n          // 'data-lockedOrder' is assigned to 'lockedorder'; but 'data-locked-order' is assigned to 'lockedOrder'\n          // 'data-sort-initial-order' is assigned to 'sortInitialOrder'\n          val += $header.data(key) || $header.data(key.toLowerCase());\n        } else if (meta && typeof meta[key] !== 'undefined') {\n          val += meta[key];\n        } else if (configHeader && typeof configHeader[key] !== 'undefined') {\n          val += configHeader[key];\n        } else if (cl4ss !== ' ' && cl4ss.match(' ' + key + '-')) {\n          // include sorter class name 'sorter-text', etc; now works with 'sorter-my-custom-parser'\n          val = cl4ss.match(new RegExp('\\\\s' + key + '-([\\\\w-]+)'))[1] || '';\n        }\n\n        return $.trim(val);\n      },\n      getColumnData: function (table, obj, indx, getCell, $headers) {\n        if (typeof obj !== 'object' || obj === null) {\n          return obj;\n        }\n\n        table = $(table)[0];\n        var $header,\n            key,\n            c = table.config,\n            $cells = $headers || c.$headers,\n            // c.$headerIndexed is not defined initially\n        $cell = c.$headerIndexed && c.$headerIndexed[indx] || $cells.find('[data-column=\"' + indx + '\"]:last');\n\n        if (typeof obj[indx] !== 'undefined') {\n          return getCell ? obj[indx] : obj[$cells.index($cell)];\n        }\n\n        for (key in obj) {\n          if (typeof key === 'string') {\n            $header = $cell // header cell with class/id\n            .filter(key) // find elements within the header cell with cell/id\n            .add($cell.find(key));\n\n            if ($header.length) {\n              return obj[key];\n            }\n          }\n        }\n\n        return;\n      },\n      // *** Process table ***\n      // add processing indicator\n      isProcessing: function ($table, toggle, $headers) {\n        $table = $($table);\n        var c = $table[0].config,\n            // default to all headers\n        $header = $headers || $table.find('.' + ts.css.header);\n\n        if (toggle) {\n          // don't use sortList if custom $headers used\n          if (typeof $headers !== 'undefined' && c.sortList.length > 0) {\n            // get headers from the sortList\n            $header = $header.filter(function () {\n              // get data-column from attr to keep compatibility with jQuery 1.2.6\n              return this.sortDisabled ? false : ts.isValueInArray(parseFloat($(this).attr('data-column')), c.sortList) >= 0;\n            });\n          }\n\n          $table.add($header).addClass(ts.css.processing + ' ' + c.cssProcessing);\n        } else {\n          $table.add($header).removeClass(ts.css.processing + ' ' + c.cssProcessing);\n        }\n      },\n      // detach tbody but save the position\n      // don't use tbody because there are portions that look for a tbody index (updateCell)\n      processTbody: function (table, $tb, getIt) {\n        table = $(table)[0];\n\n        if (getIt) {\n          table.isProcessing = true;\n          $tb.before('<colgroup class=\"tablesorter-savemyplace\"/>');\n          return $.fn.detach ? $tb.detach() : $tb.remove();\n        }\n\n        var holdr = $(table).find('colgroup.tablesorter-savemyplace');\n        $tb.insertAfter(holdr);\n        holdr.remove();\n        table.isProcessing = false;\n      },\n      clearTableBody: function (table) {\n        $(table)[0].config.$tbodies.children().detach();\n      },\n      // used when replacing accented characters during sorting\n      characterEquivalents: {\n        'a': '\\u00e1\\u00e0\\u00e2\\u00e3\\u00e4\\u0105\\u00e5',\n        // áàâãäąå\n        'A': '\\u00c1\\u00c0\\u00c2\\u00c3\\u00c4\\u0104\\u00c5',\n        // ÁÀÂÃÄĄÅ\n        'c': '\\u00e7\\u0107\\u010d',\n        // çćč\n        'C': '\\u00c7\\u0106\\u010c',\n        // ÇĆČ\n        'e': '\\u00e9\\u00e8\\u00ea\\u00eb\\u011b\\u0119',\n        // éèêëěę\n        'E': '\\u00c9\\u00c8\\u00ca\\u00cb\\u011a\\u0118',\n        // ÉÈÊËĚĘ\n        'i': '\\u00ed\\u00ec\\u0130\\u00ee\\u00ef\\u0131',\n        // íìİîïı\n        'I': '\\u00cd\\u00cc\\u0130\\u00ce\\u00cf',\n        // ÍÌİÎÏ\n        'o': '\\u00f3\\u00f2\\u00f4\\u00f5\\u00f6\\u014d',\n        // óòôõöō\n        'O': '\\u00d3\\u00d2\\u00d4\\u00d5\\u00d6\\u014c',\n        // ÓÒÔÕÖŌ\n        'ss': '\\u00df',\n        // ß (s sharp)\n        'SS': '\\u1e9e',\n        // ẞ (Capital sharp s)\n        'u': '\\u00fa\\u00f9\\u00fb\\u00fc\\u016f',\n        // úùûüů\n        'U': '\\u00da\\u00d9\\u00db\\u00dc\\u016e' // ÚÙÛÜŮ\n\n      },\n      replaceAccents: function (str) {\n        var chr,\n            acc = '[',\n            eq = ts.characterEquivalents;\n\n        if (!ts.characterRegex) {\n          ts.characterRegexArray = {};\n\n          for (chr in eq) {\n            if (typeof chr === 'string') {\n              acc += eq[chr];\n              ts.characterRegexArray[chr] = new RegExp('[' + eq[chr] + ']', 'g');\n            }\n          }\n\n          ts.characterRegex = new RegExp(acc + ']');\n        }\n\n        if (ts.characterRegex.test(str)) {\n          for (chr in eq) {\n            if (typeof chr === 'string') {\n              str = str.replace(ts.characterRegexArray[chr], chr);\n            }\n          }\n        }\n\n        return str;\n      },\n      validateOptions: function (c) {\n        var setting,\n            setting2,\n            typ,\n            timer,\n            // ignore options containing an array\n        ignore = 'headers sortForce sortList sortAppend widgets'.split(' '),\n            orig = c.originalSettings;\n\n        if (orig) {\n          if (ts.debug(c, 'core')) {\n            timer = new Date();\n          }\n\n          for (setting in orig) {\n            typ = typeof ts.defaults[setting];\n\n            if (typ === 'undefined') {\n              console.warn('Tablesorter Warning! \"table.config.' + setting + '\" option not recognized');\n            } else if (typ === 'object') {\n              for (setting2 in orig[setting]) {\n                typ = ts.defaults[setting] && typeof ts.defaults[setting][setting2];\n\n                if ($.inArray(setting, ignore) < 0 && typ === 'undefined') {\n                  console.warn('Tablesorter Warning! \"table.config.' + setting + '.' + setting2 + '\" option not recognized');\n                }\n              }\n            }\n          }\n\n          if (ts.debug(c, 'core')) {\n            console.log('validate options time:' + ts.benchmark(timer));\n          }\n        }\n      },\n      // restore headers\n      restoreHeaders: function (table) {\n        var index,\n            $cell,\n            c = $(table)[0].config,\n            $headers = c.$table.find(c.selectorHeaders),\n            len = $headers.length; // don't use c.$headers here in case header cells were swapped\n\n        for (index = 0; index < len; index++) {\n          $cell = $headers.eq(index); // only restore header cells if it is wrapped\n          // because this is also used by the updateAll method\n\n          if ($cell.find('.' + ts.css.headerIn).length) {\n            $cell.html(c.headerContent[index]);\n          }\n        }\n      },\n      destroy: function (table, removeClasses, callback) {\n        table = $(table)[0];\n\n        if (!table.hasInitialized) {\n          return;\n        } // remove all widgets\n\n\n        ts.removeWidget(table, true, false);\n        var events,\n            $t = $(table),\n            c = table.config,\n            $h = $t.find('thead:first'),\n            $r = $h.find('tr.' + ts.css.headerRow).removeClass(ts.css.headerRow + ' ' + c.cssHeaderRow),\n            $f = $t.find('tfoot:first > tr').children('th, td');\n\n        if (removeClasses === false && $.inArray('uitheme', c.widgets) >= 0) {\n          // reapply uitheme classes, in case we want to maintain appearance\n          $t.triggerHandler('applyWidgetId', ['uitheme']);\n          $t.triggerHandler('applyWidgetId', ['zebra']);\n        } // remove widget added rows, just in case\n\n\n        $h.find('tr').not($r).remove(); // disable tablesorter - not using .unbind( namespace ) because namespacing was\n        // added in jQuery v1.4.3 - see http://api.jquery.com/event.namespace/\n\n        events = 'sortReset update updateRows updateAll updateHeaders updateCell addRows updateComplete sorton ' + 'appendCache updateCache applyWidgetId applyWidgets refreshWidgets removeWidget destroy mouseup mouseleave ' + 'keypress sortBegin sortEnd resetToLoadState '.split(' ').join(c.namespace + ' ');\n        $t.removeData('tablesorter').unbind(events.replace(ts.regex.spaces, ' '));\n        c.$headers.add($f).removeClass([ts.css.header, c.cssHeader, c.cssAsc, c.cssDesc, ts.css.sortAsc, ts.css.sortDesc, ts.css.sortNone].join(' ')).removeAttr('data-column').removeAttr('aria-label').attr('aria-disabled', 'true');\n        $r.find(c.selectorSort).unbind('mousedown mouseup keypress '.split(' ').join(c.namespace + ' ').replace(ts.regex.spaces, ' '));\n        ts.restoreHeaders(table);\n        $t.toggleClass(ts.css.table + ' ' + c.tableClass + ' tablesorter-' + c.theme, removeClasses === false);\n        $t.removeClass(c.namespace.slice(1)); // clear flag in case the plugin is initialized again\n\n        table.hasInitialized = false;\n        delete table.config.cache;\n\n        if (typeof callback === 'function') {\n          callback(table);\n        }\n\n        if (ts.debug(c, 'core')) {\n          console.log('tablesorter has been removed');\n        }\n      }\n    };\n\n    $.fn.tablesorter = function (settings) {\n      return this.each(function () {\n        var table = this,\n            // merge & extend config options\n        c = $.extend(true, {}, ts.defaults, settings, ts.instanceMethods); // save initial settings\n\n        c.originalSettings = settings; // create a table from data (build table widget)\n\n        if (!table.hasInitialized && ts.buildTable && this.nodeName !== 'TABLE') {\n          // return the table (in case the original target is the table's container)\n          ts.buildTable(table, c);\n        } else {\n          ts.setup(table, c);\n        }\n      });\n    }; // set up debug logs\n\n\n    if (!(window.console && window.console.log)) {\n      // access $.tablesorter.logs for browsers that don't have a console...\n      ts.logs = [];\n      /*jshint -W020 */\n\n      console = {};\n\n      console.log = console.warn = console.error = console.table = function () {\n        var arg = arguments.length > 1 ? arguments : arguments[0];\n        ts.logs[ts.logs.length] = {\n          date: Date.now(),\n          log: arg\n        };\n      };\n    } // add default parsers\n\n\n    ts.addParser({\n      id: 'no-parser',\n      is: function () {\n        return false;\n      },\n      format: function () {\n        return '';\n      },\n      type: 'text'\n    });\n    ts.addParser({\n      id: 'text',\n      is: function () {\n        return true;\n      },\n      format: function (str, table) {\n        var c = table.config;\n\n        if (str) {\n          str = $.trim(c.ignoreCase ? str.toLocaleLowerCase() : str);\n          str = c.sortLocaleCompare ? ts.replaceAccents(str) : str;\n        }\n\n        return str;\n      },\n      type: 'text'\n    });\n    ts.regex.nondigit = /[^\\w,. \\-()]/g;\n    ts.addParser({\n      id: 'digit',\n      is: function (str) {\n        return ts.isDigit(str);\n      },\n      format: function (str, table) {\n        var num = ts.formatFloat((str || '').replace(ts.regex.nondigit, ''), table);\n        return str && typeof num === 'number' ? num : str ? $.trim(str && table.config.ignoreCase ? str.toLocaleLowerCase() : str) : str;\n      },\n      type: 'numeric'\n    });\n    ts.regex.currencyReplace = /[+\\-,. ]/g;\n    ts.regex.currencyTest = /^\\(?\\d+[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]|[\\u00a3$\\u20ac\\u00a4\\u00a5\\u00a2?.]\\d+\\)?$/;\n    ts.addParser({\n      id: 'currency',\n      is: function (str) {\n        str = (str || '').replace(ts.regex.currencyReplace, ''); // test for £$€¤¥¢\n\n        return ts.regex.currencyTest.test(str);\n      },\n      format: function (str, table) {\n        var num = ts.formatFloat((str || '').replace(ts.regex.nondigit, ''), table);\n        return str && typeof num === 'number' ? num : str ? $.trim(str && table.config.ignoreCase ? str.toLocaleLowerCase() : str) : str;\n      },\n      type: 'numeric'\n    }); // too many protocols to add them all https://en.wikipedia.org/wiki/URI_scheme\n    // now, this regex can be updated before initialization\n\n    ts.regex.urlProtocolTest = /^(https?|ftp|file):\\/\\//;\n    ts.regex.urlProtocolReplace = /(https?|ftp|file):\\/\\/(www\\.)?/;\n    ts.addParser({\n      id: 'url',\n      is: function (str) {\n        return ts.regex.urlProtocolTest.test(str);\n      },\n      format: function (str) {\n        return str ? $.trim(str.replace(ts.regex.urlProtocolReplace, '')) : str;\n      },\n      type: 'text'\n    });\n    ts.regex.dash = /-/g;\n    ts.regex.isoDate = /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}/;\n    ts.addParser({\n      id: 'isoDate',\n      is: function (str) {\n        return ts.regex.isoDate.test(str);\n      },\n      format: function (str) {\n        var date = str ? new Date(str.replace(ts.regex.dash, '/')) : str;\n        return date instanceof Date && isFinite(date) ? date.getTime() : str;\n      },\n      type: 'numeric'\n    });\n    ts.regex.percent = /%/g;\n    ts.regex.percentTest = /(\\d\\s*?%|%\\s*?\\d)/;\n    ts.addParser({\n      id: 'percent',\n      is: function (str) {\n        return ts.regex.percentTest.test(str) && str.length < 15;\n      },\n      format: function (str, table) {\n        return str ? ts.formatFloat(str.replace(ts.regex.percent, ''), table) : str;\n      },\n      type: 'numeric'\n    }); // added image parser to core v2.17.9\n\n    ts.addParser({\n      id: 'image',\n      is: function (str, table, node, $node) {\n        return $node.find('img').length > 0;\n      },\n      format: function (str, table, cell) {\n        return $(cell).find('img').attr(table.config.imgAttr || 'alt') || str;\n      },\n      parsed: true,\n      // filter widget flag\n      type: 'text'\n    });\n    ts.regex.dateReplace = /(\\S)([AP]M)$/i; // used by usLongDate & time parser\n\n    ts.regex.usLongDateTest1 = /^[A-Z]{3,10}\\.?\\s+\\d{1,2},?\\s+(\\d{4})(\\s+\\d{1,2}:\\d{2}(:\\d{2})?(\\s+[AP]M)?)?$/i;\n    ts.regex.usLongDateTest2 = /^\\d{1,2}\\s+[A-Z]{3,10}\\s+\\d{4}/i;\n    ts.addParser({\n      id: 'usLongDate',\n      is: function (str) {\n        // two digit years are not allowed cross-browser\n        // Jan 01, 2013 12:34:56 PM or 01 Jan 2013\n        return ts.regex.usLongDateTest1.test(str) || ts.regex.usLongDateTest2.test(str);\n      },\n      format: function (str) {\n        var date = str ? new Date(str.replace(ts.regex.dateReplace, '$1 $2')) : str;\n        return date instanceof Date && isFinite(date) ? date.getTime() : str;\n      },\n      type: 'numeric'\n    }); // testing for ##-##-#### or ####-##-##, so it's not perfect; time can be included\n\n    ts.regex.shortDateTest = /(^\\d{1,2}[\\/\\s]\\d{1,2}[\\/\\s]\\d{4})|(^\\d{4}[\\/\\s]\\d{1,2}[\\/\\s]\\d{1,2})/; // escaped \"-\" because JSHint in Firefox was showing it as an error\n\n    ts.regex.shortDateReplace = /[\\-.,]/g; // XXY covers MDY & DMY formats\n\n    ts.regex.shortDateXXY = /(\\d{1,2})[\\/\\s](\\d{1,2})[\\/\\s](\\d{4})/;\n    ts.regex.shortDateYMD = /(\\d{4})[\\/\\s](\\d{1,2})[\\/\\s](\\d{1,2})/;\n\n    ts.convertFormat = function (dateString, format) {\n      dateString = (dateString || '').replace(ts.regex.spaces, ' ').replace(ts.regex.shortDateReplace, '/');\n\n      if (format === 'mmddyyyy') {\n        dateString = dateString.replace(ts.regex.shortDateXXY, '$3/$1/$2');\n      } else if (format === 'ddmmyyyy') {\n        dateString = dateString.replace(ts.regex.shortDateXXY, '$3/$2/$1');\n      } else if (format === 'yyyymmdd') {\n        dateString = dateString.replace(ts.regex.shortDateYMD, '$1/$2/$3');\n      }\n\n      var date = new Date(dateString);\n      return date instanceof Date && isFinite(date) ? date.getTime() : '';\n    };\n\n    ts.addParser({\n      id: 'shortDate',\n      // 'mmddyyyy', 'ddmmyyyy' or 'yyyymmdd'\n      is: function (str) {\n        str = (str || '').replace(ts.regex.spaces, ' ').replace(ts.regex.shortDateReplace, '/');\n        return ts.regex.shortDateTest.test(str);\n      },\n      format: function (str, table, cell, cellIndex) {\n        if (str) {\n          var c = table.config,\n              $header = c.$headerIndexed[cellIndex],\n              format = $header.length && $header.data('dateFormat') || ts.getData($header, ts.getColumnData(table, c.headers, cellIndex), 'dateFormat') || c.dateFormat; // save format because getData can be slow...\n\n          if ($header.length) {\n            $header.data('dateFormat', format);\n          }\n\n          return ts.convertFormat(str, format) || str;\n        }\n\n        return str;\n      },\n      type: 'numeric'\n    }); // match 24 hour time & 12 hours time + am/pm - see http://regexr.com/3c3tk\n\n    ts.regex.timeTest = /^(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)$|^((?:[01]\\d|[2][0-4]):[0-5]\\d)$/i;\n    ts.regex.timeMatch = /(0?[1-9]|1[0-2]):([0-5]\\d)(\\s[AP]M)|((?:[01]\\d|[2][0-4]):[0-5]\\d)/i;\n    ts.addParser({\n      id: 'time',\n      is: function (str) {\n        return ts.regex.timeTest.test(str);\n      },\n      format: function (str) {\n        // isolate time... ignore month, day and year\n        var temp,\n            timePart = (str || '').match(ts.regex.timeMatch),\n            orig = new Date(str),\n            // no time component? default to 00:00 by leaving it out, but only if str is defined\n        time = str && (timePart !== null ? timePart[0] : '00:00 AM'),\n            date = time ? new Date('2000/01/01 ' + time.replace(ts.regex.dateReplace, '$1 $2')) : time;\n\n        if (date instanceof Date && isFinite(date)) {\n          temp = orig instanceof Date && isFinite(orig) ? orig.getTime() : 0; // if original string was a valid date, add it to the decimal so the column sorts in some kind of order\n          // luckily new Date() ignores the decimals\n\n          return temp ? parseFloat(date.getTime() + '.' + orig.getTime()) : date.getTime();\n        }\n\n        return str;\n      },\n      type: 'numeric'\n    });\n    ts.addParser({\n      id: 'metadata',\n      is: function () {\n        return false;\n      },\n      format: function (str, table, cell) {\n        var c = table.config,\n            p = !c.parserMetadataName ? 'sortValue' : c.parserMetadataName;\n        return $(cell).metadata()[p];\n      },\n      type: 'numeric'\n    });\n    /*\n    \t██████ ██████ █████▄ █████▄ ▄████▄\n    \t  ▄█▀  ██▄▄   ██▄▄██ ██▄▄██ ██▄▄██\n    \t▄█▀    ██▀▀   ██▀▀██ ██▀▀█  ██▀▀██\n    \t██████ ██████ █████▀ ██  ██ ██  ██\n    \t*/\n    // add default widgets\n\n    ts.addWidget({\n      id: 'zebra',\n      priority: 90,\n      format: function (table, c, wo) {\n        var $visibleRows,\n            $row,\n            count,\n            isEven,\n            tbodyIndex,\n            rowIndex,\n            len,\n            child = new RegExp(c.cssChildRow, 'i'),\n            $tbodies = c.$tbodies.add($(c.namespace + '_extra_table').children('tbody:not(.' + c.cssInfoBlock + ')'));\n\n        for (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++) {\n          // loop through the visible rows\n          count = 0;\n          $visibleRows = $tbodies.eq(tbodyIndex).children('tr:visible').not(c.selectorRemove);\n          len = $visibleRows.length;\n\n          for (rowIndex = 0; rowIndex < len; rowIndex++) {\n            $row = $visibleRows.eq(rowIndex); // style child rows the same way the parent row was styled\n\n            if (!child.test($row[0].className)) {\n              count++;\n            }\n\n            isEven = count % 2 === 0;\n            $row.removeClass(wo.zebra[isEven ? 1 : 0]).addClass(wo.zebra[isEven ? 0 : 1]);\n          }\n        }\n      },\n      remove: function (table, c, wo, refreshing) {\n        if (refreshing) {\n          return;\n        }\n\n        var tbodyIndex,\n            $tbody,\n            $tbodies = c.$tbodies,\n            toRemove = (wo.zebra || ['even', 'odd']).join(' ');\n\n        for (tbodyIndex = 0; tbodyIndex < $tbodies.length; tbodyIndex++) {\n          $tbody = ts.processTbody(table, $tbodies.eq(tbodyIndex), true); // remove tbody\n\n          $tbody.children().removeClass(toRemove);\n          ts.processTbody(table, $tbody, false); // restore tbody\n        }\n      }\n    });\n  })(jQuery);\n\n  return jQuery.tablesorter;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/jquery.tablesorter.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/widgets/widget-columnSelector.min.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/widgets/widget-columnSelector.min.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  !function (h) {\n    \"use strict\";\n\n    var f = h.tablesorter,\n        c = \".tscolsel\",\n        S = f.columnSelector = {\n      queryAll: \"@media only all { [columns] { display: none; } } \",\n      queryBreak: \"@media all and (min-width: [size]) { [columns] { display: table-cell; } } \",\n      init: function (e, t, o) {\n        var l,\n            a,\n            n = f.debug(t, \"columnSelector\");\n        (l = h(o.columnSelector_layout)).find(\"input\").add(l.filter(\"input\")).length ? (t.$table.addClass(t.namespace.slice(1) + \"columnselector\"), (a = t.selector = {\n          $container: h(o.columnSelector_container || \"<div>\")\n        }).$style = h(\"<style></style>\").prop(\"disabled\", !0).appendTo(\"head\"), a.$breakpoints = h(\"<style></style>\").prop(\"disabled\", !0).appendTo(\"head\"), a.isInitializing = !0, S.setUpColspan(t, o), S.setupSelector(t, o), o.columnSelector_mediaquery && S.setupBreakpoints(t, o), a.isInitializing = !1, a.$container.length ? S.updateCols(t, o) : n && console.warn(\"ColumnSelector >> container not found\"), t.$table.off(\"refreshColumnSelector\" + c).on(\"refreshColumnSelector\" + c, function (e, t, o) {\n          S.refreshColumns(this.config, t, o);\n        }), n && console.log(\"ColumnSelector >> Widget initialized\")) : n && console.error(\"ColumnSelector >> ERROR: Column Selector aborting, no input found in the layout! ***\");\n      },\n      refreshColumns: function (e, t, o) {\n        var l,\n            a,\n            n,\n            c,\n            r = e.selector,\n            s = h.isArray(o || t),\n            i = e.widgetOptions;\n\n        if (null != t && r.$container.length) {\n          if (\"selectors\" === t && (r.$container.empty(), S.setupSelector(e, i), S.setupBreakpoints(e, i), void 0 === o && null !== o && (o = r.auto)), s) for (a = o || t, h.each(a, function (e, t) {\n            a[e] = parseInt(t, 10);\n          }), l = 0; l < e.columns; l++) c = 0 <= h.inArray(l, a), (n = r.$container.find(\"input[data-column=\" + l + \"]\")).length && (n.prop(\"checked\", c), r.states[l] = c);\n          c = !0 === o || !0 === t || \"auto\" === t && !1 !== o, n = r.$container.find('input[data-column=\"auto\"]').prop(\"checked\", c), S.updateAuto(e, i, n);\n        } else S.updateBreakpoints(e, i), S.updateCols(e, i);\n\n        S.saveValues(e, i), S.adjustColspans(e, i);\n      },\n      setupSelector: function (t, o) {\n        var e,\n            l,\n            a,\n            n,\n            c,\n            r,\n            s,\n            i = t.selector,\n            u = i.$container,\n            d = o.columnSelector_saveColumns && f.storage,\n            p = d ? f.storage(t.table, \"tablesorter-columnSelector\") : [],\n            m = d ? f.storage(t.table, \"tablesorter-columnSelector-auto\") : {};\n\n        for (i.auto = h.isEmptyObject(m) || \"boolean\" !== h.type(m.auto) ? o.columnSelector_mediaqueryState : m.auto, i.states = [], i.$column = [], i.$wrapper = [], i.$checkbox = [], e = 0; e < t.columns; e++) n = (a = t.$headerIndexed[e]).attr(o.columnSelector_priority) || 1, r = a.attr(\"data-column\"), c = f.getColumnData(t.table, t.headers, r), m = f.getData(a, c, \"columnSelector\"), isNaN(n) && 0 < n.length || \"disable\" === m || o.columnSelector_columns[r] && \"disable\" === o.columnSelector_columns[r] ? i.states[r] = null : (i.states[r] = p && void 0 !== p[r] && null !== p[r] ? p[r] : void 0 !== o.columnSelector_columns[r] && null !== o.columnSelector_columns[r] ? o.columnSelector_columns[r] : \"true\" === m || \"false\" !== m, i.$column[r] = h(this), u.length && (l = a.attr(o.columnSelector_name) || a.text().trim(), \"function\" == typeof o.columnSelector_layoutCustomizer && (s = a.find(\".\" + f.css.headerIn), l = o.columnSelector_layoutCustomizer(s.length ? s : a, l, parseInt(r, 10))), i.$wrapper[r] = h(o.columnSelector_layout.replace(/\\{name\\}/g, l)).appendTo(u), i.$checkbox[r] = i.$wrapper[r].find(\"input\").add(i.$wrapper[r].filter(\"input\")).attr(\"data-column\", r).toggleClass(o.columnSelector_cssChecked, i.states[r]).prop(\"checked\", i.states[r]).on(\"change\", function () {\n          if (!i.isInitializing) {\n            var e = h(this).attr(\"data-column\");\n            if (!S.checkChange(t, this.checked)) return this.checked = !this.checked, !1;\n            t.selector.states[e] = this.checked, S.updateCols(t, o);\n          }\n        }).change()));\n      },\n      checkChange: function (e, t) {\n        for (var o = e.widgetOptions, l = o.columnSelector_maxVisible, a = o.columnSelector_minVisible, n = e.selector.states, c = n.length, r = 0; 0 <= c--;) n[c] && r++;\n\n        return !(t & null !== l && l <= r || !t && null !== a && r <= a);\n      },\n      setupBreakpoints: function (e, t) {\n        var o = e.selector;\n        t.columnSelector_mediaquery && (o.lastIndex = -1, S.updateBreakpoints(e, t), e.$table.off(\"updateAll\" + c).on(\"updateAll\" + c, function () {\n          S.setupSelector(e, t), S.setupBreakpoints(e, t), S.updateBreakpoints(e, t), S.updateCols(e, t);\n        })), o.$container.length && (t.columnSelector_mediaquery && (o.$auto = h(t.columnSelector_layout.replace(/\\{name\\}/g, t.columnSelector_mediaqueryName)).prependTo(o.$container), o.$auto.find(\"input\").add(o.$auto.filter(\"input\")).attr(\"data-column\", \"auto\").prop(\"checked\", o.auto).toggleClass(t.columnSelector_cssChecked, o.auto).on(\"change\", function () {\n          S.updateAuto(e, t, h(this));\n        }).change()), e.$table.off(\"update\" + c).on(\"update\" + c, function () {\n          S.updateCols(e, t);\n        }));\n      },\n      updateAuto: function (e, t, o) {\n        var l = e.selector;\n        l.auto = o.prop(\"checked\") || !1, h.each(l.$checkbox, function (e, t) {\n          t && (t[0].disabled = l.auto, l.$wrapper[e].toggleClass(\"disabled\", l.auto));\n        }), t.columnSelector_mediaquery && S.updateBreakpoints(e, t), S.updateCols(e, t), e.selector.$popup && e.selector.$popup.find(\".tablesorter-column-selector\").html(l.$container.html()).find(\"input\").each(function () {\n          var e = h(this).attr(\"data-column\");\n          h(this).prop(\"checked\", \"auto\" === e ? l.auto : l.states[e]);\n        }), S.saveValues(e, t), S.adjustColspans(e, t), l.auto && e.$table.triggerHandler(t.columnSelector_updated);\n      },\n      addSelectors: function (e, t, o) {\n        var l = [],\n            a = \" col:nth-child(\" + o + \")\";\n        return l.push(t + a + \",\" + t + \"_extra_table\" + a), a = \" tr:not(.\" + e.columnSelector_classHasSpan + ') th[data-column=\"' + (o - 1) + '\"]', l.push(t + a + \",\" + t + \"_extra_table\" + a), a = \" tr:not(.\" + e.columnSelector_classHasSpan + \") td:nth-child(\" + o + \")\", l.push(t + a + \",\" + t + \"_extra_table\" + a), a = \" tr td:not(\" + t + e.columnSelector_classHasSpan + ')[data-column=\"' + (o - 1) + '\"]', l.push(t + a + \",\" + t + \"_extra_table\" + a), l;\n      },\n      updateBreakpoints: function (e, t) {\n        var o,\n            l,\n            a,\n            n,\n            c = [],\n            r = e.selector,\n            s = e.namespace + \"columnselector\",\n            i = [],\n            u = \"\";\n        if (t.columnSelector_mediaquery && !r.auto) return r.$breakpoints.prop(\"disabled\", !0), void r.$style.prop(\"disabled\", !1);\n        if (t.columnSelector_mediaqueryHidden) for (a = 0; a < e.columns; a++) l = f.getColumnData(e.table, e.headers, a), c[a + 1] = \"false\" === f.getData(e.$headerIndexed[a], l, \"columnSelector\"), c[a + 1] && (i = i.concat(S.addSelectors(t, s, a + 1)));\n\n        for (o = 0; o < t.columnSelector_maxPriorities; o++) n = [], e.$headers.filter(\"[\" + t.columnSelector_priority + \"=\" + (o + 1) + \"]\").each(function () {\n          a = parseInt(h(this).attr(\"data-column\"), 10) + 1, c[a] || (n = n.concat(S.addSelectors(t, s, a)));\n        }), n.length && (i = i.concat(n), u += S.queryBreak.replace(/\\[size\\]/g, t.columnSelector_breakpoints[o]).replace(/\\[columns\\]/g, n.join(\",\")));\n\n        r.$style && r.$style.prop(\"disabled\", !0), i.length && r.$breakpoints.prop(\"disabled\", !1).text(S.queryAll.replace(/\\[columns\\]/g, i.join(\",\")) + u);\n      },\n      updateCols: function (e, t) {\n        if (!(t.columnSelector_mediaquery && e.selector.auto || e.selector.isInitializing)) {\n          var o,\n              l = e.selector,\n              a = [],\n              n = e.namespace + \"columnselector\";\n          l.$container.find(\"input[data-column]\").filter('[data-column!=\"auto\"]').each(function () {\n            this.checked || (o = parseInt(h(this).attr(\"data-column\"), 10) + 1, a = a.concat(S.addSelectors(t, n, o))), h(this).toggleClass(t.columnSelector_cssChecked, this.checked);\n          }), t.columnSelector_mediaquery && l.$breakpoints.prop(\"disabled\", !0), l.$style && l.$style.prop(\"disabled\", !1).text(a.length ? a.join(\",\") + \" { display: none; }\" : \"\"), S.saveValues(e, t), S.adjustColspans(e, t), e.$table.triggerHandler(t.columnSelector_updated);\n        }\n      },\n      setUpColspan: function (e, t) {\n        var o,\n            l,\n            a,\n            n = h(window),\n            c = !1,\n            r = e.$table.add(h(e.namespace + \"_extra_table\")).children().children(\"tr\").children(\"th, td\"),\n            s = r.length;\n\n        for (o = 0; o < s; o++) 1 < (l = r[o].colSpan) && (c = !0, r.eq(o).addClass(e.namespace.slice(1) + \"columnselector\" + t.columnSelector_classHasSpan).attr(\"data-col-span\", l), f.computeColumnIndex(r.eq(o).parent().addClass(t.columnSelector_classHasSpan)));\n\n        c && t.columnSelector_mediaquery && (a = e.namespace + \"columnselector\", n.off(a).on(\"resize\" + a, f.window_resize).on(\"resizeEnd\" + a, function () {\n          n.off(\"resize\" + a, f.window_resize), S.adjustColspans(e, t), n.on(\"resize\" + a, f.window_resize);\n        }));\n      },\n      adjustColspans: function (e, t) {\n        var o,\n            l,\n            a,\n            n,\n            c,\n            r,\n            s = e.selector,\n            i = t.filter_filteredRow || \"filtered\",\n            u = t.columnSelector_mediaquery && s.auto,\n            d = e.$table.children(\"thead, tfoot\").children().children().add(h(e.namespace + \"_extra_table\").children(\"thead, tfoot\").children().children()).add(e.$table.find(\".group-header\").children()),\n            p = d.length;\n\n        for (o = 0; o < p; o++) if (r = d.eq(o), c = (a = parseInt(r.attr(\"data-column\"), 10) || r[0].cellIndex) + (n = parseInt(r.attr(\"data-col-span\"), 10) || 1), 1 < n) {\n          for (l = a; l < c; l++) (!u && !1 === s.states[l] || u && e.$headerIndexed[l] && !e.$headerIndexed[l].is(\":visible\")) && n--;\n\n          n ? r.removeClass(i)[0].colSpan = n : r.addClass(i);\n        } else void 0 !== s.states[a] && null !== s.states[a] && r.toggleClass(i, !u && !s.states[a]);\n      },\n      saveValues: function (e, t) {\n        if (t.columnSelector_saveColumns && f.storage) {\n          var o = e.selector;\n          f.storage(e.$table[0], \"tablesorter-columnSelector-auto\", {\n            auto: o.auto\n          }), f.storage(e.$table[0], \"tablesorter-columnSelector\", o.states);\n        }\n      },\n      attachTo: function (e, t) {\n        var o,\n            l,\n            a,\n            n = (e = h(e)[0]).config,\n            c = h(t);\n        c.length && n && (c.find(\".tablesorter-column-selector\").length || c.append('<span class=\"tablesorter-column-selector\"></span>'), o = n.selector, l = n.widgetOptions, c.find(\".tablesorter-column-selector\").html(o.$container.html()).find(\"input\").each(function () {\n          var e = h(this).attr(\"data-column\"),\n              t = \"auto\" === e ? o.auto : o.states[e];\n          h(this).toggleClass(l.columnSelector_cssChecked, t).prop(\"checked\", t);\n        }), o.$popup = c.on(\"change\", \"input\", function () {\n          if (!o.isInitializing) {\n            if (!S.checkChange(n, this.checked)) return this.checked = !this.checked, !1;\n            a = h(this).toggleClass(l.columnSelector_cssChecked, this.checked).attr(\"data-column\"), o.$container.find('input[data-column=\"' + a + '\"]').prop(\"checked\", this.checked).trigger(\"change\");\n          }\n        }));\n      }\n    };\n    f.window_resize = function () {\n      f.timer_resize && clearTimeout(f.timer_resize), f.timer_resize = setTimeout(function () {\n        h(window).trigger(\"resizeEnd\");\n      }, 250);\n    }, f.addWidget({\n      id: \"columnSelector\",\n      priority: 10,\n      options: {\n        columnSelector_container: null,\n        columnSelector_columns: {},\n        columnSelector_saveColumns: !0,\n        columnSelector_layout: '<label><input type=\"checkbox\">{name}</label>',\n        columnSelector_layoutCustomizer: null,\n        columnSelector_name: \"data-selector-name\",\n        columnSelector_mediaquery: !0,\n        columnSelector_mediaqueryName: \"Auto: \",\n        columnSelector_mediaqueryState: !0,\n        columnSelector_mediaqueryHidden: !1,\n        columnSelector_maxVisible: null,\n        columnSelector_minVisible: null,\n        columnSelector_breakpoints: [\"20em\", \"30em\", \"40em\", \"50em\", \"60em\", \"70em\"],\n        columnSelector_maxPriorities: 6,\n        columnSelector_priority: \"data-priority\",\n        columnSelector_cssChecked: \"checked\",\n        columnSelector_classHasSpan: \"hasSpan\",\n        columnSelector_updated: \"columnUpdate\"\n      },\n      init: function (e, t, o, l) {\n        S.init(e, o, l);\n      },\n      remove: function (e, t, o, l) {\n        var a = t.selector;\n        !l && a && (a && a.$container.empty(), a.$popup && a.$popup.empty(), a.$style.remove(), a.$breakpoints.remove(), h(t.namespace + \"columnselector\" + o.columnSelector_classHasSpan).removeClass(o.filter_filteredRow || \"filtered\"), t.$table.find(\"[data-col-span]\").each(function (e, t) {\n          var o = h(t);\n          o.attr(\"colspan\", o.attr(\"data-col-span\"));\n        }), t.$table.off(\"updateAll\" + c + \" update\" + c));\n      }\n    });\n  }(jQuery);\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/widgets/widget-columnSelector.min.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/widgets/widget-filter.min.js":
/*!***********************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/widgets/widget-filter.min.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  /*! Widget: filter - updated 2018-03-18 (v2.30.0) */\n  !function (M) {\n    \"use strict\";\n\n    var I,\n        D,\n        z = M.tablesorter || {},\n        _ = z.css,\n        o = z.keyCodes;\n    M.extend(_, {\n      filterRow: \"tablesorter-filter-row\",\n      filter: \"tablesorter-filter\",\n      filterDisabled: \"disabled\",\n      filterRowHide: \"hideme\"\n    }), M.extend(o, {\n      backSpace: 8,\n      escape: 27,\n      space: 32,\n      left: 37,\n      down: 40\n    }), z.addWidget({\n      id: \"filter\",\n      priority: 50,\n      options: {\n        filter_cellFilter: \"\",\n        filter_childRows: !1,\n        filter_childByColumn: !1,\n        filter_childWithSibs: !0,\n        filter_columnAnyMatch: !0,\n        filter_columnFilters: !0,\n        filter_cssFilter: \"\",\n        filter_defaultAttrib: \"data-value\",\n        filter_defaultFilter: {},\n        filter_excludeFilter: {},\n        filter_external: \"\",\n        filter_filteredRow: \"filtered\",\n        filter_filterLabel: 'Filter \"{{label}}\" column by...',\n        filter_formatter: null,\n        filter_functions: null,\n        filter_hideEmpty: !0,\n        filter_hideFilters: !1,\n        filter_ignoreCase: !0,\n        filter_liveSearch: !0,\n        filter_matchType: {\n          input: \"exact\",\n          select: \"exact\"\n        },\n        filter_onlyAvail: \"filter-onlyAvail\",\n        filter_placeholder: {\n          search: \"\",\n          select: \"\"\n        },\n        filter_reset: null,\n        filter_resetOnEsc: !0,\n        filter_saveFilters: !1,\n        filter_searchDelay: 300,\n        filter_searchFiltered: !0,\n        filter_selectSource: null,\n        filter_selectSourceSeparator: \"|\",\n        filter_serversideFiltering: !1,\n        filter_startsWith: !1,\n        filter_useParsedData: !1\n      },\n      format: function (e, t, r) {\n        t.$table.hasClass(\"hasFilters\") || I.init(e, t, r);\n      },\n      remove: function (e, t, r, i) {\n        var l,\n            a,\n            n = t.$table,\n            s = t.$tbodies,\n            o = \"addRows updateCell update updateRows updateComplete appendCache filterReset filterAndSortReset filterFomatterUpdate filterEnd search stickyHeadersInit \".split(\" \").join(t.namespace + \"filter \");\n\n        if (n.removeClass(\"hasFilters\").unbind(o.replace(z.regex.spaces, \" \")).find(\".\" + _.filterRow).remove(), r.filter_initialized = !1, !i) {\n          for (l = 0; l < s.length; l++) (a = z.processTbody(e, s.eq(l), !0)).children().removeClass(r.filter_filteredRow).show(), z.processTbody(e, a, !1);\n\n          r.filter_reset && M(document).undelegate(r.filter_reset, \"click\" + t.namespace + \"filter\");\n        }\n      }\n    }), D = (I = z.filter = {\n      regex: {\n        regex: /^\\/((?:\\\\\\/|[^\\/])+)\\/([migyu]{0,5})?$/,\n        child: /tablesorter-childRow/,\n        filtered: /filtered/,\n        type: /undefined|number/,\n        exact: /(^[\\\"\\'=]+)|([\\\"\\'=]+$)/g,\n        operators: /[<>=]/g,\n        query: \"(q|query)\",\n        wild01: /\\?/g,\n        wild0More: /\\*/g,\n        quote: /\\\"/g,\n        isNeg1: /(>=?\\s*-\\d)/,\n        isNeg2: /(<=?\\s*\\d)/\n      },\n      types: {\n        or: function (e, t, r) {\n          if (!D.orTest.test(t.iFilter) && !D.orSplit.test(t.filter) || D.regex.test(t.filter)) return null;\n          var i,\n              l,\n              a,\n              n = M.extend({}, t),\n              s = t.filter.split(D.orSplit),\n              o = t.iFilter.split(D.orSplit),\n              c = s.length;\n\n          for (i = 0; i < c; i++) {\n            n.nestedFilters = !0, n.filter = \"\" + (I.parseFilter(e, s[i], t) || \"\"), n.iFilter = \"\" + (I.parseFilter(e, o[i], t) || \"\"), a = \"(\" + (I.parseFilter(e, n.filter, t) || \"\") + \")\";\n\n            try {\n              if (l = new RegExp(t.isMatch ? a : \"^\" + a + \"$\", e.widgetOptions.filter_ignoreCase ? \"i\" : \"\").test(n.exact) || I.processTypes(e, n, r)) return l;\n            } catch (e) {\n              return null;\n            }\n          }\n\n          return l || !1;\n        },\n        and: function (e, t, r) {\n          if (D.andTest.test(t.filter)) {\n            var i,\n                l,\n                a,\n                n,\n                s = M.extend({}, t),\n                o = t.filter.split(D.andSplit),\n                c = t.iFilter.split(D.andSplit),\n                f = o.length;\n\n            for (i = 0; i < f; i++) {\n              s.nestedFilters = !0, s.filter = \"\" + (I.parseFilter(e, o[i], t) || \"\"), s.iFilter = \"\" + (I.parseFilter(e, c[i], t) || \"\"), n = (\"(\" + (I.parseFilter(e, s.filter, t) || \"\") + \")\").replace(D.wild01, \"\\\\S{1}\").replace(D.wild0More, \"\\\\S*\");\n\n              try {\n                a = new RegExp(t.isMatch ? n : \"^\" + n + \"$\", e.widgetOptions.filter_ignoreCase ? \"i\" : \"\").test(s.exact) || I.processTypes(e, s, r), l = 0 === i ? a : l && a;\n              } catch (e) {\n                return null;\n              }\n            }\n\n            return l || !1;\n          }\n\n          return null;\n        },\n        regex: function (e, t) {\n          if (D.regex.test(t.filter)) {\n            var r,\n                i = t.filter_regexCache[t.index] || D.regex.exec(t.filter),\n                l = i instanceof RegExp;\n\n            try {\n              l || (t.filter_regexCache[t.index] = i = new RegExp(i[1], i[2])), r = i.test(t.exact);\n            } catch (e) {\n              r = !1;\n            }\n\n            return r;\n          }\n\n          return null;\n        },\n        operators: function (e, t) {\n          if (D.operTest.test(t.iFilter) && \"\" !== t.iExact) {\n            var r,\n                i,\n                l,\n                a = e.table,\n                n = t.parsed[t.index],\n                s = z.formatFloat(t.iFilter.replace(D.operators, \"\"), a),\n                o = e.parsers[t.index] || {},\n                c = s;\n            return (n || \"numeric\" === o.type) && (l = M.trim(\"\" + t.iFilter.replace(D.operators, \"\")), s = \"number\" != typeof (i = I.parseFilter(e, l, t, !0)) || \"\" === i || isNaN(i) ? s : i), !n && \"numeric\" !== o.type || isNaN(s) || void 0 === t.cache ? (l = isNaN(t.iExact) ? t.iExact.replace(z.regex.nondigit, \"\") : t.iExact, r = z.formatFloat(l, a)) : r = t.cache, D.gtTest.test(t.iFilter) ? i = D.gteTest.test(t.iFilter) ? s <= r : s < r : D.ltTest.test(t.iFilter) && (i = D.lteTest.test(t.iFilter) ? r <= s : r < s), i || \"\" !== c || (i = !0), i;\n          }\n\n          return null;\n        },\n        notMatch: function (e, t) {\n          if (D.notTest.test(t.iFilter)) {\n            var r,\n                i = t.iFilter.replace(\"!\", \"\"),\n                l = I.parseFilter(e, i, t) || \"\";\n            return D.exact.test(l) ? \"\" === (l = l.replace(D.exact, \"\")) || M.trim(l) !== t.iExact : (r = t.iExact.search(M.trim(l)), \"\" === l || (t.anyMatch ? r < 0 : !(e.widgetOptions.filter_startsWith ? 0 === r : 0 <= r)));\n          }\n\n          return null;\n        },\n        exact: function (e, t) {\n          if (D.exact.test(t.iFilter)) {\n            var r = t.iFilter.replace(D.exact, \"\"),\n                i = I.parseFilter(e, r, t) || \"\";\n            return t.anyMatch ? 0 <= M.inArray(i, t.rowArray) : i == t.iExact;\n          }\n\n          return null;\n        },\n        range: function (e, t) {\n          if (D.toTest.test(t.iFilter)) {\n            var r,\n                i,\n                l,\n                a,\n                n = e.table,\n                s = t.index,\n                o = t.parsed[s],\n                c = t.iFilter.split(D.toSplit);\n            return i = c[0].replace(z.regex.nondigit, \"\") || \"\", l = z.formatFloat(I.parseFilter(e, i, t), n), i = c[1].replace(z.regex.nondigit, \"\") || \"\", a = z.formatFloat(I.parseFilter(e, i, t), n), (o || \"numeric\" === e.parsers[s].type) && (l = \"\" === (r = e.parsers[s].format(\"\" + c[0], n, e.$headers.eq(s), s)) || isNaN(r) ? l : r, a = \"\" === (r = e.parsers[s].format(\"\" + c[1], n, e.$headers.eq(s), s)) || isNaN(r) ? a : r), !o && \"numeric\" !== e.parsers[s].type || isNaN(l) || isNaN(a) ? (i = isNaN(t.iExact) ? t.iExact.replace(z.regex.nondigit, \"\") : t.iExact, r = z.formatFloat(i, n)) : r = t.cache, a < l && (i = l, l = a, a = i), l <= r && r <= a || \"\" === l || \"\" === a;\n          }\n\n          return null;\n        },\n        wild: function (e, t) {\n          if (D.wildOrTest.test(t.iFilter)) {\n            var r = \"\" + (I.parseFilter(e, t.iFilter, t) || \"\");\n            !D.wildTest.test(r) && t.nestedFilters && (r = t.isMatch ? r : \"^(\" + r + \")$\");\n\n            try {\n              return new RegExp(r.replace(D.wild01, \"\\\\S{1}\").replace(D.wild0More, \"\\\\S*\"), e.widgetOptions.filter_ignoreCase ? \"i\" : \"\").test(t.exact);\n            } catch (e) {\n              return null;\n            }\n          }\n\n          return null;\n        },\n        fuzzy: function (e, t) {\n          if (D.fuzzyTest.test(t.iFilter)) {\n            var r,\n                i = 0,\n                l = t.iExact.length,\n                a = t.iFilter.slice(1),\n                n = I.parseFilter(e, a, t) || \"\";\n\n            for (r = 0; r < l; r++) t.iExact[r] === n[i] && (i += 1);\n\n            return i === n.length;\n          }\n\n          return null;\n        }\n      },\n      init: function (r) {\n        z.language = M.extend(!0, {}, {\n          to: \"to\",\n          or: \"or\",\n          and: \"and\"\n        }, z.language);\n\n        var e,\n            t,\n            i,\n            l,\n            a,\n            n,\n            s,\n            o,\n            c = r.config,\n            f = c.widgetOptions,\n            d = function (e, t, r) {\n          return \"\" === (t = t.trim()) ? \"\" : (e || \"\") + t + (r || \"\");\n        };\n\n        if (c.$table.addClass(\"hasFilters\"), c.lastSearch = [], f.filter_searchTimer = null, f.filter_initTimer = null, f.filter_formatterCount = 0, f.filter_formatterInit = [], f.filter_anyColumnSelector = '[data-column=\"all\"],[data-column=\"any\"]', f.filter_multipleColumnSelector = '[data-column*=\"-\"],[data-column*=\",\"]', n = \"\\\\{\" + D.query + \"\\\\}\", M.extend(D, {\n          child: new RegExp(c.cssChildRow),\n          filtered: new RegExp(f.filter_filteredRow),\n          alreadyFiltered: new RegExp(\"(\\\\s+(-\" + d(\"|\", z.language.or) + d(\"|\", z.language.to) + \")\\\\s+)\", \"i\"),\n          toTest: new RegExp(\"\\\\s+(-\" + d(\"|\", z.language.to) + \")\\\\s+\", \"i\"),\n          toSplit: new RegExp(\"(?:\\\\s+(?:-\" + d(\"|\", z.language.to) + \")\\\\s+)\", \"gi\"),\n          andTest: new RegExp(\"\\\\s+(\" + d(\"\", z.language.and, \"|\") + \"&&)\\\\s+\", \"i\"),\n          andSplit: new RegExp(\"(?:\\\\s+(?:\" + d(\"\", z.language.and, \"|\") + \"&&)\\\\s+)\", \"gi\"),\n          orTest: new RegExp(\"(\\\\|\" + d(\"|\\\\s+\", z.language.or, \"\\\\s+\") + \")\", \"i\"),\n          orSplit: new RegExp(\"(?:\\\\|\" + d(\"|\\\\s+(?:\", z.language.or, \")\\\\s+\") + \")\", \"gi\"),\n          iQuery: new RegExp(n, \"i\"),\n          igQuery: new RegExp(n, \"ig\"),\n          operTest: /^[<>]=?/,\n          gtTest: />/,\n          gteTest: />=/,\n          ltTest: /</,\n          lteTest: /<=/,\n          notTest: /^\\!/,\n          wildOrTest: /[\\?\\*\\|]/,\n          wildTest: /\\?\\*/,\n          fuzzyTest: /^~/,\n          exactTest: /[=\\\"\\|!]/\n        }), n = c.$headers.filter(\".filter-false, .parser-false\").length, !1 !== f.filter_columnFilters && n !== c.$headers.length && I.buildRow(r, c, f), i = \"addRows updateCell update updateRows updateComplete appendCache filterReset \" + \"filterAndSortReset filterResetSaved filterEnd search \".split(\" \").join(c.namespace + \"filter \"), c.$table.bind(i, function (e, t) {\n          return n = f.filter_hideEmpty && M.isEmptyObject(c.cache) && !(c.delayInit && \"appendCache\" === e.type), c.$table.find(\".\" + _.filterRow).toggleClass(f.filter_filteredRow, n), /(search|filter)/.test(e.type) || (e.stopPropagation(), I.buildDefault(r, !0)), \"filterReset\" === e.type || \"filterAndSortReset\" === e.type ? (c.$table.find(\".\" + _.filter).add(f.filter_$externalFilters).val(\"\"), \"filterAndSortReset\" === e.type ? z.sortReset(this.config, function () {\n            I.searching(r, []);\n          }) : I.searching(r, [])) : \"filterResetSaved\" === e.type ? z.storage(r, \"tablesorter-filters\", \"\") : \"filterEnd\" === e.type ? I.buildDefault(r, !0) : (t = \"search\" === e.type ? t : \"updateComplete\" === e.type ? c.$table.data(\"lastSearch\") : \"\", /(update|add)/.test(e.type) && \"updateComplete\" !== e.type && (c.lastCombinedFilter = null, c.lastSearch = [], setTimeout(function () {\n            c.$table.triggerHandler(\"filterFomatterUpdate\");\n          }, 100)), I.searching(r, t, !0)), !1;\n        }), f.filter_reset && (f.filter_reset instanceof M ? f.filter_reset.click(function () {\n          c.$table.triggerHandler(\"filterReset\");\n        }) : M(f.filter_reset).length && M(document).undelegate(f.filter_reset, \"click\" + c.namespace + \"filter\").delegate(f.filter_reset, \"click\" + c.namespace + \"filter\", function () {\n          c.$table.triggerHandler(\"filterReset\");\n        })), f.filter_functions) for (a = 0; a < c.columns; a++) if (s = z.getColumnData(r, f.filter_functions, a)) if (o = !((l = c.$headerIndexed[a].removeClass(\"filter-select\")).hasClass(\"filter-false\") || l.hasClass(\"parser-false\")), !(e = \"\") === s && o) I.buildSelect(r, a);else if (\"object\" == typeof s && o) {\n          for (t in s) \"string\" == typeof t && (e += \"\" === e ? '<option value=\"\">' + (l.data(\"placeholder\") || l.attr(\"data-placeholder\") || f.filter_placeholder.select || \"\") + \"</option>\" : \"\", 0 <= (i = n = t).indexOf(f.filter_selectSourceSeparator) && (i = (n = t.split(f.filter_selectSourceSeparator))[1], n = n[0]), e += \"<option \" + (i === n ? \"\" : 'data-function-name=\"' + t + '\" ') + 'value=\"' + n + '\">' + i + \"</option>\");\n\n          c.$table.find(\"thead\").find(\"select.\" + _.filter + '[data-column=\"' + a + '\"]').append(e), (s = \"function\" == typeof (i = f.filter_selectSource) || z.getColumnData(r, i, a)) && I.buildSelect(c.table, a, \"\", !0, l.hasClass(f.filter_onlyAvail));\n        }\n        I.buildDefault(r, !0), I.bindSearch(r, c.$table.find(\".\" + _.filter), !0), f.filter_external && I.bindSearch(r, f.filter_external), f.filter_hideFilters && I.hideFilters(c), c.showProcessing && (i = \"filterStart filterEnd \".split(\" \").join(c.namespace + \"filter-sp \"), c.$table.unbind(i.replace(z.regex.spaces, \" \")).bind(i, function (e, t) {\n          l = t ? c.$table.find(\".\" + _.header).filter(\"[data-column]\").filter(function () {\n            return \"\" !== t[M(this).data(\"column\")];\n          }) : \"\", z.isProcessing(r, \"filterStart\" === e.type, t ? l : \"\");\n        })), c.filteredRows = c.totalRows, i = \"tablesorter-initialized pagerBeforeInitialized \".split(\" \").join(c.namespace + \"filter \"), c.$table.unbind(i.replace(z.regex.spaces, \" \")).bind(i, function () {\n          I.completeInit(this);\n        }), c.pager && c.pager.initialized && !f.filter_initialized ? (c.$table.triggerHandler(\"filterFomatterUpdate\"), setTimeout(function () {\n          I.filterInitComplete(c);\n        }, 100)) : f.filter_initialized || I.completeInit(r);\n      },\n      completeInit: function (e) {\n        var t = e.config,\n            r = t.widgetOptions,\n            i = I.setDefaults(e, t, r) || [];\n        i.length && (t.delayInit && \"\" === i.join(\"\") || z.setFilters(e, i, !0)), t.$table.triggerHandler(\"filterFomatterUpdate\"), setTimeout(function () {\n          r.filter_initialized || I.filterInitComplete(t);\n        }, 100);\n      },\n      formatterUpdated: function (e, t) {\n        var r = e && e.closest(\"table\"),\n            i = r.length && r[0].config,\n            l = i && i.widgetOptions;\n        l && !l.filter_initialized && (l.filter_formatterInit[t] = 1);\n      },\n      filterInitComplete: function (e) {\n        var t,\n            r,\n            i = e.widgetOptions,\n            l = 0,\n            a = function () {\n          i.filter_initialized = !0, e.lastSearch = e.$table.data(\"lastSearch\"), e.$table.triggerHandler(\"filterInit\", e), I.findRows(e.table, e.lastSearch || []), z.debug(e, \"filter\") && console.log(\"Filter >> Widget initialized\");\n        };\n\n        if (M.isEmptyObject(i.filter_formatter)) a();else {\n          for (r = i.filter_formatterInit.length, t = 0; t < r; t++) 1 === i.filter_formatterInit[t] && l++;\n\n          clearTimeout(i.filter_initTimer), i.filter_initialized || l !== i.filter_formatterCount ? i.filter_initialized || (i.filter_initTimer = setTimeout(function () {\n            a();\n          }, 500)) : a();\n        }\n      },\n      processFilters: function (e, t) {\n        var r,\n            i = [],\n            l = t ? encodeURIComponent : decodeURIComponent,\n            a = e.length;\n\n        for (r = 0; r < a; r++) e[r] && (i[r] = l(e[r]));\n\n        return i;\n      },\n      setDefaults: function (e, t, r) {\n        var i,\n            l,\n            a,\n            n,\n            s,\n            o = z.getFilters(e) || [];\n        if (r.filter_saveFilters && z.storage && (l = z.storage(e, \"tablesorter-filters\") || [], (i = M.isArray(l)) && \"\" === l.join(\"\") || !i || (o = I.processFilters(l))), \"\" === o.join(\"\")) for (s = t.$headers.add(r.filter_$externalFilters).filter(\"[\" + r.filter_defaultAttrib + \"]\"), a = 0; a <= t.columns; a++) n = a === t.columns ? \"all\" : a, o[a] = s.filter('[data-column=\"' + n + '\"]').attr(r.filter_defaultAttrib) || o[a] || \"\";\n        return t.$table.data(\"lastSearch\", o), o;\n      },\n      parseFilter: function (e, t, r, i) {\n        return i || r.parsed[r.index] ? e.parsers[r.index].format(t, e.table, [], r.index) : t;\n      },\n      buildRow: function (e, t, r) {\n        var i,\n            l,\n            a,\n            n,\n            s,\n            o,\n            c,\n            f,\n            d,\n            u = r.filter_cellFilter,\n            h = t.columns,\n            p = M.isArray(u),\n            g = '<tr role=\"search\" class=\"' + _.filterRow + \" \" + t.cssIgnoreRow + '\">';\n\n        for (a = 0; a < h; a++) t.$headerIndexed[a].length && (g += 1 < (d = t.$headerIndexed[a] && t.$headerIndexed[a][0].colSpan || 0) ? '<td data-column=\"' + a + \"-\" + (a + d - 1) + '\" colspan=\"' + d + '\"' : '<td data-column=\"' + a + '\"', g += p ? u[a] ? ' class=\"' + u[a] + '\"' : \"\" : \"\" !== u ? ' class=\"' + u + '\"' : \"\", g += \"></td>\");\n\n        for (t.$filters = M(g += \"</tr>\").appendTo(t.$table.children(\"thead\").eq(0)).children(\"td\"), a = 0; a < h; a++) o = !1, (n = t.$headerIndexed[a]) && n.length && (i = I.getColumnElm(t, t.$filters, a), f = z.getColumnData(e, r.filter_functions, a), s = r.filter_functions && f && \"function\" != typeof f || n.hasClass(\"filter-select\"), l = z.getColumnData(e, t.headers, a), o = \"false\" === z.getData(n[0], l, \"filter\") || \"false\" === z.getData(n[0], l, \"parser\"), s ? g = M(\"<select>\").appendTo(i) : ((f = z.getColumnData(e, r.filter_formatter, a)) ? (r.filter_formatterCount++, (g = f(i, a)) && 0 === g.length && (g = i.children(\"input\")), g && (0 === g.parent().length || g.parent().length && g.parent()[0] !== i[0]) && i.append(g)) : g = M('<input type=\"search\">').appendTo(i), g && (d = n.data(\"placeholder\") || n.attr(\"data-placeholder\") || r.filter_placeholder.search || \"\", g.attr(\"placeholder\", d))), g && (c = (M.isArray(r.filter_cssFilter) ? void 0 !== r.filter_cssFilter[a] && r.filter_cssFilter[a] || \"\" : r.filter_cssFilter) || \"\", g.addClass(_.filter + \" \" + c), (d = (c = r.filter_filterLabel).match(/{{([^}]+?)}}/g)) || (d = [\"{{label}}\"]), M.each(d, function (e, t) {\n          var r = new RegExp(t, \"g\"),\n              i = n.attr(\"data-\" + t.replace(/{{|}}/g, \"\")),\n              l = void 0 === i ? n.text() : i;\n          c = c.replace(r, M.trim(l));\n        }), g.attr({\n          \"data-column\": i.attr(\"data-column\"),\n          \"aria-label\": c\n        }), o && (g.attr(\"placeholder\", \"\").addClass(_.filterDisabled)[0].disabled = !0)));\n      },\n      bindSearch: function (l, e, t) {\n        if (l = M(l)[0], (e = M(e)).length) {\n          var r,\n              a = l.config,\n              n = a.widgetOptions,\n              i = a.namespace + \"filter\",\n              s = n.filter_$externalFilters;\n          !0 !== t && (r = n.filter_anyColumnSelector + \",\" + n.filter_multipleColumnSelector, n.filter_$anyMatch = e.filter(r), s && s.length ? n.filter_$externalFilters = n.filter_$externalFilters.add(e) : n.filter_$externalFilters = e, z.setFilters(l, a.$table.data(\"lastSearch\") || [], !1 === t)), r = \"keypress keyup keydown search change input \".split(\" \").join(i + \" \"), e.attr(\"data-lastSearchTime\", new Date().getTime()).unbind(r.replace(z.regex.spaces, \" \")).bind(\"keydown\" + i, function (e) {\n            if (e.which === o.escape && !l.config.widgetOptions.filter_resetOnEsc) return !1;\n          }).bind(\"keyup\" + i, function (e) {\n            n = l.config.widgetOptions;\n            var t = parseInt(M(this).attr(\"data-column\"), 10),\n                r = \"boolean\" == typeof n.filter_liveSearch ? n.filter_liveSearch : z.getColumnData(l, n.filter_liveSearch, t);\n            if (void 0 === r && (r = n.filter_liveSearch.fallback || !1), M(this).attr(\"data-lastSearchTime\", new Date().getTime()), e.which === o.escape) this.value = n.filter_resetOnEsc ? \"\" : a.lastSearch[t];else {\n              if (\"\" !== this.value && (\"number\" == typeof r && this.value.length < r || e.which !== o.enter && e.which !== o.backSpace && (e.which < o.space || e.which >= o.left && e.which <= o.down))) return;\n              if (!1 === r && \"\" !== this.value && e.which !== o.enter) return;\n            }\n            I.searching(l, !0, !0, t);\n          }).bind(\"search change keypress input blur \".split(\" \").join(i + \" \"), function (e) {\n            var t = parseInt(M(this).attr(\"data-column\"), 10),\n                r = e.type,\n                i = \"boolean\" == typeof n.filter_liveSearch ? n.filter_liveSearch : z.getColumnData(l, n.filter_liveSearch, t);\n            !l.config.widgetOptions.filter_initialized || e.which !== o.enter && \"search\" !== r && \"blur\" !== r && (\"change\" !== r && \"input\" !== r || !0 !== i && (!0 === i || \"INPUT\" === e.target.nodeName) || this.value === a.lastSearch[t]) || (e.preventDefault(), M(this).attr(\"data-lastSearchTime\", new Date().getTime()), I.searching(l, \"keypress\" !== r, !0, t));\n          });\n        }\n      },\n      searching: function (e, t, r, i) {\n        var l,\n            a = e.config.widgetOptions;\n        void 0 === i ? l = !1 : void 0 === (l = \"boolean\" == typeof a.filter_liveSearch ? a.filter_liveSearch : z.getColumnData(e, a.filter_liveSearch, i)) && (l = a.filter_liveSearch.fallback || !1), clearTimeout(a.filter_searchTimer), void 0 === t || !0 === t ? a.filter_searchTimer = setTimeout(function () {\n          I.checkFilters(e, t, r);\n        }, l ? a.filter_searchDelay : 10) : I.checkFilters(e, t, r);\n      },\n      equalFilters: function (e, t, r) {\n        var i,\n            l = [],\n            a = [],\n            n = e.columns + 1;\n\n        for (t = M.isArray(t) ? t : [], r = M.isArray(r) ? r : [], i = 0; i < n; i++) l[i] = t[i] || \"\", a[i] = r[i] || \"\";\n\n        return l.join(\",\") === a.join(\",\");\n      },\n      checkFilters: function (e, t, r) {\n        var i = e.config,\n            l = i.widgetOptions,\n            a = M.isArray(t),\n            n = a ? t : z.getFilters(e, !0),\n            s = n || [];\n        if (M.isEmptyObject(i.cache)) i.delayInit && (!i.pager || i.pager && i.pager.initialized) && z.updateCache(i, function () {\n          I.checkFilters(e, !1, r);\n        });else if (a && (z.setFilters(e, n, !1, !0 !== r), l.filter_initialized || (i.lastSearch = [], i.lastCombinedFilter = \"\")), l.filter_hideFilters && i.$table.find(\".\" + _.filterRow).triggerHandler(I.hideFiltersCheck(i) ? \"mouseleave\" : \"mouseenter\"), !I.equalFilters(i, i.lastSearch, s) || !1 === t) {\n          if (!1 === t && (i.lastCombinedFilter = \"\", i.lastSearch = []), n = n || [], n = Array.prototype.map ? n.map(String) : n.join(\"�\").split(\"�\"), l.filter_initialized && i.$table.triggerHandler(\"filterStart\", [n]), !i.showProcessing) return I.findRows(e, n, s), !1;\n          setTimeout(function () {\n            return I.findRows(e, n, s), !1;\n          }, 30);\n        }\n      },\n      hideFiltersCheck: function (e) {\n        if (\"function\" == typeof e.widgetOptions.filter_hideFilters) {\n          var t = e.widgetOptions.filter_hideFilters(e);\n          if (\"boolean\" == typeof t) return t;\n        }\n\n        return \"\" === z.getFilters(e.$table).join(\"\");\n      },\n      hideFilters: function (i, e) {\n        var l;\n        (e || i.$table).find(\".\" + _.filterRow).addClass(_.filterRowHide).bind(\"mouseenter mouseleave\", function (e) {\n          var t = e,\n              r = M(this);\n          clearTimeout(l), l = setTimeout(function () {\n            /enter|over/.test(t.type) ? r.removeClass(_.filterRowHide) : M(document.activeElement).closest(\"tr\")[0] !== r[0] && r.toggleClass(_.filterRowHide, I.hideFiltersCheck(i));\n          }, 200);\n        }).find(\"input, select\").bind(\"focus blur\", function (e) {\n          var t = e,\n              r = M(this).closest(\"tr\");\n          clearTimeout(l), l = setTimeout(function () {\n            clearTimeout(l), r.toggleClass(_.filterRowHide, I.hideFiltersCheck(i) && \"focus\" !== t.type);\n          }, 200);\n        });\n      },\n      defaultFilter: function (e, t) {\n        if (\"\" === e) return e;\n        var r = D.iQuery,\n            i = t.match(D.igQuery).length,\n            l = 1 < i ? M.trim(e).split(/\\s/) : [M.trim(e)],\n            a = l.length - 1,\n            n = 0,\n            s = t;\n\n        for (a < 1 && 1 < i && (l[1] = l[0]); r.test(s);) s = s.replace(r, l[n++] || \"\"), r.test(s) && n < a && \"\" !== (l[n] || \"\") && (s = t.replace(r, s));\n\n        return s;\n      },\n      getLatestSearch: function (e) {\n        return e ? e.sort(function (e, t) {\n          return M(t).attr(\"data-lastSearchTime\") - M(e).attr(\"data-lastSearchTime\");\n        }) : e || M();\n      },\n      findRange: function (e, t, r) {\n        var i,\n            l,\n            a,\n            n,\n            s,\n            o,\n            c,\n            f,\n            d,\n            u = [];\n        if (/^[0-9]+$/.test(t)) return [parseInt(t, 10)];\n        if (!r && /-/.test(t)) for (d = (l = t.match(/(\\d+)\\s*-\\s*(\\d+)/g)) ? l.length : 0, f = 0; f < d; f++) {\n          for (a = l[f].split(/\\s*-\\s*/), n = parseInt(a[0], 10) || 0, (s = parseInt(a[1], 10) || e.columns - 1) < n && (i = n, n = s, s = i), s >= e.columns && (s = e.columns - 1); n <= s; n++) u[u.length] = n;\n\n          t = t.replace(l[f], \"\");\n        }\n        if (!r && /,/.test(t)) for (d = (o = t.split(/\\s*,\\s*/)).length, c = 0; c < d; c++) \"\" !== o[c] && (f = parseInt(o[c], 10)) < e.columns && (u[u.length] = f);\n        if (!u.length) for (f = 0; f < e.columns; f++) u[u.length] = f;\n        return u;\n      },\n      getColumnElm: function (t, e, r) {\n        return e.filter(function () {\n          var e = I.findRange(t, M(this).attr(\"data-column\"));\n          return -1 < M.inArray(r, e);\n        });\n      },\n      multipleColumns: function (e, t) {\n        var r = e.widgetOptions,\n            i = r.filter_initialized || !t.filter(r.filter_anyColumnSelector).length,\n            l = M.trim(I.getLatestSearch(t).attr(\"data-column\") || \"\");\n        return I.findRange(e, l, !i);\n      },\n      processTypes: function (e, t, r) {\n        var i,\n            l = null,\n            a = null;\n\n        for (i in I.types) M.inArray(i, r.excludeMatch) < 0 && null === a && null !== (a = I.types[i](e, t, r)) && (t.matchedOn = i, l = a);\n\n        return l;\n      },\n      matchType: function (e, t) {\n        var r,\n            i = e.widgetOptions,\n            l = e.$headerIndexed[t];\n        return l.hasClass(\"filter-exact\") ? r = !1 : l.hasClass(\"filter-match\") ? r = !0 : (i.filter_columnFilters ? l = e.$filters.find(\".\" + _.filter).add(i.filter_$externalFilters).filter('[data-column=\"' + t + '\"]') : i.filter_$externalFilters && (l = i.filter_$externalFilters.filter('[data-column=\"' + t + '\"]')), r = !!l.length && \"match\" === e.widgetOptions.filter_matchType[(l[0].nodeName || \"\").toLowerCase()]), r;\n      },\n      processRow: function (t, r, e) {\n        var i,\n            l,\n            a,\n            n,\n            s,\n            o = t.widgetOptions,\n            c = !0,\n            f = o.filter_$anyMatch && o.filter_$anyMatch.length,\n            d = o.filter_$anyMatch && o.filter_$anyMatch.length ? I.multipleColumns(t, o.filter_$anyMatch) : [];\n\n        if (r.$cells = r.$row.children(), r.matchedOn = null, r.anyMatchFlag && 1 < d.length || r.anyMatchFilter && !f) {\n          if (r.anyMatch = !0, r.isMatch = !0, r.rowArray = r.$cells.map(function (e) {\n            if (-1 < M.inArray(e, d) || r.anyMatchFilter && !f) return r.parsed[e] ? s = r.cacheArray[e] : (s = r.rawArray[e], s = M.trim(o.filter_ignoreCase ? s.toLowerCase() : s), t.sortLocaleCompare && (s = z.replaceAccents(s))), s;\n          }).get(), r.filter = r.anyMatchFilter, r.iFilter = r.iAnyMatchFilter, r.exact = r.rowArray.join(\" \"), r.iExact = o.filter_ignoreCase ? r.exact.toLowerCase() : r.exact, r.cache = r.cacheArray.slice(0, -1).join(\" \"), e.excludeMatch = e.noAnyMatch, null !== (l = I.processTypes(t, r, e))) c = l;else if (o.filter_startsWith) for (c = !1, d = Math.min(t.columns, r.rowArray.length); !c && 0 < d;) d--, c = c || 0 === r.rowArray[d].indexOf(r.iFilter);else c = 0 <= (r.iExact + r.childRowText).indexOf(r.iFilter);\n          if (r.anyMatch = !1, r.filters.join(\"\") === r.filter) return c;\n        }\n\n        for (d = 0; d < t.columns; d++) r.filter = r.filters[d], r.index = d, e.excludeMatch = e.excludeFilter[d], r.filter && (r.cache = r.cacheArray[d], i = r.parsed[d] ? r.cache : r.rawArray[d] || \"\", r.exact = t.sortLocaleCompare ? z.replaceAccents(i) : i, r.iExact = !D.type.test(typeof r.exact) && o.filter_ignoreCase ? r.exact.toLowerCase() : r.exact, r.isMatch = I.matchType(t, d), i = c, n = o.filter_columnFilters && t.$filters.add(o.filter_$externalFilters).filter('[data-column=\"' + d + '\"]').find(\"select option:selected\").attr(\"data-function-name\") || \"\", t.sortLocaleCompare && (r.filter = z.replaceAccents(r.filter)), o.filter_defaultFilter && D.iQuery.test(e.defaultColFilter[d]) && (r.filter = I.defaultFilter(r.filter, e.defaultColFilter[d])), r.iFilter = o.filter_ignoreCase ? (r.filter || \"\").toLowerCase() : r.filter, l = null, (a = e.functions[d]) && (\"function\" == typeof a ? l = a(r.exact, r.cache, r.filter, d, r.$row, t, r) : \"function\" == typeof a[n || r.filter] && (l = a[s = n || r.filter](r.exact, r.cache, r.filter, d, r.$row, t, r))), null === l ? (l = I.processTypes(t, r, e), s = !0 === a && (\"and\" === r.matchedOn || \"or\" === r.matchedOn), null === l || s ? !0 === a ? i = r.isMatch ? 0 <= (\"\" + r.iExact).search(r.iFilter) : r.filter === r.exact : (s = (r.iExact + r.childRowText).indexOf(I.parseFilter(t, r.iFilter, r)), i = !o.filter_startsWith && 0 <= s || o.filter_startsWith && 0 === s) : i = l) : i = l, c = !!i && c);\n\n        return c;\n      },\n      findRows: function (e, r, t) {\n        if (!I.equalFilters(e.config, e.config.lastSearch, t) && e.config.widgetOptions.filter_initialized) {\n          var i,\n              l,\n              a,\n              n,\n              s,\n              o,\n              c,\n              f,\n              d,\n              u,\n              h,\n              p,\n              g,\n              m,\n              _,\n              y,\n              F,\n              w,\n              x,\n              b,\n              C,\n              v,\n              $,\n              S = M.extend([], r),\n              R = e.config,\n              T = R.widgetOptions,\n              A = z.debug(R, \"filter\"),\n              O = {\n            anyMatch: !1,\n            filters: r,\n            filter_regexCache: []\n          },\n              E = {\n            noAnyMatch: [\"range\", \"operators\"],\n            functions: [],\n            excludeFilter: [],\n            defaultColFilter: [],\n            defaultAnyFilter: z.getColumnData(e, T.filter_defaultFilter, R.columns, !0) || \"\"\n          };\n\n          for (O.parsed = [], d = 0; d < R.columns; d++) O.parsed[d] = T.filter_useParsedData || R.parsers && R.parsers[d] && R.parsers[d].parsed || z.getData && \"parsed\" === z.getData(R.$headerIndexed[d], z.getColumnData(e, R.headers, d), \"filter\") || R.$headerIndexed[d].hasClass(\"filter-parsed\"), E.functions[d] = z.getColumnData(e, T.filter_functions, d) || R.$headerIndexed[d].hasClass(\"filter-select\"), E.defaultColFilter[d] = z.getColumnData(e, T.filter_defaultFilter, d) || \"\", E.excludeFilter[d] = (z.getColumnData(e, T.filter_excludeFilter, d, !0) || \"\").split(/\\s+/);\n\n          for (A && (console.log(\"Filter >> Starting filter widget search\", r), m = new Date()), R.filteredRows = 0, t = S || [], c = R.totalRows = 0; c < R.$tbodies.length; c++) {\n            if (f = z.processTbody(e, R.$tbodies.eq(c), !0), d = R.columns, l = R.cache[c].normalized, n = M(M.map(l, function (e) {\n              return e[d].$row.get();\n            })), \"\" === t.join(\"\") || T.filter_serversideFiltering) n.removeClass(T.filter_filteredRow).not(\".\" + R.cssChildRow).css(\"display\", \"\");else {\n              if (i = (n = n.not(\".\" + R.cssChildRow)).length, (T.filter_$anyMatch && T.filter_$anyMatch.length || void 0 !== r[R.columns]) && (O.anyMatchFlag = !0, O.anyMatchFilter = \"\" + (r[R.columns] || T.filter_$anyMatch && I.getLatestSearch(T.filter_$anyMatch).val() || \"\"), T.filter_columnAnyMatch)) {\n                for (x = O.anyMatchFilter.split(D.andSplit), b = !1, y = 0; y < x.length; y++) 1 < (C = x[y].split(\":\")).length && (isNaN(C[0]) ? M.each(R.headerContent, function (e, t) {\n                  -1 < t.toLowerCase().indexOf(C[0]) && (r[v = e] = C[1]);\n                }) : v = parseInt(C[0], 10) - 1, 0 <= v && v < R.columns && (r[v] = C[1], x.splice(y, 1), y--, b = !0));\n\n                b && (O.anyMatchFilter = x.join(\" && \"));\n              }\n\n              if (w = T.filter_searchFiltered, h = R.lastSearch || R.$table.data(\"lastSearch\") || [], w) for (y = 0; y < d + 1; y++) _ = r[y] || \"\", w || (y = d), w = w && h.length && 0 === _.indexOf(h[y] || \"\") && !D.alreadyFiltered.test(_) && !D.exactTest.test(_) && !(D.isNeg1.test(_) || D.isNeg2.test(_)) && !(\"\" !== _ && R.$filters && R.$filters.filter('[data-column=\"' + y + '\"]').find(\"select\").length && !I.matchType(R, y));\n\n              for (F = n.not(\".\" + T.filter_filteredRow).length, w && 0 === F && (w = !1), A && console.log(\"Filter >> Searching through \" + (w && F < i ? F : \"all\") + \" rows\"), O.anyMatchFlag && (R.sortLocaleCompare && (O.anyMatchFilter = z.replaceAccents(O.anyMatchFilter)), T.filter_defaultFilter && D.iQuery.test(E.defaultAnyFilter) && (O.anyMatchFilter = I.defaultFilter(O.anyMatchFilter, E.defaultAnyFilter), w = !1), O.iAnyMatchFilter = T.filter_ignoreCase && R.ignoreCase ? O.anyMatchFilter.toLowerCase() : O.anyMatchFilter), o = 0; o < i; o++) if ($ = n[o].className, !(o && D.child.test($) || w && D.filtered.test($))) {\n                if (O.$row = n.eq(o), O.rowIndex = o, O.cacheArray = l[o], a = O.cacheArray[R.columns], O.rawArray = a.raw, O.childRowText = \"\", !T.filter_childByColumn) {\n                  for ($ = \"\", u = a.child, y = 0; y < u.length; y++) $ += \" \" + u[y].join(\" \") || \"\";\n\n                  O.childRowText = T.filter_childRows ? T.filter_ignoreCase ? $.toLowerCase() : $ : \"\";\n                }\n\n                if (p = !1, g = I.processRow(R, O, E), s = a.$row, _ = !!g, u = a.$row.filter(\":gt(0)\"), T.filter_childRows && u.length) {\n                  if (T.filter_childByColumn) for (T.filter_childWithSibs || (u.addClass(T.filter_filteredRow), s = s.eq(0)), y = 0; y < u.length; y++) O.$row = u.eq(y), O.cacheArray = a.child[y], O.rawArray = O.cacheArray, _ = I.processRow(R, O, E), p = p || _, !T.filter_childWithSibs && _ && u.eq(y).removeClass(T.filter_filteredRow);\n                  p = p || g;\n                } else p = _;\n\n                s.toggleClass(T.filter_filteredRow, !p)[0].display = p ? \"\" : \"none\";\n              }\n            }\n            R.filteredRows += n.not(\".\" + T.filter_filteredRow).length, R.totalRows += n.length, z.processTbody(e, f, !1);\n          }\n\n          R.lastCombinedFilter = S.join(\"\"), R.lastSearch = S, R.$table.data(\"lastSearch\", S), T.filter_saveFilters && z.storage && z.storage(e, \"tablesorter-filters\", I.processFilters(S, !0)), A && console.log(\"Filter >> Completed search\" + z.benchmark(m)), T.filter_initialized && (R.$table.triggerHandler(\"filterBeforeEnd\", R), R.$table.triggerHandler(\"filterEnd\", R)), setTimeout(function () {\n            z.applyWidget(R.table);\n          }, 0);\n        }\n      },\n      getOptionSource: function (e, t, r) {\n        var i = (e = M(e)[0]).config,\n            l = !1,\n            a = i.widgetOptions.filter_selectSource,\n            n = i.$table.data(\"lastSearch\") || [],\n            s = \"function\" == typeof a || z.getColumnData(e, a, t);\n        if (r && \"\" !== n[t] && (r = !1), !0 === s) l = a(e, t, r);else {\n          if (s instanceof M || \"string\" === M.type(s) && 0 <= s.indexOf(\"</option>\")) return s;\n          if (M.isArray(s)) l = s;else if (\"object\" === M.type(a) && s && null === (l = s(e, t, r))) return null;\n        }\n        return !1 === l && (l = I.getOptions(e, t, r)), I.processOptions(e, t, l);\n      },\n      processOptions: function (l, a, r) {\n        if (!M.isArray(r)) return !1;\n        var n,\n            e,\n            t,\n            i,\n            s,\n            o,\n            c = (l = M(l)[0]).config,\n            f = null != a && 0 <= a && a < c.columns,\n            d = !!f && c.$headerIndexed[a].hasClass(\"filter-select-sort-desc\"),\n            u = [];\n        if (r = M.grep(r, function (e, t) {\n          return !!e.text || M.inArray(e, r) === t;\n        }), f && c.$headerIndexed[a].hasClass(\"filter-select-nosort\")) return r;\n\n        for (i = r.length, t = 0; t < i; t++) o = (e = r[t]).text ? e.text : e, s = (f && c.parsers && c.parsers.length && c.parsers[a].format(o, l, [], a) || o).toString(), s = c.widgetOptions.filter_ignoreCase ? s.toLowerCase() : s, e.text ? (e.parsed = s, u[u.length] = e) : u[u.length] = {\n          text: e,\n          parsed: s\n        };\n\n        for (n = c.textSorter || \"\", u.sort(function (e, t) {\n          var r = d ? t.parsed : e.parsed,\n              i = d ? e.parsed : t.parsed;\n          return f && \"function\" == typeof n ? n(r, i, !0, a, l) : f && \"object\" == typeof n && n.hasOwnProperty(a) ? n[a](r, i, !0, a, l) : !z.sortNatural || z.sortNatural(r, i);\n        }), r = [], i = u.length, t = 0; t < i; t++) r[r.length] = u[t];\n\n        return r;\n      },\n      getOptions: function (e, t, r) {\n        var i,\n            l,\n            a,\n            n,\n            s,\n            o,\n            c,\n            f,\n            d = (e = M(e)[0]).config,\n            u = d.widgetOptions,\n            h = [];\n\n        for (l = 0; l < d.$tbodies.length; l++) for (s = d.cache[l], a = d.cache[l].normalized.length, i = 0; i < a; i++) if (n = s.row ? s.row[i] : s.normalized[i][d.columns].$row[0], !r || !n.className.match(u.filter_filteredRow)) if (u.filter_useParsedData || d.parsers[t].parsed || d.$headerIndexed[t].hasClass(\"filter-parsed\")) {\n          if (h[h.length] = \"\" + s.normalized[i][t], u.filter_childRows && u.filter_childByColumn) for (f = s.normalized[i][d.columns].$row.length - 1, o = 0; o < f; o++) h[h.length] = \"\" + s.normalized[i][d.columns].child[o][t];\n        } else if (h[h.length] = s.normalized[i][d.columns].raw[t], u.filter_childRows && u.filter_childByColumn) for (f = s.normalized[i][d.columns].$row.length, o = 1; o < f; o++) c = s.normalized[i][d.columns].$row.eq(o).children().eq(t), h[h.length] = \"\" + z.getElementText(d, c, t);\n\n        return h;\n      },\n      buildSelect: function (e, t, r, i, l) {\n        if (e = M(e)[0], t = parseInt(t, 10), e.config.cache && !M.isEmptyObject(e.config.cache)) {\n          var a,\n              n,\n              s,\n              o,\n              c,\n              f,\n              d,\n              u = e.config,\n              h = u.widgetOptions,\n              p = u.$headerIndexed[t],\n              g = '<option value=\"\">' + (p.data(\"placeholder\") || p.attr(\"data-placeholder\") || h.filter_placeholder.select || \"\") + \"</option>\",\n              m = u.$table.find(\"thead\").find(\"select.\" + _.filter + '[data-column=\"' + t + '\"]').val();\n\n          if (void 0 !== r && \"\" !== r || null !== (r = I.getOptionSource(e, t, l))) {\n            if (M.isArray(r)) {\n              for (a = 0; a < r.length; a++) if ((d = r[a]).text) {\n                for (n in d[\"data-function-name\"] = void 0 === d.value ? d.text : d.value, g += \"<option\", d) d.hasOwnProperty(n) && \"text\" !== n && (g += \" \" + n + '=\"' + d[n].replace(D.quote, \"&quot;\") + '\"');\n\n                d.value || (g += ' value=\"' + d.text.replace(D.quote, \"&quot;\") + '\"'), g += \">\" + d.text.replace(D.quote, \"&quot;\") + \"</option>\";\n              } else \"\" + d != \"[object Object]\" && (0 <= (n = s = d = (\"\" + d).replace(D.quote, \"&quot;\")).indexOf(h.filter_selectSourceSeparator) && (n = (o = s.split(h.filter_selectSourceSeparator))[0], s = o[1]), g += \"\" !== d ? \"<option \" + (n === s ? \"\" : 'data-function-name=\"' + d + '\" ') + 'value=\"' + n + '\">' + s + \"</option>\" : \"\");\n\n              r = [];\n            }\n\n            c = (u.$filters ? u.$filters : u.$table.children(\"thead\")).find(\".\" + _.filter), h.filter_$externalFilters && (c = c && c.length ? c.add(h.filter_$externalFilters) : h.filter_$externalFilters), (f = c.filter('select[data-column=\"' + t + '\"]')).length && (f[i ? \"html\" : \"append\"](g), M.isArray(r) || f.append(r).val(m), f.val(m));\n          }\n        }\n      },\n      buildDefault: function (e, t) {\n        var r,\n            i,\n            l,\n            a = e.config,\n            n = a.widgetOptions,\n            s = a.columns;\n\n        for (r = 0; r < s; r++) l = !((i = a.$headerIndexed[r]).hasClass(\"filter-false\") || i.hasClass(\"parser-false\")), (i.hasClass(\"filter-select\") || !0 === z.getColumnData(e, n.filter_functions, r)) && l && I.buildSelect(e, r, \"\", t, i.hasClass(n.filter_onlyAvail));\n      }\n    }).regex, z.getFilters = function (e, t, r, i) {\n      var l,\n          a,\n          n,\n          s,\n          o = [],\n          c = e ? M(e)[0].config : \"\",\n          f = c ? c.widgetOptions : \"\";\n      if (!0 !== t && f && !f.filter_columnFilters || M.isArray(r) && I.equalFilters(c, r, c.lastSearch)) return M(e).data(\"lastSearch\") || [];\n      if (c && (c.$filters && (a = c.$filters.find(\".\" + _.filter)), f.filter_$externalFilters && (a = a && a.length ? a.add(f.filter_$externalFilters) : f.filter_$externalFilters), a && a.length)) for (o = r || [], l = 0; l < c.columns + 1; l++) s = l === c.columns ? f.filter_anyColumnSelector + \",\" + f.filter_multipleColumnSelector : '[data-column=\"' + l + '\"]', (n = a.filter(s)).length && (n = I.getLatestSearch(n), M.isArray(r) ? (i && 1 < n.length && (n = n.slice(1)), l === c.columns && (n = (s = n.filter(f.filter_anyColumnSelector)).length ? s : n), n.val(r[l]).trigger(\"change\" + c.namespace)) : (o[l] = n.val() || \"\", l === c.columns ? n.slice(1).filter('[data-column*=\"' + n.attr(\"data-column\") + '\"]').val(o[l]) : n.slice(1).val(o[l])), l === c.columns && n.length && (f.filter_$anyMatch = n));\n      return o;\n    }, z.setFilters = function (e, t, r, i) {\n      var l = e ? M(e)[0].config : \"\",\n          a = z.getFilters(e, !0, t, i);\n      return void 0 === r && (r = !0), l && r && (l.lastCombinedFilter = null, l.lastSearch = [], I.searching(l.table, t, i), l.$table.triggerHandler(\"filterFomatterUpdate\")), 0 !== a.length;\n    };\n  }(jQuery);\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/widgets/widget-filter.min.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/widgets/widget-saveSort.min.js":
/*!*************************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/widgets/widget-saveSort.min.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  /*! Widget: saveSort - updated 2018-03-19 (v2.30.1) */\n  !function (o) {\n    \"use strict\";\n\n    var v = o.tablesorter || {};\n\n    function g(t) {\n      var s = v.storage(t.table, \"tablesorter-savesort\");\n      return s && s.hasOwnProperty(\"sortList\") && o.isArray(s.sortList) ? s.sortList : [];\n    }\n\n    function S(t, s) {\n      return (s || g(t)).join(\",\") !== t.sortList.join(\",\");\n    }\n\n    v.addWidget({\n      id: \"saveSort\",\n      priority: 20,\n      options: {\n        saveSort: !0\n      },\n      init: function (t, s, o, r) {\n        s.format(t, o, r, !0);\n      },\n      format: function (s, t, o, r) {\n        var a,\n            e = t.$table,\n            i = !1 !== o.saveSort,\n            n = {\n          sortList: t.sortList\n        },\n            l = v.debug(t, \"saveSort\");\n        l && (a = new Date()), e.hasClass(\"hasSaveSort\") ? i && s.hasInitialized && v.storage && S(t) && (v.storage(s, \"tablesorter-savesort\", n), l && console.log(\"saveSort >> Saving last sort: \" + t.sortList + v.benchmark(a))) : (e.addClass(\"hasSaveSort\"), n = \"\", v.storage && (n = g(t), l && console.log('saveSort >> Last sort loaded: \"' + n + '\"' + v.benchmark(a)), e.bind(\"saveSortReset\", function (t) {\n          t.stopPropagation(), v.storage(s, \"tablesorter-savesort\", \"\");\n        })), r && n && 0 < n.length ? t.sortList = n : s.hasInitialized && n && 0 < n.length && S(t, n) && v.sortOn(t, n));\n      },\n      remove: function (t, s) {\n        s.$table.removeClass(\"hasSaveSort\"), v.storage && v.storage(t, \"tablesorter-savesort\", \"\");\n      }\n    });\n  }(jQuery);\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/widgets/widget-saveSort.min.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/widgets/widget-stickyHeaders.min.js":
/*!******************************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/widgets/widget-stickyHeaders.min.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  /*! Widget: stickyHeaders - updated 9/27/2017 (v2.29.0) */\n  !function (T, w) {\n    \"use strict\";\n\n    var S = T.tablesorter || {};\n\n    function x(e, s) {\n      var t = isNaN(s.stickyHeaders_offset) ? T(s.stickyHeaders_offset) : [];\n      return t.length ? t.height() || 0 : parseInt(s.stickyHeaders_offset, 10) || 0;\n    }\n\n    T.extend(S.css, {\n      sticky: \"tablesorter-stickyHeader\",\n      stickyVis: \"tablesorter-sticky-visible\",\n      stickyHide: \"tablesorter-sticky-hidden\",\n      stickyWrap: \"tablesorter-sticky-wrapper\"\n    }), S.addHeaderResizeEvent = function (e, s, t) {\n      if ((e = T(e)[0]).config) {\n        var i = T.extend({}, {\n          timer: 250\n        }, t),\n            c = e.config,\n            l = c.widgetOptions,\n            r = function (e) {\n          var s,\n              t,\n              i,\n              r,\n              a,\n              d,\n              n = c.$headers.length;\n\n          for (l.resize_flag = !0, t = [], s = 0; s < n; s++) r = (i = c.$headers.eq(s)).data(\"savedSizes\") || [0, 0], a = i[0].offsetWidth, d = i[0].offsetHeight, a === r[0] && d === r[1] || (i.data(\"savedSizes\", [a, d]), t.push(i[0]));\n\n          t.length && !1 !== e && c.$table.triggerHandler(\"resize\", [t]), l.resize_flag = !1;\n        };\n\n        if (clearInterval(l.resize_timer), s) return l.resize_flag = !1;\n        r(!1), l.resize_timer = setInterval(function () {\n          l.resize_flag || r();\n        }, i.timer);\n      }\n    }, S.addWidget({\n      id: \"stickyHeaders\",\n      priority: 54,\n      options: {\n        stickyHeaders: \"\",\n        stickyHeaders_appendTo: null,\n        stickyHeaders_attachTo: null,\n        stickyHeaders_xScroll: null,\n        stickyHeaders_yScroll: null,\n        stickyHeaders_offset: 0,\n        stickyHeaders_filteredToTop: !0,\n        stickyHeaders_cloneId: \"-sticky\",\n        stickyHeaders_addResizeEvent: !0,\n        stickyHeaders_includeCaption: !0,\n        stickyHeaders_zIndex: 2\n      },\n      format: function (e, t, y) {\n        if (!(t.$table.hasClass(\"hasStickyHeaders\") || 0 <= T.inArray(\"filter\", t.widgets) && !t.$table.hasClass(\"hasFilters\"))) {\n          var s,\n              i,\n              r,\n              a,\n              k = t.$table,\n              g = T(y.stickyHeaders_attachTo || y.stickyHeaders_appendTo),\n              d = t.namespace + \"stickyheaders \",\n              H = T(y.stickyHeaders_yScroll || y.stickyHeaders_attachTo || w),\n              n = T(y.stickyHeaders_xScroll || y.stickyHeaders_attachTo || w),\n              c = k.children(\"thead:first\").children(\"tr\").not(\".sticky-false\").children(),\n              u = k.children(\"tfoot\"),\n              l = x(0, y),\n              b = k.parent().closest(\".\" + S.css.table).hasClass(\"hasStickyHeaders\") ? k.parent().closest(\"table.tablesorter\")[0].config.widgetOptions.$sticky.parent() : [],\n              _ = b.length ? b.height() : 0,\n              o = y.$sticky = k.clone().addClass(\"containsStickyHeaders \" + S.css.sticky + \" \" + y.stickyHeaders + \" \" + t.namespace.slice(1) + \"_extra_table\").wrap('<div class=\"' + S.css.stickyWrap + '\">'),\n              v = o.parent().addClass(S.css.stickyHide).css({\n            position: g.length ? \"absolute\" : \"fixed\",\n            padding: parseInt(o.parent().parent().css(\"padding-left\"), 10),\n            top: l + _,\n            left: 0,\n            visibility: \"hidden\",\n            zIndex: y.stickyHeaders_zIndex || 2\n          }),\n              p = o.children(\"thead:first\"),\n              m = \"\",\n              f = function (e, s) {\n            var t,\n                i,\n                r,\n                a,\n                d,\n                n = e.filter(\":visible\"),\n                c = n.length;\n\n            for (t = 0; t < c; t++) a = s.filter(\":visible\").eq(t), \"border-box\" === (d = n.eq(t)).css(\"box-sizing\") ? i = d.outerWidth() : \"collapse\" === a.css(\"border-collapse\") ? w.getComputedStyle ? i = parseFloat(w.getComputedStyle(d[0], null).width) : (r = parseFloat(d.css(\"border-width\")), i = d.outerWidth() - parseFloat(d.css(\"padding-left\")) - parseFloat(d.css(\"padding-right\")) - r) : i = d.width(), a.css({\n              width: i,\n              \"min-width\": i,\n              \"max-width\": i\n            });\n          },\n              z = function (e) {\n            return !1 === e && b.length ? k.position().left : g.length ? parseInt(g.css(\"padding-left\"), 10) || 0 : k.offset().left - parseInt(k.css(\"margin-left\"), 10) - T(w).scrollLeft();\n          },\n              C = function () {\n            v.css({\n              left: z(),\n              width: k.outerWidth()\n            }), f(k, o), f(c, a);\n          },\n              h = function (e) {\n            if (k.is(\":visible\")) {\n              _ = b.length ? b.offset().top - H.scrollTop() + b.height() : 0;\n              var s,\n                  t = k.offset(),\n                  i = x(0, y),\n                  r = T.isWindow(H[0]),\n                  a = r ? H.scrollTop() : b.length ? parseInt(b[0].style.top, 10) : H.offset().top,\n                  d = g.length ? a : H.scrollTop(),\n                  n = y.stickyHeaders_includeCaption ? 0 : k.children(\"caption\").height() || 0,\n                  c = d + i + _ - n,\n                  l = k.height() - (v.height() + (u.height() || 0)) - n,\n                  o = c > t.top && c < t.top + l ? \"visible\" : \"hidden\",\n                  p = \"visible\" === o ? S.css.stickyVis : S.css.stickyHide,\n                  f = !v.hasClass(p),\n                  h = {\n                visibility: o\n              };\n              g.length && (f = !0, h.top = r ? c - g.offset().top : g.scrollTop()), (s = z(r)) !== parseInt(v.css(\"left\"), 10) && (f = !0, h.left = s), h.top = (h.top || 0) + (!r && b.length ? b.height() : i + _), f && v.removeClass(S.css.stickyVis + \" \" + S.css.stickyHide).addClass(p).css(h), (o !== m || e) && (C(), m = o);\n            }\n          };\n\n          if (g.length && !g.css(\"position\") && g.css(\"position\", \"relative\"), o.attr(\"id\") && (o[0].id += y.stickyHeaders_cloneId), o.find(\"> thead:gt(0), tr.sticky-false\").hide(), o.find(\"> tbody, > tfoot\").remove(), o.find(\"caption\").toggle(y.stickyHeaders_includeCaption), a = p.children().children(), o.css({\n            height: 0,\n            width: 0,\n            margin: 0\n          }), a.find(\".\" + S.css.resizer).remove(), k.addClass(\"hasStickyHeaders\").bind(\"pagerComplete\" + d, function () {\n            C();\n          }), S.bindEvents(e, p.children().children(\".\" + S.css.header)), y.stickyHeaders_appendTo ? T(y.stickyHeaders_appendTo).append(v) : k.after(v), t.onRenderHeader) for (i = (r = p.children(\"tr\").children()).length, s = 0; s < i; s++) t.onRenderHeader.apply(r.eq(s), [s, t, o]);\n          n.add(H).unbind(\"scroll resize \".split(\" \").join(d).replace(/\\s+/g, \" \")).bind(\"scroll resize \".split(\" \").join(d), function (e) {\n            h(\"resize\" === e.type);\n          }), t.$table.unbind(\"stickyHeadersUpdate\" + d).bind(\"stickyHeadersUpdate\" + d, function () {\n            h(!0);\n          }), y.stickyHeaders_addResizeEvent && S.addHeaderResizeEvent(e), k.hasClass(\"hasFilters\") && y.filter_columnFilters && (k.bind(\"filterEnd\" + d, function () {\n            var e = T(document.activeElement).closest(\"td\"),\n                s = e.parent().children().index(e);\n            v.hasClass(S.css.stickyVis) && y.stickyHeaders_filteredToTop && (w.scrollTo(0, k.position().top), 0 <= s && t.$filters && t.$filters.eq(s).find(\"a, select, input\").filter(\":visible\").focus());\n          }), S.filter.bindSearch(k, a.find(\".\" + S.css.filter)), y.filter_hideFilters && S.filter.hideFilters(t, o)), y.stickyHeaders_addResizeEvent && k.bind(\"resize\" + t.namespace + \"stickyheaders\", function () {\n            C();\n          }), h(!0), k.triggerHandler(\"stickyHeadersInit\");\n        }\n      },\n      remove: function (e, s, t) {\n        var i = s.namespace + \"stickyheaders \";\n        s.$table.removeClass(\"hasStickyHeaders\").unbind(\"pagerComplete resize filterEnd stickyHeadersUpdate \".split(\" \").join(i).replace(/\\s+/g, \" \")).next(\".\" + S.css.stickyWrap).remove(), t.$sticky && t.$sticky.length && t.$sticky.remove(), T(w).add(t.stickyHeaders_xScroll).add(t.stickyHeaders_yScroll).add(t.stickyHeaders_attachTo).unbind(\"scroll resize \".split(\" \").join(i).replace(/\\s+/g, \" \")), S.addHeaderResizeEvent(e, !0);\n      }\n    });\n  }(jQuery, window);\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/widgets/widget-stickyHeaders.min.js?");

/***/ }),

/***/ "./node_modules/tablesorter/dist/js/widgets/widget-storage.min.js":
/*!************************************************************************!*\
  !*** ./node_modules/tablesorter/dist/js/widgets/widget-storage.min.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function (jQuery) {\n  /*! Widget: storage - updated 2018-03-18 (v2.30.0) */\n  !function (m, y, O) {\n    \"use strict\";\n\n    var w = m.tablesorter || {};\n    m.extend(!0, w.defaults, {\n      fixedUrl: \"\",\n      widgetOptions: {\n        storage_fixedUrl: \"\",\n        storage_group: \"\",\n        storage_page: \"\",\n        storage_storageType: \"\",\n        storage_tableId: \"\",\n        storage_useSessionStorage: \"\"\n      }\n    }), w.storage = function (e, t, r, o) {\n      var s,\n          a,\n          i,\n          g = !1,\n          n = {},\n          p = (e = m(e)[0]).config,\n          l = p && p.widgetOptions,\n          d = w.debug(p, \"storage\"),\n          u = (o && o.storageType || l && l.storage_storageType).toString().charAt(0).toLowerCase(),\n          S = u ? \"\" : o && o.useSessionStorage || l && l.storage_useSessionStorage,\n          c = m(e),\n          _ = o && o.id || c.attr(o && o.group || l && l.storage_group || \"data-table-group\") || l && l.storage_tableId || e.id || m(\".tablesorter\").index(c),\n          f = o && o.url || c.attr(o && o.page || l && l.storage_page || \"data-table-page\") || l && l.storage_fixedUrl || p && p.fixedUrl || y.location.pathname;\n\n      if (\"c\" !== u && (u = \"s\" === u || S ? \"sessionStorage\" : \"localStorage\") in y) try {\n        y[u].setItem(\"_tmptest\", \"temp\"), g = !0, y[u].removeItem(\"_tmptest\");\n      } catch (e) {\n        console.warn(u + \" is not supported in this browser\");\n      }\n      if (d && console.log(\"Storage >> Using\", g ? u : \"cookies\"), m.parseJSON && (g ? n = m.parseJSON(y[u][t] || \"null\") || {} : (a = O.cookie.split(/[;\\s|=]/), n = 0 !== (s = m.inArray(t, a) + 1) && m.parseJSON(a[s] || \"null\") || {})), void 0 === r || !y.JSON || !JSON.hasOwnProperty(\"stringify\")) return n && n[f] ? n[f][_] : \"\";\n      n[f] || (n[f] = {}), n[f][_] = r, g ? y[u][t] = JSON.stringify(n) : ((i = new Date()).setTime(i.getTime() + 31536e6), O.cookie = t + \"=\" + JSON.stringify(n).replace(/\\\"/g, '\"') + \"; expires=\" + i.toGMTString() + \"; path=/\");\n    };\n  }(jQuery, window, document);\n  return jQuery;\n});\n\n//# sourceURL=webpack:///./node_modules/tablesorter/dist/js/widgets/widget-storage.min.js?");

/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var scope = typeof global !== \"undefined\" && global || typeof self !== \"undefined\" && self || window;\nvar apply = Function.prototype.apply; // DOM APIs, for completeness\n\nexports.setTimeout = function () {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\n\nexports.setInterval = function () {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\n\nexports.clearTimeout = exports.clearInterval = function (timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\n\nTimeout.prototype.unref = Timeout.prototype.ref = function () {};\n\nTimeout.prototype.close = function () {\n  this._clearFn.call(scope, this._id);\n}; // Does not start the time, just sets up the members needed.\n\n\nexports.enroll = function (item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function (item) {\n  clearTimeout(item._idleTimeoutId);\n  var msecs = item._idleTimeout;\n\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout) item._onTimeout();\n    }, msecs);\n  }\n}; // setimmediate attaches itself to the global object\n\n\n__webpack_require__(/*! setimmediate */ \"./node_modules/setimmediate/setImmediate.js\"); // On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\n\n\nexports.setImmediate = typeof self !== \"undefined\" && self.setImmediate || typeof global !== \"undefined\" && global.setImmediate || this && this.setImmediate;\nexports.clearImmediate = typeof self !== \"undefined\" && self.clearImmediate || typeof global !== \"undefined\" && global.clearImmediate || this && this.clearImmediate;\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./node_modules/timers-browserify/main.js?");

/***/ }),

/***/ "./node_modules/vue-async-computed/dist/vue-async-computed.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-async-computed/dist/vue-async-computed.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n(function (global, factory) {\n  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n})(this, function () {\n  'use strict';\n\n  function isComputedLazy(item) {\n    return item.hasOwnProperty('lazy') && item.lazy;\n  }\n\n  function isLazyActive(vm, key) {\n    return vm[lazyActivePrefix + key];\n  }\n\n  var lazyActivePrefix = 'async_computed$lazy_active$',\n      lazyDataPrefix = 'async_computed$lazy_data$';\n\n  function initLazy(data, key) {\n    data[lazyActivePrefix + key] = false;\n    data[lazyDataPrefix + key] = null;\n  }\n\n  function makeLazyComputed(key) {\n    return {\n      get: function get() {\n        this[lazyActivePrefix + key] = true;\n        return this[lazyDataPrefix + key];\n      },\n      set: function set(value) {\n        this[lazyDataPrefix + key] = value;\n      }\n    };\n  }\n\n  function silentSetLazy(vm, key, value) {\n    vm[lazyDataPrefix + key] = value;\n  }\n\n  function silentGetLazy(vm, key) {\n    return vm[lazyDataPrefix + key];\n  }\n\n  var prefix = '_async_computed$';\n  var DidNotUpdate = typeof Symbol === 'function' ? Symbol('did-not-update') : {};\n  var AsyncComputed = {\n    install: function install(Vue, pluginOptions) {\n      pluginOptions = pluginOptions || {};\n      Vue.config.optionMergeStrategies.asyncComputed = Vue.config.optionMergeStrategies.computed;\n      Vue.mixin({\n        beforeCreate: function beforeCreate() {\n          var optionData = this.$options.data;\n          if (!this.$options.computed) this.$options.computed = {};\n\n          for (var key in this.$options.asyncComputed || {}) {\n            this.$options.computed[prefix + key] = getterFn(key, this.$options.asyncComputed[key]);\n          }\n\n          this.$options.data = function vueAsyncComputedInjectedDataFn() {\n            var data = (typeof optionData === 'function' ? optionData.call(this) : optionData) || {};\n\n            for (var _key in this.$options.asyncComputed || {}) {\n              var item = this.$options.asyncComputed[_key];\n\n              if (isComputedLazy(item)) {\n                initLazy(data, _key);\n                this.$options.computed[_key] = makeLazyComputed(_key);\n              } else {\n                data[_key] = null;\n              }\n            }\n\n            return data;\n          };\n        },\n        created: function created() {\n          var _this = this;\n\n          for (var key in this.$options.asyncComputed || {}) {\n            var item = this.$options.asyncComputed[key],\n                value = generateDefault.call(this, item, pluginOptions);\n\n            if (isComputedLazy(item)) {\n              silentSetLazy(this, key, value);\n            } else {\n              this[key] = value;\n            }\n          }\n\n          var _loop = function _loop(_key2) {\n            var promiseId = 0;\n\n            _this.$watch(prefix + _key2, function (newPromise) {\n              var thisPromise = ++promiseId;\n\n              if (newPromise === DidNotUpdate) {\n                return;\n              }\n\n              if (!newPromise || !newPromise.then) {\n                newPromise = Promise.resolve(newPromise);\n              }\n\n              newPromise.then(function (value) {\n                if (thisPromise !== promiseId) return;\n                _this[_key2] = value;\n              }).catch(function (err) {\n                if (thisPromise !== promiseId) return;\n                if (pluginOptions.errorHandler === false) return;\n                var handler = pluginOptions.errorHandler === undefined ? console.error.bind(console, 'Error evaluating async computed property:') : pluginOptions.errorHandler;\n\n                if (pluginOptions.useRawError) {\n                  handler(err);\n                } else {\n                  handler(err.stack);\n                }\n              });\n            }, {\n              immediate: true\n            });\n          };\n\n          for (var _key2 in this.$options.asyncComputed || {}) {\n            _loop(_key2);\n          }\n        }\n      });\n    }\n  };\n\n  function getterFn(key, fn) {\n    if (typeof fn === 'function') return fn;\n    var getter = fn.get;\n\n    if (fn.hasOwnProperty('watch')) {\n      var previousGetter = getter;\n\n      getter = function getter() {\n        fn.watch.call(this);\n        return previousGetter.call(this);\n      };\n    }\n\n    if (fn.hasOwnProperty('shouldUpdate')) {\n      var _previousGetter = getter;\n\n      getter = function getter() {\n        if (fn.shouldUpdate.call(this)) {\n          return _previousGetter.call(this);\n        }\n\n        return DidNotUpdate;\n      };\n    }\n\n    if (isComputedLazy(fn)) {\n      var nonLazy = getter;\n\n      getter = function lazyGetter() {\n        if (isLazyActive(this, key)) {\n          return nonLazy.call(this);\n        } else {\n          return silentGetLazy(this, key);\n        }\n      };\n    }\n\n    return getter;\n  }\n\n  function generateDefault(fn, pluginOptions) {\n    var defaultValue = null;\n\n    if ('default' in fn) {\n      defaultValue = fn.default;\n    } else if ('default' in pluginOptions) {\n      defaultValue = pluginOptions.default;\n    }\n\n    if (typeof defaultValue === 'function') {\n      return defaultValue.call(this);\n    } else {\n      return defaultValue;\n    }\n  }\n  /* istanbul ignore if */\n\n\n  if (typeof window !== 'undefined' && window.Vue) {\n    // Auto install in dist mode\n    window.Vue.use(AsyncComputed);\n  }\n\n  return AsyncComputed;\n});\n\n//# sourceURL=webpack:///./node_modules/vue-async-computed/dist/vue-async-computed.js?");

/***/ }),

/***/ "./node_modules/vue-js-toggle-button/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/vue-js-toggle-button/dist/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n  if (true) module.exports = factory(__webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\"));else {}\n})(this, function (__WEBPACK_EXTERNAL_MODULE_1__) {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __webpack_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __webpack_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __webpack_require__.c = installedModules;\n      /******/\n\n      /******/\n      // identity function for calling harmony imports with the correct context\n\n      /******/\n\n      __webpack_require__.i = function (value) {\n        return value;\n      };\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n\n      __webpack_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__webpack_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            /******/\n            configurable: false,\n\n            /******/\n            enumerable: true,\n\n            /******/\n            get: getter\n            /******/\n\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __webpack_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __webpack_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __webpack_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __webpack_require__.p = \"/dist/\";\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __webpack_require__(__webpack_require__.s = 3);\n      /******/\n    }(\n    /************************************************************************/\n\n    /******/\n    [\n    /* 0 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /* styles */\n      __webpack_require__(8);\n\n      var Component = __webpack_require__(6)(\n      /* script */\n      __webpack_require__(2),\n      /* template */\n      __webpack_require__(7),\n      /* scopeId */\n      \"data-v-25adc6c0\",\n      /* cssModules */\n      null);\n\n      module.exports = Component.exports;\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports) {\n      module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(__webpack_exports__, \"__esModule\", {\n        value: true\n      });\n\n      var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n      } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      }; //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n      //\n\n\n      var constants = {\n        colorChecked: '#75C791',\n        colorUnchecked: '#bfcbd9',\n        cssColors: false,\n        labelChecked: 'on',\n        labelUnchecked: 'off',\n        width: 50,\n        height: 22,\n        margin: 3,\n        switchColor: '#fff'\n      };\n\n      var contains = function contains(object, title) {\n        return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object.hasOwnProperty(title);\n      };\n\n      var px = function px(v) {\n        return v + 'px';\n      };\n      /* harmony default export */\n\n\n      __webpack_exports__[\"default\"] = {\n        name: 'ToggleButton',\n        props: {\n          value: {\n            type: Boolean,\n            default: false\n          },\n          disabled: {\n            type: Boolean,\n            default: false\n          },\n          name: {\n            type: String\n          },\n          sync: {\n            type: Boolean,\n            default: false\n          },\n          speed: {\n            type: Number,\n            default: 300\n          },\n          color: {\n            type: [String, Object],\n            validator: function validator(value) {\n              return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? value.checked || value.unchecked : typeof value === 'string';\n            }\n          },\n          switchColor: {\n            type: [String, Object],\n            validator: function validator(value) {\n              return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? value.checked || value.unchecked : typeof value === 'string';\n            }\n          },\n          cssColors: {\n            type: Boolean,\n            default: false\n          },\n          labels: {\n            type: [Boolean, Object],\n            default: false,\n            validator: function validator(value) {\n              return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' ? value.checked || value.unchecked : typeof value === 'boolean';\n            }\n          },\n          height: {\n            type: Number,\n            default: constants.height\n          },\n          width: {\n            type: Number,\n            default: constants.width\n          }\n        },\n        computed: {\n          className: function className() {\n            var toggled = this.toggled,\n                disabled = this.disabled;\n            return ['vue-js-switch', {\n              toggled: toggled,\n              disabled: disabled\n            }];\n          },\n          ariaChecked: function ariaChecked() {\n            return this.toggled.toString();\n          },\n          coreStyle: function coreStyle() {\n            return {\n              width: px(this.width),\n              height: px(this.height),\n              backgroundColor: this.cssColors ? null : this.disabled ? this.colorDisabled : this.colorCurrent,\n              borderRadius: px(Math.round(this.height / 2))\n            };\n          },\n          buttonRadius: function buttonRadius() {\n            return this.height - constants.margin * 2;\n          },\n          distance: function distance() {\n            return px(this.width - this.height + constants.margin);\n          },\n          buttonStyle: function buttonStyle() {\n            return {\n              width: px(this.buttonRadius),\n              height: px(this.buttonRadius),\n              transition: 'transform ' + this.speed + 'ms',\n              transform: this.toggled ? 'translate3d(' + this.distance + ', 3px, 0px)' : null,\n              background: this.switchColor ? this.switchColorCurrent : undefined\n            };\n          },\n          labelStyle: function labelStyle() {\n            return {\n              lineHeight: px(this.height)\n            };\n          },\n          colorChecked: function colorChecked() {\n            var color = this.color;\n\n            if ((typeof color === 'undefined' ? 'undefined' : _typeof(color)) !== 'object') {\n              return color || constants.colorChecked;\n            }\n\n            return contains(color, 'checked') ? color.checked : constants.colorChecked;\n          },\n          colorUnchecked: function colorUnchecked() {\n            var color = this.color;\n            return contains(color, 'unchecked') ? color.unchecked : constants.colorUnchecked;\n          },\n          colorDisabled: function colorDisabled() {\n            var color = this.color;\n            return contains(color, 'disabled') ? color.disabled : this.colorCurrent;\n          },\n          colorCurrent: function colorCurrent() {\n            return this.toggled ? this.colorChecked : this.colorUnchecked;\n          },\n          labelChecked: function labelChecked() {\n            return contains(this.labels, 'checked') ? this.labels.checked : constants.labelChecked;\n          },\n          labelUnchecked: function labelUnchecked() {\n            return contains(this.labels, 'unchecked') ? this.labels.unchecked : constants.labelUnchecked;\n          },\n          switchColorChecked: function switchColorChecked() {\n            var switchColor = this.switchColor;\n            return contains(switchColor, 'checked') ? switchColor.checked : constants.switchColor;\n          },\n          switchColorUnchecked: function switchColorUnchecked() {\n            var switchColor = this.switchColor;\n            return contains(switchColor, 'unchecked') ? switchColor.unchecked : constants.switchColor;\n          },\n          switchColorCurrent: function switchColorCurrent() {\n            var switchColor = this.switchColor;\n\n            if ((typeof switchColor === 'undefined' ? 'undefined' : _typeof(switchColor)) !== 'object') {\n              return switchColor || constants.switchColor;\n            }\n\n            return this.toggled ? this.switchColorChecked : this.switchColorUnchecked;\n          }\n        },\n        watch: {\n          value: function value(_value) {\n            if (this.sync) {\n              this.toggled = !!_value;\n            }\n          }\n        },\n        data: function data() {\n          return {\n            toggled: !!this.value\n          };\n        },\n        methods: {\n          toggle: function toggle(event) {\n            this.toggled = !this.toggled;\n            this.$emit('input', this.toggled);\n            this.$emit('change', {\n              value: this.toggled,\n              srcEvent: event\n            });\n          }\n        }\n      };\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, __webpack_exports__, __webpack_require__) {\n      \"use strict\";\n\n      Object.defineProperty(__webpack_exports__, \"__esModule\", {\n        value: true\n      });\n      /* harmony import */\n\n      var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(1);\n      /* harmony import */\n\n\n      var __WEBPACK_IMPORTED_MODULE_0_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_vue__);\n      /* harmony import */\n\n\n      var __WEBPACK_IMPORTED_MODULE_1__Button_vue__ = __webpack_require__(0);\n      /* harmony import */\n\n\n      var __WEBPACK_IMPORTED_MODULE_1__Button_vue___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__Button_vue__);\n\n      var plugin = {\n        install: function install(Vue, options) {\n          Vue.component('ToggleButton', __WEBPACK_IMPORTED_MODULE_1__Button_vue___default.a);\n        }\n      };\n      /* harmony default export */\n\n      __webpack_exports__[\"default\"] = plugin;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      exports = module.exports = __webpack_require__(5)(); // imports\n      // module\n\n      exports.push([module.i, \".vue-js-switch[data-v-25adc6c0]{display:inline-block;position:relative;overflow:hidden;vertical-align:middle;user-select:none;font-size:10px;cursor:pointer}.vue-js-switch .v-switch-input[data-v-25adc6c0]{display:none}.vue-js-switch .v-switch-label[data-v-25adc6c0]{position:absolute;top:0;font-weight:600;color:#fff}.vue-js-switch .v-switch-label.v-left[data-v-25adc6c0]{left:10px}.vue-js-switch .v-switch-label.v-right[data-v-25adc6c0]{right:10px}.vue-js-switch .v-switch-core[data-v-25adc6c0]{display:block;position:relative;box-sizing:border-box;outline:0;margin:0;transition:border-color .3s,background-color .3s;user-select:none}.vue-js-switch .v-switch-core .v-switch-button[data-v-25adc6c0]{display:block;position:absolute;overflow:hidden;top:0;left:0;transform:translate3d(3px,3px,0);border-radius:100%;background-color:#fff}.vue-js-switch.disabled[data-v-25adc6c0]{pointer-events:none;opacity:.6}\", \"\"]); // exports\n\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports) {\n      /*\r\n      \tMIT License http://www.opensource.org/licenses/mit-license.php\r\n      \tAuthor Tobias Koppers @sokra\r\n      */\n      // css base code, injected by the css-loader\n      module.exports = function () {\n        var list = []; // return the list of modules as css string\n\n        list.toString = function toString() {\n          var result = [];\n\n          for (var i = 0; i < this.length; i++) {\n            var item = this[i];\n\n            if (item[2]) {\n              result.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n            } else {\n              result.push(item[1]);\n            }\n          }\n\n          return result.join(\"\");\n        }; // import a list of modules into the list\n\n\n        list.i = function (modules, mediaQuery) {\n          if (typeof modules === \"string\") modules = [[null, modules, \"\"]];\n          var alreadyImportedModules = {};\n\n          for (var i = 0; i < this.length; i++) {\n            var id = this[i][0];\n            if (typeof id === \"number\") alreadyImportedModules[id] = true;\n          }\n\n          for (i = 0; i < modules.length; i++) {\n            var item = modules[i]; // skip already imported module\n            // this implementation is not 100% perfect for weird media query combinations\n            //  when a module is imported multiple times with different media queries.\n            //  I hope this will never occur (Hey this way we have smaller bundles)\n\n            if (typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n              if (mediaQuery && !item[2]) {\n                item[2] = mediaQuery;\n              } else if (mediaQuery) {\n                item[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n              }\n\n              list.push(item);\n            }\n          }\n        };\n\n        return list;\n      };\n      /***/\n\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports) {\n      // this module is a runtime utility for cleaner component module output and will\n      // be included in the final webpack user bundle\n      module.exports = function normalizeComponent(rawScriptExports, compiledTemplate, scopeId, cssModules) {\n        var esModule;\n        var scriptExports = rawScriptExports = rawScriptExports || {}; // ES6 modules interop\n\n        var type = typeof rawScriptExports.default;\n\n        if (type === 'object' || type === 'function') {\n          esModule = rawScriptExports;\n          scriptExports = rawScriptExports.default;\n        } // Vue.extend constructor export interop\n\n\n        var options = typeof scriptExports === 'function' ? scriptExports.options : scriptExports; // render functions\n\n        if (compiledTemplate) {\n          options.render = compiledTemplate.render;\n          options.staticRenderFns = compiledTemplate.staticRenderFns;\n        } // scopedId\n\n\n        if (scopeId) {\n          options._scopeId = scopeId;\n        } // inject cssModules\n\n\n        if (cssModules) {\n          var computed = Object.create(options.computed || null);\n          Object.keys(cssModules).forEach(function (key) {\n            var module = cssModules[key];\n\n            computed[key] = function () {\n              return module;\n            };\n          });\n          options.computed = computed;\n        }\n\n        return {\n          esModule: esModule,\n          exports: scriptExports,\n          options: options\n        };\n      };\n      /***/\n\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports) {\n      module.exports = {\n        render: function () {\n          var _vm = this;\n\n          var _h = _vm.$createElement;\n\n          var _c = _vm._self._c || _h;\n\n          return _c('label', {\n            class: _vm.className,\n            attrs: {\n              \"role\": \"checkbox\",\n              \"aria-checked\": _vm.ariaChecked\n            }\n          }, [_c('input', {\n            staticClass: \"v-switch-input\",\n            attrs: {\n              \"type\": \"checkbox\",\n              \"name\": _vm.name\n            },\n            on: {\n              \"change\": function ($event) {\n                $event.stopPropagation();\n                return _vm.toggle($event);\n              }\n            }\n          }), _vm._v(\" \"), _c('div', {\n            staticClass: \"v-switch-core\",\n            style: _vm.coreStyle\n          }, [_c('div', {\n            staticClass: \"v-switch-button\",\n            style: _vm.buttonStyle\n          })]), _vm._v(\" \"), _vm.labels ? [_vm.toggled ? _c('span', {\n            staticClass: \"v-switch-label v-left\",\n            style: _vm.labelStyle,\n            domProps: {\n              \"innerHTML\": _vm._s(_vm.labelChecked)\n            }\n          }) : _c('span', {\n            staticClass: \"v-switch-label v-right\",\n            style: _vm.labelStyle,\n            domProps: {\n              \"innerHTML\": _vm._s(_vm.labelUnchecked)\n            }\n          })] : _vm._e()], 2);\n        },\n        staticRenderFns: []\n        /***/\n\n      };\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      // style-loader: Adds some css to the DOM by adding a <style> tag\n      // load the styles\n      var content = __webpack_require__(4);\n\n      if (typeof content === 'string') content = [[module.i, content, '']];\n      if (content.locals) module.exports = content.locals; // add the styles to the DOM\n\n      var update = __webpack_require__(9)(\"2283861f\", content, true);\n      /***/\n\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __webpack_require__) {\n      /*\n        MIT License http://www.opensource.org/licenses/mit-license.php\n        Author Tobias Koppers @sokra\n        Modified by Evan You @yyx990803\n      */\n      var hasDocument = typeof document !== 'undefined';\n\n      if (typeof DEBUG !== 'undefined' && DEBUG) {\n        if (!hasDocument) {\n          throw new Error('vue-style-loader cannot be used in a non-browser environment. ' + \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\");\n        }\n      }\n\n      var listToStyles = __webpack_require__(10);\n      /*\n      type StyleObject = {\n        id: number;\n        parts: Array<StyleObjectPart>\n      }\n      \n      type StyleObjectPart = {\n        css: string;\n        media: string;\n        sourceMap: ?string\n      }\n      */\n\n\n      var stylesInDom = {\n        /*\n        [id: number]: {\n        id: number,\n        refs: number,\n        parts: Array<(obj?: StyleObjectPart) => void>\n        }\n        */\n      };\n      var head = hasDocument && (document.head || document.getElementsByTagName('head')[0]);\n      var singletonElement = null;\n      var singletonCounter = 0;\n      var isProduction = false;\n\n      var noop = function () {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n      // tags it will allow on a page\n\n\n      var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());\n\n      module.exports = function (parentId, list, _isProduction) {\n        isProduction = _isProduction;\n        var styles = listToStyles(parentId, list);\n        addStylesToDom(styles);\n        return function update(newList) {\n          var mayRemove = [];\n\n          for (var i = 0; i < styles.length; i++) {\n            var item = styles[i];\n            var domStyle = stylesInDom[item.id];\n            domStyle.refs--;\n            mayRemove.push(domStyle);\n          }\n\n          if (newList) {\n            styles = listToStyles(parentId, newList);\n            addStylesToDom(styles);\n          } else {\n            styles = [];\n          }\n\n          for (var i = 0; i < mayRemove.length; i++) {\n            var domStyle = mayRemove[i];\n\n            if (domStyle.refs === 0) {\n              for (var j = 0; j < domStyle.parts.length; j++) {\n                domStyle.parts[j]();\n              }\n\n              delete stylesInDom[domStyle.id];\n            }\n          }\n        };\n      };\n\n      function addStylesToDom(styles\n      /* Array<StyleObject> */\n      ) {\n        for (var i = 0; i < styles.length; i++) {\n          var item = styles[i];\n          var domStyle = stylesInDom[item.id];\n\n          if (domStyle) {\n            domStyle.refs++;\n\n            for (var j = 0; j < domStyle.parts.length; j++) {\n              domStyle.parts[j](item.parts[j]);\n            }\n\n            for (; j < item.parts.length; j++) {\n              domStyle.parts.push(addStyle(item.parts[j]));\n            }\n\n            if (domStyle.parts.length > item.parts.length) {\n              domStyle.parts.length = item.parts.length;\n            }\n          } else {\n            var parts = [];\n\n            for (var j = 0; j < item.parts.length; j++) {\n              parts.push(addStyle(item.parts[j]));\n            }\n\n            stylesInDom[item.id] = {\n              id: item.id,\n              refs: 1,\n              parts: parts\n            };\n          }\n        }\n      }\n\n      function createStyleElement() {\n        var styleElement = document.createElement('style');\n        styleElement.type = 'text/css';\n        head.appendChild(styleElement);\n        return styleElement;\n      }\n\n      function addStyle(obj\n      /* StyleObjectPart */\n      ) {\n        var update, remove;\n        var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]');\n\n        if (styleElement) {\n          if (isProduction) {\n            // has SSR styles and in production mode.\n            // simply do nothing.\n            return noop;\n          } else {\n            // has SSR styles but in dev mode.\n            // for some reason Chrome can't handle source map in server-rendered\n            // style tags - source maps in <style> only works if the style tag is\n            // created and inserted dynamically. So we remove the server rendered\n            // styles and inject new ones.\n            styleElement.parentNode.removeChild(styleElement);\n          }\n        }\n\n        if (isOldIE) {\n          // use singleton mode for IE9.\n          var styleIndex = singletonCounter++;\n          styleElement = singletonElement || (singletonElement = createStyleElement());\n          update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n          remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n        } else {\n          // use multi-style-tag mode in all other cases\n          styleElement = createStyleElement();\n          update = applyToTag.bind(null, styleElement);\n\n          remove = function () {\n            styleElement.parentNode.removeChild(styleElement);\n          };\n        }\n\n        update(obj);\n        return function updateStyle(newObj\n        /* StyleObjectPart */\n        ) {\n          if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n              return;\n            }\n\n            update(obj = newObj);\n          } else {\n            remove();\n          }\n        };\n      }\n\n      var replaceText = function () {\n        var textStore = [];\n        return function (index, replacement) {\n          textStore[index] = replacement;\n          return textStore.filter(Boolean).join('\\n');\n        };\n      }();\n\n      function applyToSingletonTag(styleElement, index, remove, obj) {\n        var css = remove ? '' : obj.css;\n\n        if (styleElement.styleSheet) {\n          styleElement.styleSheet.cssText = replaceText(index, css);\n        } else {\n          var cssNode = document.createTextNode(css);\n          var childNodes = styleElement.childNodes;\n          if (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\n          if (childNodes.length) {\n            styleElement.insertBefore(cssNode, childNodes[index]);\n          } else {\n            styleElement.appendChild(cssNode);\n          }\n        }\n      }\n\n      function applyToTag(styleElement, obj) {\n        var css = obj.css;\n        var media = obj.media;\n        var sourceMap = obj.sourceMap;\n\n        if (media) {\n          styleElement.setAttribute('media', media);\n        }\n\n        if (sourceMap) {\n          // https://developer.chrome.com/devtools/docs/javascript-debugging\n          // this makes source maps inside style tags work properly in Chrome\n          css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n          css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */';\n        }\n\n        if (styleElement.styleSheet) {\n          styleElement.styleSheet.cssText = css;\n        } else {\n          while (styleElement.firstChild) {\n            styleElement.removeChild(styleElement.firstChild);\n          }\n\n          styleElement.appendChild(document.createTextNode(css));\n        }\n      }\n      /***/\n\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports) {\n      /**\n       * Translates the list format produced by css-loader into something\n       * easier to manipulate.\n       */\n      module.exports = function listToStyles(parentId, list) {\n        var styles = [];\n        var newStyles = {};\n\n        for (var i = 0; i < list.length; i++) {\n          var item = list[i];\n          var id = item[0];\n          var css = item[1];\n          var media = item[2];\n          var sourceMap = item[3];\n          var part = {\n            id: parentId + ':' + i,\n            css: css,\n            media: media,\n            sourceMap: sourceMap\n          };\n\n          if (!newStyles[id]) {\n            styles.push(newStyles[id] = {\n              id: id,\n              parts: [part]\n            });\n          } else {\n            newStyles[id].parts.push(part);\n          }\n        }\n\n        return styles;\n      };\n      /***/\n\n    }])\n  );\n});\n\n//# sourceURL=webpack:///./node_modules/vue-js-toggle-button/dist/index.js?");

/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return normalizeComponent; });\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nfunction normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js?");

/***/ }),

/***/ "./node_modules/vue-meta/lib/vue-meta.js":
/*!***********************************************!*\
  !*** ./node_modules/vue-meta/lib/vue-meta.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n * vue-meta v1.5.3\n * (c) 2018 Declan de Wet & Sébastien Chopin (@Atinux)\n * @license MIT\n */\n(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  var objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n    var arguments$1 = arguments;\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments$1[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n\n  var isMergeableObject = function isMergeableObject(value) {\n    return isNonNullObject(value) && !isSpecial(value);\n  };\n\n  function isNonNullObject(value) {\n    return !!value && typeof value === 'object';\n  }\n\n  function isSpecial(value) {\n    var stringValue = Object.prototype.toString.call(value);\n    return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n  } // see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\n\n\n  var canUseSymbol = typeof Symbol === 'function' && Symbol.for;\n  var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\n  function isReactElement(value) {\n    return value.$$typeof === REACT_ELEMENT_TYPE;\n  }\n\n  function emptyTarget(val) {\n    return Array.isArray(val) ? [] : {};\n  }\n\n  function cloneUnlessOtherwiseSpecified(value, optionsArgument) {\n    var clone = !optionsArgument || optionsArgument.clone !== false;\n    return clone && isMergeableObject(value) ? deepmerge(emptyTarget(value), value, optionsArgument) : value;\n  }\n\n  function defaultArrayMerge(target, source, optionsArgument) {\n    return target.concat(source).map(function (element) {\n      return cloneUnlessOtherwiseSpecified(element, optionsArgument);\n    });\n  }\n\n  function mergeObject(target, source, optionsArgument) {\n    var destination = {};\n\n    if (isMergeableObject(target)) {\n      Object.keys(target).forEach(function (key) {\n        destination[key] = cloneUnlessOtherwiseSpecified(target[key], optionsArgument);\n      });\n    }\n\n    Object.keys(source).forEach(function (key) {\n      if (!isMergeableObject(source[key]) || !target[key]) {\n        destination[key] = cloneUnlessOtherwiseSpecified(source[key], optionsArgument);\n      } else {\n        destination[key] = deepmerge(target[key], source[key], optionsArgument);\n      }\n    });\n    return destination;\n  }\n\n  function deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || {\n      arrayMerge: defaultArrayMerge\n    };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n      return cloneUnlessOtherwiseSpecified(source, optionsArgument);\n    } else if (sourceIsArray) {\n      var arrayMerge = options.arrayMerge || defaultArrayMerge;\n      return arrayMerge(target, source, optionsArgument);\n    } else {\n      return mergeObject(target, source, optionsArgument);\n    }\n  }\n\n  deepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array)) {\n      throw new Error('first argument should be an array');\n    }\n\n    return array.reduce(function (prev, next) {\n      return deepmerge(prev, next, optionsArgument);\n    }, {});\n  };\n\n  var deepmerge_1 = deepmerge;\n  /**\n   * lodash (Custom Build) <https://lodash.com/>\n   * Build: `lodash modularize exports=\"npm\" -o ./`\n   * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n   * Released under MIT license <https://lodash.com/license>\n   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n   */\n\n  /** `Object#toString` result references. */\n\n  var objectTag = '[object Object]';\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n\n    return result;\n  }\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n\n\n  function overArg(func, transform) {\n    return function (arg) {\n      return func(transform(arg));\n    };\n  }\n  /** Used for built-in method references. */\n\n\n  var funcProto = Function.prototype;\n  var objectProto = Object.prototype;\n  /** Used to resolve the decompiled source of functions. */\n\n  var funcToString = funcProto.toString;\n  /** Used to check objects for own properties. */\n\n  var hasOwnProperty$1 = objectProto.hasOwnProperty;\n  /** Used to infer the `Object` constructor. */\n\n  var objectCtorString = funcToString.call(Object);\n  /**\n   * Used to resolve the\n   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n   * of values.\n   */\n\n  var objectToString = objectProto.toString;\n  /** Built-in value references. */\n\n  var getPrototype = overArg(Object.getPrototypeOf, Object);\n  /**\n   * Checks if `value` is object-like. A value is object-like if it's not `null`\n   * and has a `typeof` result of \"object\".\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   * @example\n   *\n   * _.isObjectLike({});\n   * // => true\n   *\n   * _.isObjectLike([1, 2, 3]);\n   * // => true\n   *\n   * _.isObjectLike(_.noop);\n   * // => false\n   *\n   * _.isObjectLike(null);\n   * // => false\n   */\n\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n  /**\n   * Checks if `value` is a plain object, that is, an object created by the\n   * `Object` constructor or one with a `[[Prototype]]` of `null`.\n   *\n   * @static\n   * @memberOf _\n   * @since 0.8.0\n   * @category Lang\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n   * @example\n   *\n   * function Foo() {\n   *   this.a = 1;\n   * }\n   *\n   * _.isPlainObject(new Foo);\n   * // => false\n   *\n   * _.isPlainObject([1, 2, 3]);\n   * // => false\n   *\n   * _.isPlainObject({ 'x': 0, 'y': 0 });\n   * // => true\n   *\n   * _.isPlainObject(Object.create(null));\n   * // => true\n   */\n\n\n  function isPlainObject(value) {\n    if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {\n      return false;\n    }\n\n    var proto = getPrototype(value);\n\n    if (proto === null) {\n      return true;\n    }\n\n    var Ctor = hasOwnProperty$1.call(proto, 'constructor') && proto.constructor;\n    return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n  }\n\n  var lodash_isplainobject = isPlainObject;\n  /**\n   * checks if passed argument is an array\n   * @param  {any}  arr - the object to check\n   * @return {Boolean} - true if `arr` is an array\n   */\n\n  function isArray(arr) {\n    return Array.isArray ? Array.isArray(arr) : Object.prototype.toString.call(arr) === '[object Array]';\n  }\n  /**\n   * Returns the `opts.option` $option value of the given `opts.component`.\n   * If methods are encountered, they will be bound to the component context.\n   * If `opts.deep` is true, will recursively merge all child component\n   * `opts.option` $option values into the returned result.\n   *\n   * @param  {Object} opts - options\n   * @param  {Object} opts.component - Vue component to fetch option data from\n   * @param  {String} opts.option - what option to look for\n   * @param  {Boolean} opts.deep - look for data in child components as well?\n   * @param  {Function} opts.arrayMerge - how should arrays be merged?\n   * @param  {Object} [result={}] - result so far\n   * @return {Object} result - final aggregated result\n   */\n\n\n  function getComponentOption(opts, result) {\n    if (result === void 0) result = {};\n    var component = opts.component;\n    var option = opts.option;\n    var deep = opts.deep;\n    var arrayMerge = opts.arrayMerge;\n    var metaTemplateKeyName = opts.metaTemplateKeyName;\n    var contentKeyName = opts.contentKeyName;\n    var $options = component.$options;\n\n    if (component._inactive) {\n      return result;\n    } // only collect option data if it exists\n\n\n    if (typeof $options[option] !== 'undefined' && $options[option] !== null) {\n      var data = $options[option]; // if option is a function, replace it with it's result\n\n      if (typeof data === 'function') {\n        data = data.call(component);\n      }\n\n      if (typeof data === 'object') {\n        // merge with existing options\n        result = deepmerge_1(result, data, {\n          arrayMerge: arrayMerge\n        });\n      } else {\n        result = data;\n      }\n    } // collect & aggregate child options if deep = true\n\n\n    if (deep && component.$children.length) {\n      component.$children.forEach(function (childComponent) {\n        result = getComponentOption({\n          component: childComponent,\n          option: option,\n          deep: deep,\n          arrayMerge: arrayMerge\n        }, result);\n      });\n    }\n\n    if (metaTemplateKeyName && result.hasOwnProperty('meta')) {\n      result.meta = Object.keys(result.meta).map(function (metaKey) {\n        var metaObject = result.meta[metaKey];\n\n        if (!metaObject.hasOwnProperty(metaTemplateKeyName) || !metaObject.hasOwnProperty(contentKeyName) || typeof metaObject[metaTemplateKeyName] === 'undefined') {\n          return result.meta[metaKey];\n        }\n\n        var template = metaObject[metaTemplateKeyName];\n        delete metaObject[metaTemplateKeyName];\n\n        if (template) {\n          metaObject.content = typeof template === 'function' ? template(metaObject.content) : template.replace(/%s/g, metaObject.content);\n        }\n\n        return metaObject;\n      });\n    }\n\n    return result;\n  }\n\n  var escapeHTML = function (str) {\n    return typeof window === 'undefined' // server-side escape sequence\n    ? String(str).replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;') // client-side escape sequence\n    : String(str).replace(/&/g, '\\u0026').replace(/</g, '\\u003c').replace(/>/g, '\\u003e').replace(/\"/g, '\\u0022').replace(/'/g, '\\u0027');\n  };\n\n  function _getMetaInfo(options) {\n    if (options === void 0) options = {};\n    var keyName = options.keyName;\n    var tagIDKeyName = options.tagIDKeyName;\n    var metaTemplateKeyName = options.metaTemplateKeyName;\n    var contentKeyName = options.contentKeyName;\n    /**\n     * Returns the correct meta info for the given component\n     * (child components will overwrite parent meta info)\n     *\n     * @param  {Object} component - the Vue instance to get meta info from\n     * @return {Object} - returned meta info\n     */\n\n    return function getMetaInfo(component) {\n      // set some sane defaults\n      var defaultInfo = {\n        title: '',\n        titleChunk: '',\n        titleTemplate: '%s',\n        htmlAttrs: {},\n        bodyAttrs: {},\n        headAttrs: {},\n        meta: [],\n        base: [],\n        link: [],\n        style: [],\n        script: [],\n        noscript: [],\n        __dangerouslyDisableSanitizers: [],\n        __dangerouslyDisableSanitizersByTagID: {}\n      }; // collect & aggregate all metaInfo $options\n\n      var info = getComponentOption({\n        component: component,\n        option: keyName,\n        deep: true,\n        metaTemplateKeyName: metaTemplateKeyName,\n        contentKeyName: contentKeyName,\n        arrayMerge: function arrayMerge(target, source) {\n          // we concat the arrays without merging objects contained in,\n          // but we check for a `vmid` property on each object in the array\n          // using an O(1) lookup associative array exploit\n          // note the use of \"for in\" - we are looping through arrays here, not\n          // plain objects\n          var destination = [];\n\n          for (var targetIndex in target) {\n            var targetItem = target[targetIndex];\n            var shared = false;\n\n            for (var sourceIndex in source) {\n              var sourceItem = source[sourceIndex];\n\n              if (targetItem[tagIDKeyName] && targetItem[tagIDKeyName] === sourceItem[tagIDKeyName]) {\n                var targetTemplate = targetItem[metaTemplateKeyName];\n                var sourceTemplate = sourceItem[metaTemplateKeyName];\n\n                if (targetTemplate && !sourceTemplate) {\n                  sourceItem[contentKeyName] = applyTemplate(component)(targetTemplate)(sourceItem[contentKeyName]);\n                } // If template defined in child but content in parent\n\n\n                if (targetTemplate && sourceTemplate && !sourceItem[contentKeyName]) {\n                  sourceItem[contentKeyName] = applyTemplate(component)(sourceTemplate)(targetItem[contentKeyName]);\n                  delete sourceItem[metaTemplateKeyName];\n                }\n\n                shared = true;\n                break;\n              }\n            }\n\n            if (!shared) {\n              destination.push(targetItem);\n            }\n          }\n\n          return destination.concat(source);\n        }\n      }); // Remove all \"template\" tags from meta\n      // backup the title chunk in case user wants access to it\n\n      if (info.title) {\n        info.titleChunk = info.title;\n      } // replace title with populated template\n\n\n      if (info.titleTemplate) {\n        info.title = applyTemplate(component)(info.titleTemplate)(info.titleChunk);\n      } // convert base tag to an array so it can be handled the same way\n      // as the other tags\n\n\n      if (info.base) {\n        info.base = Object.keys(info.base).length ? [info.base] : [];\n      }\n\n      var ref = info.__dangerouslyDisableSanitizers;\n      var refByTagID = info.__dangerouslyDisableSanitizersByTagID; // sanitizes potentially dangerous characters\n\n      var escape = function (info) {\n        return Object.keys(info).reduce(function (escaped, key) {\n          var isDisabled = ref && ref.indexOf(key) > -1;\n          var tagID = info[tagIDKeyName];\n\n          if (!isDisabled && tagID) {\n            isDisabled = refByTagID && refByTagID[tagID] && refByTagID[tagID].indexOf(key) > -1;\n          }\n\n          var val = info[key];\n          escaped[key] = val;\n\n          if (key === '__dangerouslyDisableSanitizers' || key === '__dangerouslyDisableSanitizersByTagID') {\n            return escaped;\n          }\n\n          if (!isDisabled) {\n            if (typeof val === 'string') {\n              escaped[key] = escapeHTML(val);\n            } else if (lodash_isplainobject(val)) {\n              escaped[key] = escape(val);\n            } else if (isArray(val)) {\n              escaped[key] = val.map(escape);\n            } else {\n              escaped[key] = val;\n            }\n          } else {\n            escaped[key] = val;\n          }\n\n          return escaped;\n        }, {});\n      }; // merge with defaults\n\n\n      info = deepmerge_1(defaultInfo, info); // begin sanitization\n\n      info = escape(info);\n      return info;\n    };\n  }\n\n  var applyTemplate = function (component) {\n    return function (template) {\n      return function (chunk) {\n        return typeof template === 'function' ? template.call(component, chunk) : template.replace(/%s/g, chunk);\n      };\n    };\n  };\n\n  function _titleGenerator(options) {\n    if (options === void 0) options = {};\n    var attribute = options.attribute;\n    /**\n     * Generates title output for the server\n     *\n     * @param  {'title'} type - the string \"title\"\n     * @param  {String} data - the title text\n     * @return {Object} - the title generator\n     */\n\n    return function titleGenerator(type, data) {\n      return {\n        text: function text() {\n          return \"<\" + type + \" \" + attribute + \"=\\\"true\\\">\" + data + \"</\" + type + \">\";\n        }\n      };\n    };\n  }\n\n  function _attrsGenerator(options) {\n    if (options === void 0) options = {};\n    var attribute = options.attribute;\n    /**\n     * Generates tag attributes for use on the server.\n     *\n     * @param  {('bodyAttrs'|'htmlAttrs'|'headAttrs')} type - the type of attributes to generate\n     * @param  {Object} data - the attributes to generate\n     * @return {Object} - the attribute generator\n     */\n\n    return function attrsGenerator(type, data) {\n      return {\n        text: function text() {\n          var attributeStr = '';\n          var watchedAttrs = [];\n\n          for (var attr in data) {\n            if (data.hasOwnProperty(attr)) {\n              watchedAttrs.push(attr);\n              attributeStr += (typeof data[attr] !== 'undefined' ? attr + \"=\\\"\" + data[attr] + \"\\\"\" : attr) + \" \";\n            }\n          }\n\n          attributeStr += attribute + \"=\\\"\" + watchedAttrs.join(',') + \"\\\"\";\n          return attributeStr.trim();\n        }\n      };\n    };\n  }\n\n  function _tagGenerator(options) {\n    if (options === void 0) options = {};\n    var attribute = options.attribute;\n    /**\n     * Generates meta, base, link, style, script, noscript tags for use on the server\n     *\n     * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} the name of the tag\n     * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n     * @return {Object} - the tag generator\n     */\n\n    return function tagGenerator(type, tags) {\n      return {\n        text: function text(ref) {\n          if (ref === void 0) ref = {};\n          var body = ref.body;\n          if (body === void 0) body = false; // build a string containing all tags of this type\n\n          return tags.reduce(function (tagsStr, tag) {\n            if (!!tag.body !== body) {\n              return tagsStr;\n            } // build a string containing all attributes of this tag\n\n\n            var attrs = Object.keys(tag).reduce(function (attrsStr, attr) {\n              switch (attr) {\n                // these attributes are treated as children on the tag\n                case 'innerHTML':\n                case 'cssText':\n                case 'once':\n                  return attrsStr;\n                // these form the attribute list for this tag\n\n                default:\n                  if ([options.tagIDKeyName, 'body'].indexOf(attr) !== -1) {\n                    return attrsStr + \" data-\" + attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n                  }\n\n                  return typeof tag[attr] === 'undefined' ? attrsStr + \" \" + attr : attrsStr + \" \" + attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n              }\n            }, '').trim(); // grab child content from one of these attributes, if possible\n\n            var content = tag.innerHTML || tag.cssText || ''; // these tag types will have content inserted\n\n            var closed = ['noscript', 'script', 'style'].indexOf(type) === -1; // generate tag exactly without any other redundant attribute\n\n            var observeTag = tag.once ? '' : attribute + \"=\\\"true\\\" \"; // the final string for this specific tag\n\n            return closed ? tagsStr + \"<\" + type + \" \" + observeTag + attrs + \"/>\" : tagsStr + \"<\" + type + \" \" + observeTag + attrs + \">\" + content + \"</\" + type + \">\";\n          }, '');\n        }\n      };\n    };\n  }\n\n  function _generateServerInjector(options) {\n    if (options === void 0) options = {};\n    /**\n     * Converts a meta info property to one that can be stringified on the server\n     *\n     * @param  {String} type - the type of data to convert\n     * @param  {(String|Object|Array<Object>)} data - the data value\n     * @return {Object} - the new injector\n     */\n\n    return function generateServerInjector(type, data) {\n      switch (type) {\n        case 'title':\n          return _titleGenerator(options)(type, data);\n\n        case 'htmlAttrs':\n        case 'bodyAttrs':\n        case 'headAttrs':\n          return _attrsGenerator(options)(type, data);\n\n        default:\n          return _tagGenerator(options)(type, data);\n      }\n    };\n  }\n\n  function _inject(options) {\n    if (options === void 0) options = {};\n    /**\n     * Converts the state of the meta info object such that each item\n     * can be compiled to a tag string on the server\n     *\n     * @this {Object} - Vue instance - ideally the root component\n     * @return {Object} - server meta info with `toString` methods\n     */\n\n    return function inject() {\n      // get meta info with sensible defaults\n      var info = _getMetaInfo(options)(this.$root); // generate server injectors\n\n\n      for (var key in info) {\n        if (info.hasOwnProperty(key) && key !== 'titleTemplate' && key !== 'titleChunk') {\n          info[key] = _generateServerInjector(options)(key, info[key]);\n        }\n      }\n\n      return info;\n    };\n  }\n\n  function _updateTitle() {\n    /**\n     * Updates the document title\n     *\n     * @param  {String} title - the new title of the document\n     */\n    return function updateTitle(title) {\n      if (title === void 0) title = document.title;\n      document.title = title;\n    };\n  }\n\n  function _updateTagAttributes(options) {\n    if (options === void 0) options = {};\n    var attribute = options.attribute;\n    /**\n     * Updates the document's html tag attributes\n     *\n     * @param  {Object} attrs - the new document html attributes\n     * @param  {HTMLElement} tag - the HTMLElement tag to update with new attrs\n     */\n\n    return function updateTagAttributes(attrs, tag) {\n      var vueMetaAttrString = tag.getAttribute(attribute);\n      var vueMetaAttrs = vueMetaAttrString ? vueMetaAttrString.split(',') : [];\n      var toRemove = [].concat(vueMetaAttrs);\n\n      for (var attr in attrs) {\n        if (attrs.hasOwnProperty(attr)) {\n          var val = attrs[attr] || '';\n          tag.setAttribute(attr, val);\n\n          if (vueMetaAttrs.indexOf(attr) === -1) {\n            vueMetaAttrs.push(attr);\n          }\n\n          var saveIndex = toRemove.indexOf(attr);\n\n          if (saveIndex !== -1) {\n            toRemove.splice(saveIndex, 1);\n          }\n        }\n      }\n\n      var i = toRemove.length - 1;\n\n      for (; i >= 0; i--) {\n        tag.removeAttribute(toRemove[i]);\n      }\n\n      if (vueMetaAttrs.length === toRemove.length) {\n        tag.removeAttribute(attribute);\n      } else {\n        tag.setAttribute(attribute, vueMetaAttrs.join(','));\n      }\n    };\n  } // borrow the slice method\n\n\n  var toArray = Function.prototype.call.bind(Array.prototype.slice);\n\n  function _updateTags(options) {\n    if (options === void 0) options = {};\n    var attribute = options.attribute;\n    /**\n     * Updates meta tags inside <head> and <body> on the client. Borrowed from `react-helmet`:\n     * https://github.com/nfl/react-helmet/blob/004d448f8de5f823d10f838b02317521180f34da/src/Helmet.js#L195-L245\n     *\n     * @param  {('meta'|'base'|'link'|'style'|'script'|'noscript')} type - the name of the tag\n     * @param  {(Array<Object>|Object)} tags - an array of tag objects or a single object in case of base\n     * @return {Object} - a representation of what tags changed\n     */\n\n    return function updateTags(type, tags, headTag, bodyTag) {\n      var oldHeadTags = toArray(headTag.querySelectorAll(type + \"[\" + attribute + \"]\"));\n      var oldBodyTags = toArray(bodyTag.querySelectorAll(type + \"[\" + attribute + \"][data-body=\\\"true\\\"]\"));\n      var newTags = [];\n      var indexToDelete;\n\n      if (tags.length > 1) {\n        // remove duplicates that could have been found by merging tags\n        // which include a mixin with metaInfo and that mixin is used\n        // by multiple components on the same page\n        var found = [];\n        tags = tags.map(function (x) {\n          var k = JSON.stringify(x);\n\n          if (found.indexOf(k) < 0) {\n            found.push(k);\n            return x;\n          }\n        }).filter(function (x) {\n          return x;\n        });\n      }\n\n      if (tags && tags.length) {\n        tags.forEach(function (tag) {\n          var newElement = document.createElement(type);\n          var oldTags = tag.body !== true ? oldHeadTags : oldBodyTags;\n\n          for (var attr in tag) {\n            if (tag.hasOwnProperty(attr)) {\n              if (attr === 'innerHTML') {\n                newElement.innerHTML = tag.innerHTML;\n              } else if (attr === 'cssText') {\n                if (newElement.styleSheet) {\n                  newElement.styleSheet.cssText = tag.cssText;\n                } else {\n                  newElement.appendChild(document.createTextNode(tag.cssText));\n                }\n              } else if ([options.tagIDKeyName, 'body'].indexOf(attr) !== -1) {\n                var _attr = \"data-\" + attr;\n\n                var value = typeof tag[attr] === 'undefined' ? '' : tag[attr];\n                newElement.setAttribute(_attr, value);\n              } else {\n                var value$1 = typeof tag[attr] === 'undefined' ? '' : tag[attr];\n                newElement.setAttribute(attr, value$1);\n              }\n            }\n          }\n\n          newElement.setAttribute(attribute, 'true'); // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n\n          if (oldTags.some(function (existingTag, index) {\n            indexToDelete = index;\n            return newElement.isEqualNode(existingTag);\n          })) {\n            oldTags.splice(indexToDelete, 1);\n          } else {\n            newTags.push(newElement);\n          }\n        });\n      }\n\n      var oldTags = oldHeadTags.concat(oldBodyTags);\n      oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n      });\n      newTags.forEach(function (tag) {\n        if (tag.getAttribute('data-body') === 'true') {\n          bodyTag.appendChild(tag);\n        } else {\n          headTag.appendChild(tag);\n        }\n      });\n      return {\n        oldTags: oldTags,\n        newTags: newTags\n      };\n    };\n  }\n\n  function _updateClientMetaInfo(options) {\n    if (options === void 0) options = {};\n    var ssrAttribute = options.ssrAttribute;\n    /**\n     * Performs client-side updates when new meta info is received\n     *\n     * @param  {Object} newInfo - the meta info to update to\n     */\n\n    return function updateClientMetaInfo(newInfo) {\n      var htmlTag = document.getElementsByTagName('html')[0]; // if this is not a server render, then update\n\n      if (htmlTag.getAttribute(ssrAttribute) === null) {\n        // initialize tracked changes\n        var addedTags = {};\n        var removedTags = {};\n        Object.keys(newInfo).forEach(function (key) {\n          switch (key) {\n            // update the title\n            case 'title':\n              _updateTitle(options)(newInfo.title);\n\n              break;\n            // update attributes\n\n            case 'htmlAttrs':\n              _updateTagAttributes(options)(newInfo[key], htmlTag);\n\n              break;\n\n            case 'bodyAttrs':\n              _updateTagAttributes(options)(newInfo[key], document.getElementsByTagName('body')[0]);\n\n              break;\n\n            case 'headAttrs':\n              _updateTagAttributes(options)(newInfo[key], document.getElementsByTagName('head')[0]);\n\n              break;\n            // ignore these\n\n            case 'titleChunk':\n            case 'titleTemplate':\n            case 'changed':\n            case '__dangerouslyDisableSanitizers':\n              break;\n            // catch-all update tags\n\n            default:\n              var headTag = document.getElementsByTagName('head')[0];\n              var bodyTag = document.getElementsByTagName('body')[0];\n\n              var ref = _updateTags(options)(key, newInfo[key], headTag, bodyTag);\n\n              var oldTags = ref.oldTags;\n              var newTags = ref.newTags;\n\n              if (newTags.length) {\n                addedTags[key] = newTags;\n                removedTags[key] = oldTags;\n              }\n\n          }\n        }); // emit \"event\" with new info\n\n        if (typeof newInfo.changed === 'function') {\n          newInfo.changed.call(this, newInfo, addedTags, removedTags);\n        }\n      } else {\n        // remove the server render attribute so we can update on changes\n        htmlTag.removeAttribute(ssrAttribute);\n      }\n    };\n  }\n\n  function _refresh(options) {\n    if (options === void 0) options = {};\n    /**\n     * When called, will update the current meta info with new meta info.\n     * Useful when updating meta info as the result of an asynchronous\n     * action that resolves after the initial render takes place.\n     *\n     * Credit to [Sébastien Chopin](https://github.com/Atinux) for the suggestion\n     * to implement this method.\n     *\n     * @return {Object} - new meta info\n     */\n\n    return function refresh() {\n      var info = _getMetaInfo(options)(this.$root);\n\n      _updateClientMetaInfo(options).call(this, info);\n\n      return info;\n    };\n  }\n\n  function _$meta(options) {\n    if (options === void 0) options = {};\n    /**\n     * Returns an injector for server-side rendering.\n     * @this {Object} - the Vue instance (a root component)\n     * @return {Object} - injector\n     */\n\n    return function $meta() {\n      return {\n        inject: _inject(options).bind(this),\n        refresh: _refresh(options).bind(this)\n      };\n    };\n  } // fallback to timers if rAF not present\n\n\n  var stopUpdate = (typeof window !== 'undefined' ? window.cancelAnimationFrame : null) || clearTimeout;\n\n  var startUpdate = (typeof window !== 'undefined' ? window.requestAnimationFrame : null) || function (cb) {\n    return setTimeout(cb, 0);\n  };\n  /**\n   * Performs a batched update. Uses requestAnimationFrame to prevent\n   * calling a function too many times in quick succession.\n   * You need to pass it an ID (which can initially be `null`),\n   * but be sure to overwrite that ID with the return value of batchUpdate.\n   *\n   * @param  {(null|Number)} id - the ID of this update\n   * @param  {Function} callback - the update to perform\n   * @return {Number} id - a new ID\n   */\n\n\n  function batchUpdate(id, callback) {\n    stopUpdate(id);\n    return startUpdate(function () {\n      id = null;\n      callback();\n    });\n  }\n  /**\n   * These are constant variables used throughout the application.\n   */\n  // This is the name of the component option that contains all the information that\n  // gets converted to the various meta tags & attributes for the page.\n\n\n  var VUE_META_KEY_NAME = 'metaInfo'; // This is the attribute vue-meta augments on elements to know which it should\n  // manage and which it should ignore.\n\n  var VUE_META_ATTRIBUTE = 'data-vue-meta'; // This is the attribute that goes on the `html` tag to inform `vue-meta`\n  // that the server has already generated the meta tags for the initial render.\n\n  var VUE_META_SERVER_RENDERED_ATTRIBUTE = 'data-vue-meta-server-rendered'; // This is the property that tells vue-meta to overwrite (instead of append)\n  // an item in a tag list. For example, if you have two `meta` tag list items\n  // that both have `vmid` of \"description\", then vue-meta will overwrite the\n  // shallowest one with the deepest one.\n\n  var VUE_META_TAG_LIST_ID_KEY_NAME = 'vmid'; // This is the key name for possible meta templates\n\n  var VUE_META_TEMPLATE_KEY_NAME = 'template'; // This is the key name for the content-holding property\n\n  var VUE_META_CONTENT_KEY = 'content'; // automatic install\n\n  if (typeof window !== 'undefined' && typeof window.Vue !== 'undefined') {\n    Vue.use(VueMeta);\n  }\n  /**\n   * Plugin install function.\n   * @param {Function} Vue - the Vue constructor.\n   */\n\n\n  function VueMeta(Vue, options) {\n    if (options === void 0) options = {}; // set some default options\n\n    var defaultOptions = {\n      keyName: VUE_META_KEY_NAME,\n      contentKeyName: VUE_META_CONTENT_KEY,\n      metaTemplateKeyName: VUE_META_TEMPLATE_KEY_NAME,\n      attribute: VUE_META_ATTRIBUTE,\n      ssrAttribute: VUE_META_SERVER_RENDERED_ATTRIBUTE,\n      tagIDKeyName: VUE_META_TAG_LIST_ID_KEY_NAME\n    }; // combine options\n\n    options = objectAssign(defaultOptions, options); // bind the $meta method to this component instance\n\n    Vue.prototype.$meta = _$meta(options); // store an id to keep track of DOM updates\n\n    var batchID = null; // watch for client side component updates\n\n    Vue.mixin({\n      beforeCreate: function beforeCreate() {\n        // Add a marker to know if it uses metaInfo\n        // _vnode is used to know that it's attached to a real component\n        // useful if we use some mixin to add some meta tags (like nuxt-i18n)\n        if (typeof this.$options[options.keyName] !== 'undefined') {\n          this._hasMetaInfo = true;\n        } // coerce function-style metaInfo to a computed prop so we can observe\n        // it on creation\n\n\n        if (typeof this.$options[options.keyName] === 'function') {\n          if (typeof this.$options.computed === 'undefined') {\n            this.$options.computed = {};\n          }\n\n          this.$options.computed.$metaInfo = this.$options[options.keyName];\n        }\n      },\n      created: function created() {\n        var this$1 = this; // if computed $metaInfo exists, watch it for updates & trigger a refresh\n        // when it changes (i.e. automatically handle async actions that affect metaInfo)\n        // credit for this suggestion goes to [Sébastien Chopin](https://github.com/Atinux)\n\n        if (!this.$isServer && this.$metaInfo) {\n          this.$watch('$metaInfo', function () {\n            // batch potential DOM updates to prevent extraneous re-rendering\n            batchID = batchUpdate(batchID, function () {\n              return this$1.$meta().refresh();\n            });\n          });\n        }\n      },\n      activated: function activated() {\n        var this$1 = this;\n\n        if (this._hasMetaInfo) {\n          // batch potential DOM updates to prevent extraneous re-rendering\n          batchID = batchUpdate(batchID, function () {\n            return this$1.$meta().refresh();\n          });\n        }\n      },\n      deactivated: function deactivated() {\n        var this$1 = this;\n\n        if (this._hasMetaInfo) {\n          // batch potential DOM updates to prevent extraneous re-rendering\n          batchID = batchUpdate(batchID, function () {\n            return this$1.$meta().refresh();\n          });\n        }\n      },\n      beforeMount: function beforeMount() {\n        var this$1 = this; // batch potential DOM updates to prevent extraneous re-rendering\n\n        if (this._hasMetaInfo) {\n          batchID = batchUpdate(batchID, function () {\n            return this$1.$meta().refresh();\n          });\n        }\n      },\n      destroyed: function destroyed() {\n        var this$1 = this; // do not trigger refresh on the server side\n\n        if (this.$isServer) {\n          return;\n        } // re-render meta data when returning from a child component to parent\n\n\n        if (this._hasMetaInfo) {\n          // Wait that element is hidden before refreshing meta tags (to support animations)\n          var interval = setInterval(function () {\n            if (this$1.$el && this$1.$el.offsetParent !== null) {\n              return;\n            }\n\n            clearInterval(interval);\n\n            if (!this$1.$parent) {\n              return;\n            }\n\n            batchID = batchUpdate(batchID, function () {\n              return this$1.$meta().refresh();\n            });\n          }, 50);\n        }\n      }\n    });\n  }\n\n  var version = \"1.5.3\";\n  VueMeta.version = version;\n  return VueMeta;\n});\n\n//# sourceURL=webpack:///./node_modules/vue-meta/lib/vue-meta.js?");

/***/ }),

/***/ "./node_modules/vue-native-websocket/dist/build.js":
/*!*********************************************************!*\
  !*** ./node_modules/vue-native-websocket/dist/build.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function (t, e) {\n   true ? module.exports = e() : undefined;\n}(\"undefined\" != typeof self ? self : this, function () {\n  return function (t) {\n    function e(o) {\n      if (n[o]) return n[o].exports;\n      var r = n[o] = {\n        i: o,\n        l: !1,\n        exports: {}\n      };\n      return t[o].call(r.exports, r, r.exports, e), r.l = !0, r.exports;\n    }\n\n    var n = {};\n    return e.m = t, e.c = n, e.d = function (t, n, o) {\n      e.o(t, n) || Object.defineProperty(t, n, {\n        configurable: !1,\n        enumerable: !0,\n        get: o\n      });\n    }, e.n = function (t) {\n      var n = t && t.__esModule ? function () {\n        return t.default;\n      } : function () {\n        return t;\n      };\n      return e.d(n, \"a\", n), n;\n    }, e.o = function (t, e) {\n      return Object.prototype.hasOwnProperty.call(t, e);\n    }, e.p = \"\", e(e.s = 1);\n  }([function (t, e, n) {\n    \"use strict\";\n\n    function o(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var r = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var o = e[n];\n          o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n        }\n      }\n\n      return function (e, n, o) {\n        return n && t(e.prototype, n), o && t(e, o), e;\n      };\n    }(),\n        i = function () {\n      function t() {\n        o(this, t), this.listeners = new Map();\n      }\n\n      return r(t, [{\n        key: \"addListener\",\n        value: function (t, e, n) {\n          return \"function\" == typeof e && (this.listeners.has(t) || this.listeners.set(t, []), this.listeners.get(t).push({\n            callback: e,\n            vm: n\n          }), !0);\n        }\n      }, {\n        key: \"removeListener\",\n        value: function (t, e, n) {\n          var o = this.listeners.get(t),\n              r = void 0;\n          return !!(o && o.length && (r = o.reduce(function (t, o, r) {\n            return \"function\" == typeof o.callback && o.callback === e && o.vm === n && (t = r), t;\n          }, -1)) > -1) && (o.splice(r, 1), this.listeners.set(t, o), !0);\n        }\n      }, {\n        key: \"emit\",\n        value: function (t) {\n          for (var e = arguments.length, n = Array(e > 1 ? e - 1 : 0), o = 1; o < e; o++) n[o - 1] = arguments[o];\n\n          var r = this.listeners.get(t);\n          return !(!r || !r.length) && (r.forEach(function (t) {\n            var e;\n            (e = t.callback).call.apply(e, [t.vm].concat(n));\n          }), !0);\n        }\n      }]), t;\n    }();\n\n    e.default = new i();\n  }, function (t, e, n) {\n    t.exports = n(2);\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function o(t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var r = n(3),\n        i = o(r),\n        s = n(0),\n        c = o(s);\n    e.default = {\n      install: function (t, e) {\n        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n        if (!e) throw new Error(\"[vue-native-socket] cannot locate connection\");\n        var o = null;\n        n.$setInstance = function (e) {\n          t.prototype.$socket = e;\n        }, n.connectManually ? (t.prototype.$connect = function () {\n          var r = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : e,\n              s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : n;\n          o = new i.default(r, s), t.prototype.$socket = o.WebSocket;\n        }, t.prototype.$disconnect = function () {\n          o && o.reconnection && (o.reconnection = !1), t.prototype.$socket && (t.prototype.$socket.close(), delete t.prototype.$socket);\n        }) : (o = new i.default(e, n), t.prototype.$socket = o.WebSocket);\n        var r = \"undefined\" != typeof Proxy && \"function\" == typeof Proxy && /native code/.test(Proxy.toString());\n        t.mixin({\n          created: function () {\n            var t = this,\n                e = this,\n                n = this.$options.sockets;\n            r ? (this.$options.sockets = new Proxy({}, {\n              set: function (t, n, o) {\n                return c.default.addListener(n, o, e), t[n] = o, !0;\n              },\n              deleteProperty: function (t, n) {\n                return c.default.removeListener(n, e.$options.sockets[n], e), delete t.key, !0;\n              }\n            }), n && Object.keys(n).forEach(function (e) {\n              t.$options.sockets[e] = n[e];\n            })) : Object.seal(this.$options.sockets);\n          },\n          beforeDestroy: function () {\n            var t = this;\n\n            if (r) {\n              var e = this.$options.sockets;\n              e && Object.keys(e).forEach(function (e) {\n                delete t.$options.sockets[e];\n              });\n            }\n          }\n        });\n      }\n    };\n  }, function (t, e, n) {\n    \"use strict\";\n\n    function o(t, e) {\n      if (!(t instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n\n    var r = function () {\n      function t(t, e) {\n        for (var n = 0; n < e.length; n++) {\n          var o = e[n];\n          o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(t, o.key, o);\n        }\n      }\n\n      return function (e, n, o) {\n        return n && t(e.prototype, n), o && t(e, o), e;\n      };\n    }(),\n        i = n(0),\n        s = function (t) {\n      return t && t.__esModule ? t : {\n        default: t\n      };\n    }(i),\n        c = function () {\n      function t(e) {\n        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n\n        if (o(this, t), this.format = n.format && n.format.toLowerCase(), e.startsWith(\"//\")) {\n          e = (\"https:\" === window.location.protocol ? \"wss\" : \"ws\") + \"://\" + e;\n        }\n\n        this.connectionUrl = e, this.opts = n, this.reconnection = this.opts.reconnection || !1, this.reconnectionAttempts = this.opts.reconnectionAttempts || 1 / 0, this.reconnectionDelay = this.opts.reconnectionDelay || 1e3, this.reconnectTimeoutId = 0, this.reconnectionCount = 0, this.passToStoreHandler = this.opts.passToStoreHandler || !1, this.connect(e, n), n.store && (this.store = n.store), n.mutations && (this.mutations = n.mutations), this.onEvent();\n      }\n\n      return r(t, [{\n        key: \"connect\",\n        value: function (t) {\n          var e = this,\n              n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n              o = n.protocol || \"\";\n          return this.WebSocket = n.WebSocket || (\"\" === o ? new WebSocket(t) : new WebSocket(t, o)), \"json\" === this.format && (\"sendObj\" in this.WebSocket || (this.WebSocket.sendObj = function (t) {\n            return e.WebSocket.send(JSON.stringify(t));\n          })), this.WebSocket;\n        }\n      }, {\n        key: \"reconnect\",\n        value: function () {\n          var t = this;\n          this.reconnectionCount <= this.reconnectionAttempts ? (this.reconnectionCount++, clearTimeout(this.reconnectTimeoutId), this.reconnectTimeoutId = setTimeout(function () {\n            t.store && t.passToStore(\"SOCKET_RECONNECT\", t.reconnectionCount), t.connect(t.connectionUrl, t.opts), t.onEvent();\n          }, this.reconnectionDelay)) : this.store && this.passToStore(\"SOCKET_RECONNECT_ERROR\", !0);\n        }\n      }, {\n        key: \"onEvent\",\n        value: function () {\n          var t = this;\n          [\"onmessage\", \"onclose\", \"onerror\", \"onopen\"].forEach(function (e) {\n            t.WebSocket[e] = function (n) {\n              s.default.emit(e, n), t.store && t.passToStore(\"SOCKET_\" + e, n), t.reconnection && \"onopen\" === e && (t.opts.$setInstance(n.currentTarget), t.reconnectionCount = 0), t.reconnection && \"onclose\" === e && t.reconnect();\n            };\n          });\n        }\n      }, {\n        key: \"passToStore\",\n        value: function (t, e) {\n          this.passToStoreHandler ? this.passToStoreHandler(t, e, this.defaultPassToStore.bind(this)) : this.defaultPassToStore(t, e);\n        }\n      }, {\n        key: \"defaultPassToStore\",\n        value: function (t, e) {\n          if (t.startsWith(\"SOCKET_\")) {\n            var n = \"commit\",\n                o = t.toUpperCase(),\n                r = e;\n            \"json\" === this.format && e.data && (r = JSON.parse(e.data), r.mutation ? o = [r.namespace || \"\", r.mutation].filter(function (t) {\n              return !!t;\n            }).join(\"/\") : r.action && (n = \"dispatch\", o = [r.namespace || \"\", r.action].filter(function (t) {\n              return !!t;\n            }).join(\"/\"))), this.mutations && (o = this.mutations[o] || o), this.store[n](o, r);\n          }\n        }\n      }]), t;\n    }();\n\n    e.default = c;\n  }]);\n});\n\n//# sourceURL=webpack:///./node_modules/vue-native-websocket/dist/build.js?");

/***/ }),

/***/ "./node_modules/vue-router/dist/vue-router.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/vue-router/dist/vue-router.esm.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n  * vue-router v3.0.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n\n/*  */\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[vue-router] \" + message);\n  }\n}\n\nfunction warn(condition, message) {\n  if (\"development\" !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn(\"[vue-router] \" + message);\n  }\n}\n\nfunction isError(err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1;\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render(_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n    data.routerView = true; // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {}); // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n\n    var depth = 0;\n    var inactive = false;\n\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n\n      if (parent._inactive) {\n        inactive = true;\n      }\n\n      parent = parent.$parent;\n    }\n\n    data.routerViewDepth = depth; // render previous view if the tree is inactive and kept-alive\n\n    if (inactive) {\n      return h(cache[name], data, children);\n    }\n\n    var matched = route.matched[depth]; // render empty node if no matched route\n\n    if (!matched) {\n      cache[name] = null;\n      return h();\n    }\n\n    var component = cache[name] = matched.components[name]; // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n\n      if (val && current !== vm || !val && current === vm) {\n        matched.instances[name] = val;\n      }\n    } // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;\n\n    (data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    }; // resolve props\n\n\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass); // pass non-declared props as attrs\n\n      var attrs = data.attrs = data.attrs || {};\n\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children);\n  }\n};\n\nfunction resolveProps(route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return;\n\n    case 'object':\n      return config;\n\n    case 'function':\n      return config(route);\n\n    case 'boolean':\n      return config ? route.params : undefined;\n\n    default:\n      if (true) {\n        warn(false, \"props in \\\"\" + route.path + \"\\\" is a \" + typeof config + \", \" + \"expecting an object, function or boolean.\");\n      }\n\n  }\n}\n\nfunction extend(to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n\n  return to;\n}\n/*  */\n\n\nvar encodeReserveRE = /[!'()*]/g;\n\nvar encodeReserveReplacer = function (c) {\n  return '%' + c.charCodeAt(0).toString(16);\n};\n\nvar commaRE = /%2C/g; // fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\n\nvar encode = function (str) {\n  return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');\n};\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery(query, extraQuery, _parseQuery) {\n  if (extraQuery === void 0) extraQuery = {};\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"development\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n\n  return parsedQuery;\n}\n\nfunction parseQuery(query) {\n  var res = {};\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res;\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0 ? decode(parts.join('=')) : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n  return res;\n}\n\nfunction stringifyQuery(obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return '';\n    }\n\n    if (val === null) {\n      return encode(key);\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return;\n        }\n\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&');\n    }\n\n    return encode(key) + '=' + encode(val);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&') : null;\n  return res ? \"?\" + res : '';\n}\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute(record, location, redirectedFrom, router) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var query = location.query || {};\n\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || record && record.name,\n    meta: record && record.meta || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n\n  return Object.freeze(route);\n}\n\nfunction clone(value) {\n  if (Array.isArray(value)) {\n    return value.map(clone);\n  } else if (value && typeof value === 'object') {\n    var res = {};\n\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n\n    return res;\n  } else {\n    return value;\n  }\n} // the starting route that represents the initial state\n\n\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch(record) {\n  var res = [];\n\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n\n  return res;\n}\n\nfunction getFullPath(ref, _stringifyQuery) {\n  var path = ref.path;\n  var query = ref.query;\n  if (query === void 0) query = {};\n  var hash = ref.hash;\n  if (hash === void 0) hash = '';\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash;\n}\n\nfunction isSameRoute(a, b) {\n  if (b === START) {\n    return a === b;\n  } else if (!b) {\n    return false;\n  } else if (a.path && b.path) {\n    return a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') && a.hash === b.hash && isObjectEqual(a.query, b.query);\n  } else if (a.name && b.name) {\n    return a.name === b.name && a.hash === b.hash && isObjectEqual(a.query, b.query) && isObjectEqual(a.params, b.params);\n  } else {\n    return false;\n  }\n}\n\nfunction isObjectEqual(a, b) {\n  if (a === void 0) a = {};\n  if (b === void 0) b = {}; // handle null value #1566\n\n  if (!a || !b) {\n    return a === b;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key]; // check nested equality\n\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal);\n    }\n\n    return String(aVal) === String(bVal);\n  });\n}\n\nfunction isIncludedRoute(current, target) {\n  return current.path.replace(trailingSlashRE, '/').indexOf(target.path.replace(trailingSlashRE, '/')) === 0 && (!target.hash || current.hash === target.hash) && queryIncludes(current.query, target.query);\n}\n\nfunction queryIncludes(current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/*  */\n// work around weird flow bug\n\n\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render(h) {\n    var this$1 = this;\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass; // Support global empty active class\n\n    var activeClassFallback = globalActiveClass == null ? 'router-link-active' : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null ? 'router-link-exact-active' : globalExactActiveClass;\n    var activeClass = this.activeClass == null ? activeClassFallback : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null ? exactActiveClassFallback : this.exactActiveClass;\n    var compareTarget = location.path ? createRoute(null, location, null, router) : route;\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact ? classes[exactActiveClass] : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = {\n      click: guardEvent\n    };\n\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) {\n        on[e] = handler;\n      });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = {\n        href: href\n      };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default);\n  }\n};\n\nfunction guardEvent(e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) {\n    return;\n  } // don't redirect when preventDefault called\n\n\n  if (e.defaultPrevented) {\n    return;\n  } // don't redirect on right click\n\n\n  if (e.button !== undefined && e.button !== 0) {\n    return;\n  } // don't redirect if `target=\"_blank\"`\n\n\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n\n    if (/\\b_blank\\b/i.test(target)) {\n      return;\n    }\n  } // this may be a Weex event which doesn't have this method\n\n\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n\n  return true;\n}\n\nfunction findAnchor(children) {\n  if (children) {\n    var child;\n\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (child.tag === 'a') {\n        return child;\n      }\n\n      if (child.children && (child = findAnchor(child.children))) {\n        return child;\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install(Vue) {\n  if (install.installed && _Vue === Vue) {\n    return;\n  }\n\n  install.installed = true;\n  _Vue = Vue;\n\n  var isDef = function (v) {\n    return v !== undefined;\n  };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n\n        this._router.init(this);\n\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = this.$parent && this.$parent._routerRoot || this;\n      }\n\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed() {\n      registerInstance(this);\n    }\n  });\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get() {\n      return this._routerRoot._router;\n    }\n  });\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get() {\n      return this._routerRoot._route;\n    }\n  });\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n  var strats = Vue.config.optionMergeStrategies; // use the same hook merging strategy for route hooks\n\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n/*  */\n\n\nvar inBrowser = typeof window !== 'undefined';\n/*  */\n\nfunction resolvePath(relative, base, append) {\n  var firstChar = relative.charAt(0);\n\n  if (firstChar === '/') {\n    return relative;\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative;\n  }\n\n  var stack = base.split('/'); // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  } // resolve relative path\n\n\n  var segments = relative.replace(/^\\//, '').split('/');\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  } // ensure leading slash\n\n\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/');\n}\n\nfunction parsePath(path) {\n  var hash = '';\n  var query = '';\n  var hashIndex = path.indexOf('#');\n\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  };\n}\n\nfunction cleanPath(path) {\n  return path.replace(/\\/\\//g, '/');\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n/**\n * Expose `pathToRegexp`.\n */\n\n\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\n\nvar PATH_REGEXP = new RegExp([// Match escaped characters that would otherwise appear in future matches.\n// This allows the user to escape special characters that won't transform.\n'(\\\\\\\\.)', // Match Express-style parameters and un-named parameters with a prefix\n// and optional suffixes. Matches appear as:\n//\n// \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n// \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n// \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n'([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'].join('|'), 'g');\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\n\nfunction parse(str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length; // Ignore already escaped sequences.\n\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7]; // Push the current path onto the tokens.\n\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?'\n    });\n  } // Match any characters still remaining.\n\n\n  if (index < str.length) {\n    path += str.substr(index);\n  } // If the path exists, push it onto the end.\n\n\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\n\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options));\n}\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeURIComponentPretty(str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\n\n\nfunction encodeAsterisk(str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\n\nfunction tokensToFunction(tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length); // Compile all the patterns before compilation.\n\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined');\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`');\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`');\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"');\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\n\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1');\n}\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\n\n\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1');\n}\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\n\n\nfunction attachKeys(re, keys) {\n  re.keys = keys;\n  return re;\n}\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\n\n\nfunction flags(options) {\n  return options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys);\n}\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction arrayToRegexp(path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n  return attachKeys(regexp, keys);\n}\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\n\n\nfunction tokensToRegExp(tokens, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = ''; // Iterate over the tokens and create our regexp string.\n\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter; // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys);\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\n\n\nfunction pathToRegexp(path, keys, options) {\n  if (!isarray(keys)) {\n    options =\n    /** @type {!Object} */\n    keys || options;\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path,\n    /** @type {!Array} */\n    keys);\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(\n    /** @type {!Array} */\n    path,\n    /** @type {!Array} */\n    keys, options);\n  }\n\n  return stringToRegexp(\n  /** @type {string} */\n  path,\n  /** @type {!Array} */\n  keys, options);\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n/*  */\n// $flow-disable-line\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams(path, params, routeMsg) {\n  try {\n    var filler = regexpCompileCache[path] || (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, {\n      pretty: true\n    });\n  } catch (e) {\n    if (true) {\n      warn(false, \"missing param for \" + routeMsg + \": \" + e.message);\n    }\n\n    return '';\n  }\n}\n/*  */\n\n\nfunction createRouteMap(routes, oldPathList, oldPathMap, oldNameMap) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || []; // $flow-disable-line\n\n  var pathMap = oldPathMap || Object.create(null); // $flow-disable-line\n\n  var nameMap = oldNameMap || Object.create(null);\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  }); // ensure wildcard routes are always at the end\n\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  };\n}\n\nfunction addRouteRecord(pathList, pathMap, nameMap, route, parent, matchAs) {\n  var path = route.path;\n  var name = route.name;\n\n  if (true) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(typeof route.component !== 'string', \"route config \\\"component\\\" for path: \" + String(path || name) + \" cannot be a \" + \"string id. Use an actual component instead.\");\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(path, parent, pathToRegexpOptions.strict);\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || {\n      default: route.component\n    },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null ? {} : route.components ? route.props : {\n      default: route.props\n    }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (true) {\n      if (route.name && !route.redirect && route.children.some(function (child) {\n        return /^\\/?$/.test(child.path);\n      })) {\n        warn(false, \"Named Route '\" + route.name + \"' has a default child route. \" + \"When navigating to this named route (:to=\\\"{name: '\" + route.name + \"'\\\"), \" + \"the default child route will not be rendered. Remove the name from \" + \"this route and use the name of the default child route for named \" + \"links instead.\");\n      }\n    }\n\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs ? cleanPath(matchAs + \"/\" + child.path) : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias) ? route.alias : [route.alias];\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(pathList, pathMap, nameMap, aliasRoute, parent, record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (\"development\" !== 'production' && !matchAs) {\n      warn(false, \"Duplicate named routes definition: \" + \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + record.path + \"\\\" }\");\n    }\n  }\n}\n\nfunction compileRouteRegex(path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n\n  if (true) {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], \"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\");\n      keys[key.name] = true;\n    });\n  }\n\n  return regex;\n}\n\nfunction normalizePath(path, parent, strict) {\n  if (!strict) {\n    path = path.replace(/\\/$/, '');\n  }\n\n  if (path[0] === '/') {\n    return path;\n  }\n\n  if (parent == null) {\n    return path;\n  }\n\n  return cleanPath(parent.path + \"/\" + path);\n}\n/*  */\n\n\nfunction normalizeLocation(raw, current, append, router) {\n  var next = typeof raw === 'string' ? {\n    path: raw\n  } : raw; // named target\n\n  if (next.name || next._normalized) {\n    return next;\n  } // relative params\n\n\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, \"path \" + current.path);\n    } else if (true) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n\n    return next;\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = current && current.path || '/';\n  var path = parsedPath.path ? resolvePath(parsedPath.path, basePath, append || next.append) : basePath;\n  var query = resolveQuery(parsedPath.query, next.query, router && router.options.parseQuery);\n  var hash = next.hash || parsedPath.hash;\n\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  };\n}\n\nfunction assign(a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n\n  return a;\n}\n/*  */\n\n\nfunction createMatcher(routes, router) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes(routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match(raw, currentRoute, redirectedFrom) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n\n      if (true) {\n        warn(record, \"Route with name '\" + name + \"' does not exist\");\n      }\n\n      if (!record) {\n        return _createRoute(null, location);\n      }\n\n      var paramNames = record.regex.keys.filter(function (key) {\n        return !key.optional;\n      }).map(function (key) {\n        return key.name;\n      });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, \"named route \\\"\" + name + \"\\\"\");\n        return _createRoute(record, location, redirectedFrom);\n      }\n    } else if (location.path) {\n      location.params = {};\n\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom);\n        }\n      }\n    } // no match\n\n\n    return _createRoute(null, location);\n  }\n\n  function redirect(record, location) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function' ? originalRedirect(createRoute(record, location, null, router)) : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = {\n        path: redirect\n      };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (true) {\n        warn(false, \"invalid redirect option: \" + JSON.stringify(redirect));\n      }\n\n      return _createRoute(null, location);\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n\n      if (true) {\n        assert(targetRecord, \"redirect failed: named route \\\"\" + name + \"\\\" not found.\");\n      }\n\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location);\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record); // 2. resolve params\n\n      var resolvedPath = fillParams(rawPath, params, \"redirect route with path \\\"\" + rawPath + \"\\\"\"); // 3. rematch with existing query and hash\n\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location);\n    } else {\n      if (true) {\n        warn(false, \"invalid redirect option: \" + JSON.stringify(redirect));\n      }\n\n      return _createRoute(null, location);\n    }\n  }\n\n  function alias(record, location, matchAs) {\n    var aliasedPath = fillParams(matchAs, location.params, \"aliased route with path \\\"\" + matchAs + \"\\\"\");\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location);\n    }\n\n    return _createRoute(null, location);\n  }\n\n  function _createRoute(record, location, redirectedFrom) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location);\n    }\n\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs);\n    }\n\n    return createRoute(record, location, redirectedFrom, router);\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  };\n}\n\nfunction matchRoute(regex, path, params) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false;\n  } else if (!params) {\n    return true;\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true;\n}\n\nfunction resolveRecordPath(path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true);\n}\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll() {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({\n    key: getStateKey()\n  }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll(router, to, from, isPop) {\n  if (!router.app) {\n    return;\n  }\n\n  var behavior = router.options.scrollBehavior;\n\n  if (!behavior) {\n    return;\n  }\n\n  if (true) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  } // wait until re-render finishes before scrolling\n\n\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return;\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition(shouldScroll, position);\n      }).catch(function (err) {\n        if (true) {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition() {\n  var key = getStateKey();\n\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition() {\n  var key = getStateKey();\n\n  if (key) {\n    return positionStore[key];\n  }\n}\n\nfunction getElementPosition(el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  };\n}\n\nfunction isValidPosition(obj) {\n  return isNumber(obj.x) || isNumber(obj.y);\n}\n\nfunction normalizePosition(obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  };\n}\n\nfunction normalizeOffset(obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  };\n}\n\nfunction isNumber(v) {\n  return typeof v === 'number';\n}\n\nfunction scrollToPosition(shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n/*  */\n\n\nvar supportsPushState = inBrowser && function () {\n  var ua = window.navigator.userAgent;\n\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) {\n    return false;\n  }\n\n  return window.history && 'pushState' in window.history;\n}(); // use User Timing api (if present) for more accurate key precision\n\n\nvar Time = inBrowser && window.performance && window.performance.now ? window.performance : Date;\n\nvar _key = genKey();\n\nfunction genKey() {\n  return Time.now().toFixed(3);\n}\n\nfunction getStateKey() {\n  return _key;\n}\n\nfunction setStateKey(key) {\n  _key = key;\n}\n\nfunction pushState(url, replace) {\n  saveScrollPosition(); // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n\n  var history = window.history;\n\n  try {\n    if (replace) {\n      history.replaceState({\n        key: _key\n      }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({\n        key: _key\n      }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState(url) {\n  pushState(url, true);\n}\n/*  */\n\n\nfunction runQueue(queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n\n  step(0);\n}\n/*  */\n\n\nfunction resolveAsyncComponents(matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          } // save resolved on async factory in case it's used elsewhere\n\n\n          def.resolved = typeof resolvedDef === 'function' ? resolvedDef : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n\n          if (pending <= 0) {\n            next();\n          }\n        });\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"development\" !== 'production' && warn(false, msg);\n\n          if (!error) {\n            error = isError(reason) ? reason : new Error(msg);\n            next(error);\n          }\n        });\n        var res;\n\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) {\n      next();\n    }\n  };\n}\n\nfunction flatMapComponents(matched, fn) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return fn(m.components[key], m.instances[key], m, key);\n    });\n  }));\n}\n\nfunction flatten(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\n\nvar hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule(obj) {\n  return obj.__esModule || hasSymbol && obj[Symbol.toStringTag] === 'Module';\n} // in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\n\n\nfunction once(fn) {\n  var called = false;\n  return function () {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    if (called) {\n      return;\n    }\n\n    called = true;\n    return fn.apply(this, args);\n  };\n}\n/*  */\n\n\nvar History = function History(router, base) {\n  this.router = router;\n  this.base = normalizeBase(base); // start with a route object that stands for \"nowhere\"\n\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen(cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady(cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError(errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo(location, onComplete, onAbort) {\n  var this$1 = this;\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL(); // fire ready cbs once\n\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) {\n        cb(route);\n      });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) {\n        cb(err);\n      });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition(route, onComplete, onAbort) {\n  var this$1 = this;\n  var current = this.current;\n\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) {\n          cb(err);\n        });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n\n    onAbort && onAbort(err);\n  };\n\n  if (isSameRoute(route, current) && // in the case the route map has been dynamically appended to\n  route.matched.length === current.matched.length) {\n    this.ensureURL();\n    return abort();\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n  var updated = ref.updated;\n  var deactivated = ref.deactivated;\n  var activated = ref.activated;\n  var queue = [].concat( // in-component leave guards\n  extractLeaveGuards(deactivated), // global before hooks\n  this.router.beforeHooks, // in-component update hooks\n  extractUpdateHooks(updated), // in-config enter guards\n  activated.map(function (m) {\n    return m.beforeEnter;\n  }), // async components\n  resolveAsyncComponents(activated));\n  this.pending = route;\n\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort();\n    }\n\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (typeof to === 'string' || typeof to === 'object' && (typeof to.path === 'string' || typeof to.name === 'string')) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n\n    var isValid = function () {\n      return this$1.current === route;\n    }; // wait until async components are resolved before\n    // extracting in-component enter guards\n\n\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort();\n      }\n\n      this$1.pending = null;\n      onComplete(route);\n\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) {\n            cb();\n          });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute(route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase(base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = baseEl && baseEl.getAttribute('href') || '/'; // strip full URL origin\n\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  } // make sure there's the starting slash\n\n\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  } // remove trailing slash\n\n\n  return base.replace(/\\/$/, '');\n}\n\nfunction resolveQueue(current, next) {\n  var i;\n  var max = Math.max(current.length, next.length);\n\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break;\n    }\n  }\n\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  };\n}\n\nfunction extractGuards(records, name, bind, reverse) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n\n    if (guard) {\n      return Array.isArray(guard) ? guard.map(function (guard) {\n        return bind(guard, instance, match, key);\n      }) : bind(guard, instance, match, key);\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards);\n}\n\nfunction extractGuard(def, key) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n\n  return def.options[key];\n}\n\nfunction extractLeaveGuards(deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true);\n}\n\nfunction extractUpdateHooks(updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard);\n}\n\nfunction bindGuard(guard, instance) {\n  if (instance) {\n    return function boundRouteGuard() {\n      return guard.apply(instance, arguments);\n    };\n  }\n}\n\nfunction extractEnterGuards(activated, cbs, isValid) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid);\n  });\n}\n\nfunction bindEnterGuard(guard, match, key, cbs, isValid) {\n  return function routeEnterGuard(to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    });\n  };\n}\n\nfunction poll(cb, // somehow flow cannot infer this is a function\ninstances, key, isValid) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n/*  */\n\n\nvar HTML5History = function (History$$1) {\n  function HTML5History(router, base) {\n    var this$1 = this;\n    History$$1.call(this, router, base);\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current; // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n\n      var location = getLocation(this$1.base);\n\n      if (this$1.current === START && location === initLocation) {\n        return;\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if (History$$1) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create(History$$1 && History$$1.prototype);\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go(n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push(location, onComplete, onAbort) {\n    var this$1 = this;\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace(location, onComplete, onAbort) {\n    var this$1 = this;\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL(push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation() {\n    return getLocation(this.base);\n  };\n\n  return HTML5History;\n}(History);\n\nfunction getLocation(base) {\n  var path = window.location.pathname;\n\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n\n  return (path || '/') + window.location.search + window.location.hash;\n}\n/*  */\n\n\nvar HashHistory = function (History$$1) {\n  function HashHistory(router, base, fallback) {\n    History$$1.call(this, router, base); // check history fallback deeplinking\n\n    if (fallback && checkFallback(this.base)) {\n      return;\n    }\n\n    ensureSlash();\n  }\n\n  if (History$$1) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create(History$$1 && History$$1.prototype);\n  HashHistory.prototype.constructor = HashHistory; // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n\n  HashHistory.prototype.setupListeners = function setupListeners() {\n    var this$1 = this;\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n\n      if (!ensureSlash()) {\n        return;\n      }\n\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push(location, onComplete, onAbort) {\n    var this$1 = this;\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace(location, onComplete, onAbort) {\n    var this$1 = this;\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go(n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL(push) {\n    var current = this.current.fullPath;\n\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation() {\n    return getHash();\n  };\n\n  return HashHistory;\n}(History);\n\nfunction checkFallback(base) {\n  var location = getLocation(base);\n\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(cleanPath(base + '/#' + location));\n    return true;\n  }\n}\n\nfunction ensureSlash() {\n  var path = getHash();\n\n  if (path.charAt(0) === '/') {\n    return true;\n  }\n\n  replaceHash('/' + path);\n  return false;\n}\n\nfunction getHash() {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1);\n}\n\nfunction getUrl(path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return base + \"#\" + path;\n}\n\nfunction pushHash(path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash(path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n/*  */\n\n\nvar AbstractHistory = function (History$$1) {\n  function AbstractHistory(router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if (History$$1) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create(History$$1 && History$$1.prototype);\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push(location, onComplete, onAbort) {\n    var this$1 = this;\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace(location, onComplete, onAbort) {\n    var this$1 = this;\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go(n) {\n    var this$1 = this;\n    var targetIndex = this.index + n;\n\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return;\n    }\n\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation() {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/';\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL() {// noop\n  };\n\n  return AbstractHistory;\n}(History);\n/*  */\n\n\nvar VueRouter = function VueRouter(options) {\n  if (options === void 0) options = {};\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n\n  if (this.fallback) {\n    mode = 'hash';\n  }\n\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break;\n\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break;\n\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break;\n\n    default:\n      if (true) {\n        assert(false, \"invalid mode: \" + mode);\n      }\n\n  }\n};\n\nvar prototypeAccessors = {\n  currentRoute: {\n    configurable: true\n  }\n};\n\nVueRouter.prototype.match = function match(raw, current, redirectedFrom) {\n  return this.matcher.match(raw, current, redirectedFrom);\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current;\n};\n\nVueRouter.prototype.init = function init(app\n/* Vue component instance */\n) {\n  var this$1 = this;\n  \"development\" !== 'production' && assert(install.installed, \"not installed. Make sure to call `Vue.use(VueRouter)` \" + \"before creating root instance.\");\n  this.apps.push(app); // main app already initialized.\n\n  if (this.app) {\n    return;\n  }\n\n  this.app = app;\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n\n    history.transitionTo(history.getCurrentLocation(), setupHashListener, setupHashListener);\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach(fn) {\n  return registerHook(this.beforeHooks, fn);\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve(fn) {\n  return registerHook(this.resolveHooks, fn);\n};\n\nVueRouter.prototype.afterEach = function afterEach(fn) {\n  return registerHook(this.afterHooks, fn);\n};\n\nVueRouter.prototype.onReady = function onReady(cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError(errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push(location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace(location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go(n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back() {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward() {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents(to) {\n  var route = to ? to.matched ? to : this.resolve(to).route : this.currentRoute;\n\n  if (!route) {\n    return [];\n  }\n\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key];\n    });\n  }));\n};\n\nVueRouter.prototype.resolve = function resolve(to, current, append) {\n  var location = normalizeLocation(to, current || this.history.current, append, this);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  };\n};\n\nVueRouter.prototype.addRoutes = function addRoutes(routes) {\n  this.matcher.addRoutes(routes);\n\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties(VueRouter.prototype, prototypeAccessors);\n\nfunction registerHook(list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n\n    if (i > -1) {\n      list.splice(i, 1);\n    }\n  };\n}\n\nfunction createHref(base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path;\n}\n\nVueRouter.install = install;\nVueRouter.version = '3.0.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (VueRouter);\n\n//# sourceURL=webpack:///./node_modules/vue-router/dist/vue-router.esm.js?");

/***/ }),

/***/ "./node_modules/vue-scrollto/vue-scrollto.js":
/*!***************************************************!*\
  !*** ./node_modules/vue-scrollto/vue-scrollto.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function (global, factory) {\n   true ? module.exports = factory() : undefined;\n})(this, function () {\n  'use strict';\n  /**\n   * https://github.com/gre/bezier-easing\n   * BezierEasing - use bezier curve for transition easing function\n   * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n   */\n  // These values are established by empiricism with tests (tradeoff: performance VS precision)\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n  var float32ArraySupported = typeof Float32Array === 'function';\n\n  function A(aA1, aA2) {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n\n  function B(aA1, aA2) {\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n\n  function C(aA1) {\n    return 3.0 * aA1;\n  } // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n\n\n  function calcBezier(aT, aA1, aA2) {\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  } // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n\n\n  function getSlope(aT, aA1, aA2) {\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    var currentX,\n        currentT,\n        i = 0;\n\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n\n    return aGuessT;\n  }\n\n  var src = function bezier(mX1, mY1, mX2, mY2) {\n    if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n      throw new Error('bezier x values must be in [0, 1] range');\n    } // Precompute samples table\n\n\n    var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n\n    if (mX1 !== mY1 || mX2 !== mY2) {\n      for (var i = 0; i < kSplineTableSize; ++i) {\n        sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    function getTForX(aX) {\n      var intervalStart = 0.0;\n      var currentSample = 1;\n      var lastSample = kSplineTableSize - 1;\n\n      for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n        intervalStart += kSampleStepSize;\n      }\n\n      --currentSample; // Interpolate to provide an initial guess for t\n\n      var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n      var guessForT = intervalStart + dist * kSampleStepSize;\n      var initialSlope = getSlope(guessForT, mX1, mX2);\n\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n      } else if (initialSlope === 0.0) {\n        return guessForT;\n      } else {\n        return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n      }\n    }\n\n    return function BezierEasing(x) {\n      if (mX1 === mY1 && mX2 === mY2) {\n        return x; // linear\n      } // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n\n\n      if (x === 0) {\n        return 0;\n      }\n\n      if (x === 1) {\n        return 1;\n      }\n\n      return calcBezier(getTForX(x), mY1, mY2);\n    };\n  };\n\n  var easings = {\n    ease: [0.25, 0.1, 0.25, 1.0],\n    linear: [0.00, 0.0, 1.00, 1.0],\n    \"ease-in\": [0.42, 0.0, 1.00, 1.0],\n    \"ease-out\": [0.00, 0.0, 0.58, 1.0],\n    \"ease-in-out\": [0.42, 0.0, 0.58, 1.0]\n  }; // https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n  var supportsPassive = false;\n\n  try {\n    var opts = Object.defineProperty({}, \"passive\", {\n      get: function get() {\n        supportsPassive = true;\n      }\n    });\n    window.addEventListener(\"test\", null, opts);\n  } catch (e) {}\n\n  var _ = {\n    $: function $(selector) {\n      if (typeof selector !== \"string\") {\n        return selector;\n      }\n\n      return document.querySelector(selector);\n    },\n    on: function on(element, events, handler) {\n      var opts = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n        passive: false\n      };\n\n      if (!(events instanceof Array)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        element.addEventListener(events[i], handler, supportsPassive ? opts : false);\n      }\n    },\n    off: function off(element, events, handler) {\n      if (!(events instanceof Array)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        element.removeEventListener(events[i], handler);\n      }\n    },\n    cumulativeOffset: function cumulativeOffset(element) {\n      var top = 0;\n      var left = 0;\n\n      do {\n        top += element.offsetTop || 0;\n        left += element.offsetLeft || 0;\n        element = element.offsetParent;\n      } while (element);\n\n      return {\n        top: top,\n        left: left\n      };\n    }\n  };\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var abortEvents = [\"mousedown\", \"wheel\", \"DOMMouseScroll\", \"mousewheel\", \"keyup\", \"touchmove\"];\n  var defaults$$1 = {\n    container: \"body\",\n    duration: 500,\n    easing: \"ease\",\n    offset: 0,\n    force: true,\n    cancelable: true,\n    onStart: false,\n    onDone: false,\n    onCancel: false,\n    x: false,\n    y: true\n  };\n\n  function setDefaults(options) {\n    defaults$$1 = _extends({}, defaults$$1, options);\n  }\n\n  var scroller = function scroller() {\n    var element = void 0; // element to scroll to\n\n    var container = void 0; // container to scroll\n\n    var duration = void 0; // duration of the scrolling\n\n    var easing = void 0; // easing to be used when scrolling\n\n    var offset = void 0; // offset to be added (subtracted)\n\n    var force = void 0; // force scroll, even if element is visible\n\n    var cancelable = void 0; // indicates if user can cancel the scroll or not.\n\n    var onStart = void 0; // callback when scrolling is started\n\n    var onDone = void 0; // callback when scrolling is done\n\n    var onCancel = void 0; // callback when scrolling is canceled / aborted\n\n    var x = void 0; // scroll on x axis\n\n    var y = void 0; // scroll on y axis\n\n    var initialX = void 0; // initial X of container\n\n    var targetX = void 0; // target X of container\n\n    var initialY = void 0; // initial Y of container\n\n    var targetY = void 0; // target Y of container\n\n    var diffX = void 0; // difference\n\n    var diffY = void 0; // difference\n\n    var abort = void 0; // is scrolling aborted\n\n    var abortEv = void 0; // event that aborted scrolling\n\n    var abortFn = function abortFn(e) {\n      if (!cancelable) return;\n      abortEv = e;\n      abort = true;\n    };\n\n    var easingFn = void 0;\n    var timeStart = void 0; // time when scrolling started\n\n    var timeElapsed = void 0; // time elapsed since scrolling started\n\n    var progress = void 0; // progress\n\n    function scrollTop(container) {\n      var scrollTop = container.scrollTop;\n\n      if (container.tagName.toLowerCase() === \"body\") {\n        // in firefox body.scrollTop always returns 0\n        // thus if we are trying to get scrollTop on a body tag\n        // we need to get it from the documentElement\n        scrollTop = scrollTop || document.documentElement.scrollTop;\n      }\n\n      return scrollTop;\n    }\n\n    function scrollLeft(container) {\n      var scrollLeft = container.scrollLeft;\n\n      if (container.tagName.toLowerCase() === \"body\") {\n        // in firefox body.scrollLeft always returns 0\n        // thus if we are trying to get scrollLeft on a body tag\n        // we need to get it from the documentElement\n        scrollLeft = scrollLeft || document.documentElement.scrollLeft;\n      }\n\n      return scrollLeft;\n    }\n\n    function step(timestamp) {\n      if (abort) return done();\n      if (!timeStart) timeStart = timestamp;\n      timeElapsed = timestamp - timeStart;\n      progress = Math.min(timeElapsed / duration, 1);\n      progress = easingFn(progress);\n      topLeft(container, initialY + diffY * progress, initialX + diffX * progress);\n      timeElapsed < duration ? window.requestAnimationFrame(step) : done();\n    }\n\n    function done() {\n      if (!abort) topLeft(container, targetY, targetX);\n      timeStart = false;\n\n      _.off(container, abortEvents, abortFn);\n\n      if (abort && onCancel) onCancel(abortEv, element);\n      if (!abort && onDone) onDone(element);\n    }\n\n    function topLeft(element, top, left) {\n      if (y) element.scrollTop = top;\n      if (x) element.scrollLeft = left;\n\n      if (element.tagName.toLowerCase() === \"body\") {\n        // in firefox body.scrollTop doesn't scroll the page\n        // thus if we are trying to scrollTop on a body tag\n        // we need to scroll on the documentElement\n        if (y) document.documentElement.scrollTop = top;\n        if (x) document.documentElement.scrollLeft = left;\n      }\n    }\n\n    function scrollTo(target, _duration) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      if ((typeof _duration === \"undefined\" ? \"undefined\" : _typeof(_duration)) === \"object\") {\n        options = _duration;\n      } else if (typeof _duration === \"number\") {\n        options.duration = _duration;\n      }\n\n      element = _.$(target);\n\n      if (!element) {\n        return console.warn(\"[vue-scrollto warn]: Trying to scroll to an element that is not on the page: \" + target);\n      }\n\n      container = _.$(options.container || defaults$$1.container);\n      duration = options.duration || defaults$$1.duration;\n      easing = options.easing || defaults$$1.easing;\n      offset = options.offset || defaults$$1.offset;\n      force = options.hasOwnProperty(\"force\") ? options.force !== false : defaults$$1.force;\n      cancelable = options.hasOwnProperty(\"cancelable\") ? options.cancelable !== false : defaults$$1.cancelable;\n      onStart = options.onStart || defaults$$1.onStart;\n      onDone = options.onDone || defaults$$1.onDone;\n      onCancel = options.onCancel || defaults$$1.onCancel;\n      x = options.x === undefined ? defaults$$1.x : options.x;\n      y = options.y === undefined ? defaults$$1.y : options.y;\n\n      var cumulativeOffsetContainer = _.cumulativeOffset(container);\n\n      var cumulativeOffsetElement = _.cumulativeOffset(element);\n\n      if (typeof offset === \"function\") {\n        offset = offset();\n      }\n\n      initialY = scrollTop(container);\n      targetY = cumulativeOffsetElement.top - cumulativeOffsetContainer.top + offset;\n      initialX = scrollLeft(container);\n      targetX = cumulativeOffsetElement.left - cumulativeOffsetContainer.left + offset;\n      abort = false;\n      diffY = targetY - initialY;\n      diffX = targetX - initialX;\n\n      if (!force) {\n        var containerTop = initialY;\n        var containerBottom = containerTop + container.offsetHeight;\n        var elementTop = targetY;\n        var elementBottom = elementTop + element.offsetHeight;\n\n        if (elementTop >= containerTop && elementBottom <= containerBottom) {\n          return;\n        }\n      }\n\n      if (typeof easing === \"string\") {\n        easing = easings[easing] || easings[\"ease\"];\n      }\n\n      easingFn = src.apply(src, easing);\n      if (!diffY && !diffX) return;\n      if (onStart) onStart(element);\n\n      _.on(container, abortEvents, abortFn, {\n        passive: true\n      });\n\n      window.requestAnimationFrame(step);\n      return function () {\n        abortEv = null;\n        abort = true;\n      };\n    }\n\n    return scrollTo;\n  };\n\n  var _scroller = scroller();\n\n  var bindings = []; // store binding data\n\n  function deleteBinding(el) {\n    for (var i = 0; i < bindings.length; ++i) {\n      if (bindings[i].el === el) {\n        bindings.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function findBinding(el) {\n    for (var i = 0; i < bindings.length; ++i) {\n      if (bindings[i].el === el) {\n        return bindings[i];\n      }\n    }\n  }\n\n  function getBinding(el) {\n    var binding = findBinding(el);\n\n    if (binding) {\n      return binding;\n    }\n\n    bindings.push(binding = {\n      el: el,\n      binding: {}\n    });\n    return binding;\n  }\n\n  function handleClick(e) {\n    e.preventDefault();\n    var ctx = getBinding(this).binding;\n\n    if (typeof ctx.value === \"string\") {\n      return _scroller(ctx.value);\n    }\n\n    _scroller(ctx.value.el || ctx.value.element, ctx.value);\n  }\n\n  var VueScrollTo$1 = {\n    bind: function bind(el, binding) {\n      getBinding(el).binding = binding;\n\n      _.on(el, \"click\", handleClick);\n    },\n    unbind: function unbind(el) {\n      deleteBinding(el);\n\n      _.off(el, \"click\", handleClick);\n    },\n    update: function update(el, binding) {\n      getBinding(el).binding = binding;\n    },\n    scrollTo: _scroller,\n    bindings: bindings\n  };\n\n  var install = function install(Vue, options) {\n    if (options) setDefaults(options);\n    Vue.directive(\"scroll-to\", VueScrollTo$1);\n    Vue.prototype.$scrollTo = VueScrollTo$1.scrollTo;\n  };\n\n  if (typeof window !== \"undefined\" && window.Vue) {\n    window.VueScrollTo = VueScrollTo$1;\n    window.VueScrollTo.setDefaults = setDefaults;\n    window.Vue.use(install);\n  }\n\n  VueScrollTo$1.install = install;\n  return VueScrollTo$1;\n});\n\n//# sourceURL=webpack:///./node_modules/vue-scrollto/vue-scrollto.js?");

/***/ }),

/***/ "./node_modules/vue-snotify/vue-snotify.esm.js":
/*!*****************************************************!*\
  !*** ./node_modules/vue-snotify/vue-snotify.esm.js ***!
  \*****************************************************/
/*! exports provided: SnotifyPosition, SnotifyStyle, SnotifyToast, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SnotifyPosition\", function() { return SnotifyPosition; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SnotifyStyle\", function() { return SnotifyStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SnotifyToast\", function() { return SnotifyToast; });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\");\n/**\n * vue-snotify v3.2.0\n * (c) 2018 artemsky <mr.artemsky@gmail.com>\n * @license MIT\n */\n\n/**\r\n * Toast position\r\n */\n\nvar SnotifyPosition;\n\n(function (SnotifyPosition) {\n  SnotifyPosition[\"leftTop\"] = \"leftTop\";\n  SnotifyPosition[\"leftCenter\"] = \"leftCenter\";\n  SnotifyPosition[\"leftBottom\"] = \"leftBottom\";\n  SnotifyPosition[\"rightTop\"] = \"rightTop\";\n  SnotifyPosition[\"rightCenter\"] = \"rightCenter\";\n  SnotifyPosition[\"rightBottom\"] = \"rightBottom\";\n  SnotifyPosition[\"centerTop\"] = \"centerTop\";\n  SnotifyPosition[\"centerCenter\"] = \"centerCenter\";\n  SnotifyPosition[\"centerBottom\"] = \"centerBottom\";\n})(SnotifyPosition || (SnotifyPosition = {}));\n/**\r\n * Toast style.\r\n */\n\n\nvar SnotifyStyle = {\n  simple: 'simple',\n  success: 'success',\n  error: 'error',\n  warning: 'warning',\n  info: 'info',\n  async: 'async',\n  confirm: 'confirm',\n  prompt: 'prompt'\n};\nvar script = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n  props: ['toast'],\n  data: function () {\n    return {\n      isPromptFocused: false\n    };\n  },\n  methods: {\n    valueChanged: function (e) {\n      this.toast.value = e.target.value;\n      this.toast.eventEmitter.$emit('input');\n    }\n  }\n});\n/* script */\n\nconst __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('span', {\n    staticClass: \"snotifyToast__input\",\n    class: {\n      'snotifyToast__input--filled': _vm.isPromptFocused\n    }\n  }, [_c('input', {\n    staticClass: \"snotifyToast__input__field\",\n    attrs: {\n      \"type\": \"text\",\n      \"id\": _vm.toast.id\n    },\n    on: {\n      \"input\": _vm.valueChanged,\n      \"focus\": function ($event) {\n        _vm.isPromptFocused = true;\n      },\n      \"blur\": function ($event) {\n        _vm.isPromptFocused = !!_vm.toast.value.length;\n      }\n    }\n  }), _vm._v(\" \"), _c('label', {\n    staticClass: \"snotifyToast__input__label\",\n    attrs: {\n      \"for\": _vm.toast.id\n    }\n  }, [_c('span', {\n    staticClass: \"snotifyToast__input__labelContent\"\n  }, [_vm._v(_vm._s(_vm._f(\"truncate\")(_vm.toast.config.placeholder)))])])]);\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nconst __vue_inject_styles__ = undefined;\n/* scoped */\n\nconst __vue_scope_id__ = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__ = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__ = false;\n/* component normalizer */\n\nfunction __vue_normalize__(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  const component = (typeof script$$1 === 'function' ? script$$1.options : script$$1) || {};\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n  return component;\n}\n/* style inject */\n\n\nfunction __vue_create_injector__() {\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});\n  const isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = {\n      ids: [],\n      parts: [],\n      element: undefined\n    });\n\n    if (!style.ids.includes(id)) {\n      let code = css.source;\n      let index = style.ids.length;\n      style.ids.push(id);\n\n      if (true && css.map) {\n        // https://developer.chrome.com/devtools/docs/javascript-debugging\n        // this makes source maps inside style tags work properly in Chrome\n        code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n        code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n      }\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        const el = style.element = document.createElement('style');\n        el.type = 'text/css';\n        if (css.media) el.setAttribute('media', css.media);\n\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        const textNode = document.createTextNode(code);\n        const nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\n\nvar SnotifyPrompt = __vue_normalize__({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, __vue_create_injector__, undefined);\n\nvar script$1 = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n  props: ['toast'],\n  methods: {\n    remove: function () {\n      this.$snotify.remove(this.toast.id);\n    }\n  }\n});\n/* script */\n\nconst __vue_script__$1 = script$1;\n/* template */\n\nvar __vue_render__$1 = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"snotifyToast__buttons\"\n  }, _vm._l(_vm.toast.config.buttons, function (button) {\n    return _c('button', {\n      class: [{\n        'snotifyToast__buttons--bold': button.bold\n      }, button.className],\n      attrs: {\n        \"type\": \"button\"\n      },\n      on: {\n        \"click\": function ($event) {\n          $event.preventDefault();\n          $event.stopPropagation();\n          button.action ? button.action(_vm.toast) : _vm.remove();\n        }\n      }\n    }, [_vm._v(\"\\n    \" + _vm._s(button.text) + \"\\n  \")]);\n  }));\n};\n\nvar __vue_staticRenderFns__$1 = [];\n/* style */\n\nconst __vue_inject_styles__$1 = undefined;\n/* scoped */\n\nconst __vue_scope_id__$1 = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__$1 = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__$1 = false;\n/* component normalizer */\n\nfunction __vue_normalize__$1(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  const component = (typeof script === 'function' ? script.options : script) || {};\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n  return component;\n}\n/* style inject */\n\n\nfunction __vue_create_injector__$1() {\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});\n  const isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = {\n      ids: [],\n      parts: [],\n      element: undefined\n    });\n\n    if (!style.ids.includes(id)) {\n      let code = css.source;\n      let index = style.ids.length;\n      style.ids.push(id);\n\n      if (true && css.map) {\n        // https://developer.chrome.com/devtools/docs/javascript-debugging\n        // this makes source maps inside style tags work properly in Chrome\n        code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n        code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n      }\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        const el = style.element = document.createElement('style');\n        el.type = 'text/css';\n        if (css.media) el.setAttribute('media', css.media);\n\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        const textNode = document.createTextNode(code);\n        const nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\n\nvar SnotifyButton = __vue_normalize__$1({\n  render: __vue_render__$1,\n  staticRenderFns: __vue_staticRenderFns__$1\n}, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, __vue_create_injector__$1, undefined);\n\nvar script$2 = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n  props: ['toastData'],\n  components: {\n    SnotifyPrompt: SnotifyPrompt,\n    SnotifyButton: SnotifyButton\n  },\n  data: function () {\n    return {\n      toast: this.toastData,\n      animationFrame: null,\n      state: {\n        paused: false,\n        progress: 0,\n        animation: '',\n        isDestroying: false,\n        promptType: SnotifyStyle.prompt\n      }\n    };\n  },\n  methods: {\n    /**\r\n     * Initialize base toast config\r\n     */\n    initToast: function () {\n      if (this.toast.config.timeout > 0) {\n        this.startTimeout(0);\n      }\n    },\n    onClick: function () {\n      this.toast.eventEmitter.$emit('click');\n\n      if (this.toast.config.closeOnClick) {\n        this.$snotify.remove(this.toast.id);\n      }\n    },\n    onMouseEnter: function () {\n      this.toast.eventEmitter.$emit('mouseenter');\n\n      if (this.toast.config.pauseOnHover) {\n        this.state.paused = true;\n      }\n    },\n    onMouseLeave: function () {\n      if (this.toast.config.pauseOnHover && this.toast.config.timeout) {\n        this.state.paused = false;\n        this.startTimeout(this.toast.config.timeout * this.state.progress);\n      }\n\n      this.toast.eventEmitter.$emit('mouseleave');\n    },\n\n    /**\r\n     * Remove toast completely after animation\r\n     */\n    onExitTransitionEnd: function () {\n      if (this.state.isDestroying) {\n        return;\n      }\n\n      this.initToast();\n      this.toast.eventEmitter.$emit('shown');\n    },\n\n    /**\r\n     * Start progress bar\r\n     * @param startTime {number}\r\n     * @default 0\r\n     */\n    startTimeout: function (startTime) {\n      var _this = this;\n\n      if (startTime === void 0) {\n        startTime = 0;\n      }\n\n      var start = performance.now();\n\n      var calculate = function () {\n        _this.animationFrame = requestAnimationFrame(function (timestamp) {\n          var runtime = timestamp + startTime - start;\n          var progress = Math.min(runtime / _this.toast.config.timeout, 1);\n\n          if (_this.state.paused) {\n            cancelAnimationFrame(_this.animationFrame);\n          } else if (runtime < _this.toast.config.timeout) {\n            _this.state.progress = progress;\n            calculate();\n          } else {\n            _this.state.progress = 1;\n            cancelAnimationFrame(_this.animationFrame);\n\n            _this.$snotify.emitter.$emit('remove', _this.toast.id);\n          }\n        });\n      };\n\n      calculate();\n    },\n\n    /**\r\n     * Trigger beforeDestroy lifecycle. Removes toast\r\n     */\n    onRemove: function () {\n      var _this = this;\n\n      this.state.isDestroying = true;\n      this.$emit('stateChanged', 'beforeHide');\n      this.toast.eventEmitter.$emit('beforeHide');\n      this.state.animation = this.toast.config.animation.exit;\n      setTimeout(function () {\n        _this.$emit('stateChanged', 'hidden');\n\n        _this.state.animation = 'snotifyToast--out';\n\n        _this.toast.eventEmitter.$emit('hidden');\n\n        setTimeout(function () {\n          return _this.$snotify.remove(_this.toast.id, true);\n        }, _this.toast.config.animation.time / 2);\n      }, this.toast.config.animation.time / 2);\n    }\n  },\n  created: function () {\n    var _this = this;\n\n    this.$snotify.emitter.$on('toastChanged', function (toast) {\n      if (_this.toast.id === toast.id) {\n        _this.initToast();\n      }\n    });\n    this.$snotify.emitter.$on('remove', function (id) {\n      if (_this.toast.id === id) {\n        _this.onRemove();\n      }\n    });\n  },\n  mounted: function () {\n    var _this = this;\n\n    this.$nextTick(function () {\n      _this.toast.eventEmitter.$emit('mounted');\n\n      _this.state.animation = 'snotifyToast--in';\n\n      _this.$nextTick(function () {\n        setTimeout(function () {\n          _this.$emit('stateChanged', 'beforeShow');\n\n          _this.toast.eventEmitter.$emit('beforeShow');\n\n          _this.state.animation = _this.toast.config.animation.enter;\n        }, _this.toast.config.animation.time / 5); // time to show toast push animation (snotifyToast--in)\n      });\n    });\n  },\n  destroyed: function () {\n    cancelAnimationFrame(this.animationFrame);\n    this.toast.eventEmitter.$emit('destroyed');\n  }\n});\n/* script */\n\nconst __vue_script__$2 = script$2;\n/* template */\n\nvar __vue_render__$2 = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', {\n    staticClass: \"snotifyToast animated\",\n    class: ['snotify-' + _vm.toast.config.type, _vm.state.animation, _vm.toast.valid === undefined ? '' : _vm.toast.valid ? 'snotifyToast--valid' : 'snotifyToast--invalid'],\n    style: {\n      '-webkit-animation-duration': _vm.toast.config.animation.time + 'ms',\n      'animation-duration': _vm.toast.config.animation.time + 'ms',\n      '-webkit-transition': _vm.toast.config.animation.time + 'ms',\n      transition: _vm.toast.config.animation.time + 'ms'\n    },\n    on: {\n      \"click\": _vm.onClick,\n      \"mouseenter\": _vm.onMouseEnter,\n      \"mouseleave\": _vm.onMouseLeave,\n      \"animationend\": _vm.onExitTransitionEnd\n    }\n  }, [_vm.toast.config.showProgressBar && _vm.toast.config.timeout > 0 ? _c('div', {\n    staticClass: \"snotifyToast__progressBar\"\n  }, [_c('span', {\n    staticClass: \"snotifyToast__progressBar__percentage\",\n    style: {\n      'width': _vm.state.progress * 100 + '%'\n    }\n  })]) : _vm._e(), _vm._v(\" \"), !_vm.toast.config.html ? _c('div', {\n    staticClass: \"snotifyToast__inner\",\n    class: {\n      'snotifyToast__noIcon': _vm.toast.config.icon === false\n    }\n  }, [_vm.toast.title ? _c('div', {\n    staticClass: \"snotifyToast__title\"\n  }, [_vm._v(_vm._s(_vm._f(\"truncate\")(_vm.toast.title, _vm.toast.config.titleMaxLength)))]) : _vm._e(), _vm._v(\" \"), _vm.toast.body ? _c('div', {\n    staticClass: \"snotifyToast__body\"\n  }, [_vm._v(_vm._s(_vm._f(\"truncate\")(_vm.toast.body, _vm.toast.config.bodyMaxLength)))]) : _vm._e(), _vm._v(\" \"), _vm.toast.config.type === _vm.state.promptType ? _c('snotify-prompt', {\n    attrs: {\n      \"toast\": _vm.toast\n    }\n  }) : _vm._e(), _vm._v(\" \"), typeof _vm.toast.config.icon === 'undefined' ? _c('div', {\n    class: ['snotify-icon', 'snotify-icon--' + _vm.toast.config.type]\n  }) : _vm.toast.config.icon !== false ? _c('div', [_c('img', {\n    staticClass: \"snotify-icon\",\n    attrs: {\n      \"src\": _vm.toast.config.icon\n    }\n  })]) : _vm._e()], 1) : _c('div', {\n    staticClass: \"snotifyToast__inner\",\n    domProps: {\n      \"innerHTML\": _vm._s(_vm.toast.config.html)\n    }\n  }), _vm._v(\" \"), _vm.toast.config.buttons ? _c('snotify-button', {\n    attrs: {\n      \"toast\": _vm.toast\n    }\n  }) : _vm._e()], 1);\n};\n\nvar __vue_staticRenderFns__$2 = [];\n/* style */\n\nconst __vue_inject_styles__$2 = undefined;\n/* scoped */\n\nconst __vue_scope_id__$2 = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__$2 = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__$2 = false;\n/* component normalizer */\n\nfunction __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  const component = (typeof script === 'function' ? script.options : script) || {};\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n  return component;\n}\n/* style inject */\n\n\nfunction __vue_create_injector__$2() {\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const styles = __vue_create_injector__$2.styles || (__vue_create_injector__$2.styles = {});\n  const isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = {\n      ids: [],\n      parts: [],\n      element: undefined\n    });\n\n    if (!style.ids.includes(id)) {\n      let code = css.source;\n      let index = style.ids.length;\n      style.ids.push(id);\n\n      if (true && css.map) {\n        // https://developer.chrome.com/devtools/docs/javascript-debugging\n        // this makes source maps inside style tags work properly in Chrome\n        code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n        code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n      }\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        const el = style.element = document.createElement('style');\n        el.type = 'text/css';\n        if (css.media) el.setAttribute('media', css.media);\n\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        const textNode = document.createTextNode(code);\n        const nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\n\nvar Toast = __vue_normalize__$2({\n  render: __vue_render__$2,\n  staticRenderFns: __vue_staticRenderFns__$2\n}, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, __vue_create_injector__$2, undefined);\n\nvar script$3 = vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n  components: {\n    Toast: Toast\n  },\n  data: function () {\n    return {\n      /**\r\n       * Toasts array\r\n       */\n      notifications: {\n        left_top: [],\n        left_center: [],\n        left_bottom: [],\n        right_top: [],\n        right_center: [],\n        right_bottom: [],\n        center_top: [],\n        center_center: [],\n        center_bottom: []\n      },\n\n      /**\r\n       * Helper for slice pipe (maxOnScreen)\r\n       */\n      dockSize_a: 0,\n\n      /**\r\n       * Helper for slice pipe (maxOnScreen)\r\n       */\n      dockSize_b: 0,\n\n      /**\r\n       * Helper for slice pipe (maxAtPosition)\r\n       */\n      blockSize_a: 0,\n\n      /**\r\n       * Helper for slice pipe (maxAtPosition)\r\n       */\n      blockSize_b: 0,\n\n      /**\r\n       * Backdrop Opacity\r\n       */\n      backdrop: -1,\n\n      /**\r\n       * How many toasts with backdrop in current queue\r\n       */\n      withBackdrop: []\n    };\n  },\n  methods: {\n    setOptions: function (toasts) {\n      if (this.$snotify.config.global.newOnTop) {\n        this.dockSize_a = -this.$snotify.config.global.maxOnScreen;\n        this.dockSize_b = undefined;\n        this.blockSize_a = -this.$snotify.config.global.maxAtPosition;\n        this.blockSize_b = undefined;\n        this.withBackdrop = toasts.filter(function (toast) {\n          return toast.config.backdrop >= 0;\n        });\n      } else {\n        this.dockSize_a = 0;\n        this.dockSize_b = this.$snotify.config.global.maxOnScreen;\n        this.blockSize_a = 0;\n        this.blockSize_b = this.$snotify.config.global.maxAtPosition;\n        this.withBackdrop = toasts.filter(function (toast) {\n          return toast.config.backdrop >= 0;\n        }).reverse();\n      }\n\n      this.notifications = this.splitToasts(toasts.slice(this.dockSize_a, this.dockSize_b));\n      this.stateChanged('mounted');\n    },\n    // TODO: fix backdrop if more than one toast called in a row\n\n    /**\r\n     * Changes the backdrop opacity\r\n     * @param {SnotifyEvent} event\r\n     */\n    stateChanged: function (event) {\n      if (!this.withBackdrop.length) {\n        return;\n      }\n\n      switch (event) {\n        case 'mounted':\n          if (this.backdrop < 0) {\n            this.backdrop = 0;\n          }\n\n          break;\n\n        case 'beforeShow':\n          this.backdrop = this.withBackdrop[this.withBackdrop.length - 1].config.backdrop;\n          break;\n\n        case 'beforeHide':\n          if (this.withBackdrop.length === 1) {\n            this.backdrop = 0;\n          }\n\n          break;\n\n        case 'hidden':\n          if (this.withBackdrop.length === 1) {\n            this.backdrop = -1;\n          }\n\n          break;\n      }\n    },\n\n    /**\r\n     * Split toasts toasts into different objects\r\n     * @param {SnotifyToast[]} toasts\r\n     * @returns {SnotifyNotifications}\r\n     */\n    splitToasts: function (toasts) {\n      var result = {};\n\n      for (var property in SnotifyPosition) {\n        if (SnotifyPosition.hasOwnProperty(property)) {\n          result[SnotifyPosition[property]] = [];\n        }\n      }\n\n      toasts.forEach(function (toast) {\n        result[toast.config.position].push(toast);\n      });\n      return result;\n    }\n  },\n  created: function () {\n    var _this = this;\n\n    this.$snotify.emitter.$on('snotify', function (toasts) {\n      _this.setOptions(toasts);\n    });\n  }\n});\n/* script */\n\nconst __vue_script__$3 = script$3;\n/* template */\n\nvar __vue_render__$3 = function () {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div', [_vm.backdrop >= 0 ? _c('div', {\n    staticClass: \"snotify-backdrop\",\n    style: {\n      opacity: _vm.backdrop\n    }\n  }) : _vm._e(), _vm._v(\" \"), _vm._l(_vm.notifications, function (position, index) {\n    return _c('div', {\n      staticClass: \"snotify\",\n      class: 'snotify-' + index\n    }, _vm._l(_vm.notifications[index].slice(_vm.blockSize_a, _vm.blockSize_b), function (toast) {\n      return _c('toast', {\n        key: toast.id,\n        attrs: {\n          \"toastData\": toast\n        },\n        on: {\n          \"stateChanged\": _vm.stateChanged\n        }\n      });\n    }));\n  })], 2);\n};\n\nvar __vue_staticRenderFns__$3 = [];\n/* style */\n\nconst __vue_inject_styles__$3 = undefined;\n/* scoped */\n\nconst __vue_scope_id__$3 = undefined;\n/* module identifier */\n\nconst __vue_module_identifier__$3 = undefined;\n/* functional template */\n\nconst __vue_is_functional_template__$3 = false;\n/* component normalizer */\n\nfunction __vue_normalize__$3(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  const component = (typeof script === 'function' ? script.options : script) || {};\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n  return component;\n}\n/* style inject */\n\n\nfunction __vue_create_injector__$3() {\n  const head = document.head || document.getElementsByTagName('head')[0];\n  const styles = __vue_create_injector__$3.styles || (__vue_create_injector__$3.styles = {});\n  const isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    const group = isOldIE ? css.media || 'default' : id;\n    const style = styles[group] || (styles[group] = {\n      ids: [],\n      parts: [],\n      element: undefined\n    });\n\n    if (!style.ids.includes(id)) {\n      let code = css.source;\n      let index = style.ids.length;\n      style.ids.push(id);\n\n      if (true && css.map) {\n        // https://developer.chrome.com/devtools/docs/javascript-debugging\n        // this makes source maps inside style tags work properly in Chrome\n        code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */'; // http://stackoverflow.com/a/26603875\n\n        code += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) + ' */';\n      }\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        const el = style.element = document.createElement('style');\n        el.type = 'text/css';\n        if (css.media) el.setAttribute('media', css.media);\n\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        const textNode = document.createTextNode(code);\n        const nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\n\nvar Snotify = __vue_normalize__$3({\n  render: __vue_render__$3,\n  staticRenderFns: __vue_staticRenderFns__$3\n}, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, __vue_create_injector__$3, undefined);\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\n\nvar __assign = Object.assign || function __assign(t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nfunction __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nfunction __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n/**\r\n * Toast model\r\n */\n\n\nvar SnotifyToast =\n/** @class */\nfunction () {\n  /**\r\n   *\r\n   * @param {number|string} id\r\n   * @param {string} title\r\n   * @param {string} body\r\n   * @param {SnotifyToastConfig} [config]\r\n   */\n  function SnotifyToast(id, title, body, config) {\n    var _this = this;\n\n    this.id = id;\n    this.title = title;\n    this.body = body;\n    this.config = config;\n    /**\r\n     * Emits {SnotifyEvent}\r\n     * @type {Vue}\r\n     */\n\n    this.eventEmitter = new vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    /**\r\n     * Holds all subscribers because we need to unsubscribe from all before toast get destroyed\r\n     * @type {Vue[]}\r\n     * @private\r\n     */\n\n    this._eventsHolder = [];\n    /**\r\n     * Toast validator\r\n     */\n\n    this.valid = undefined;\n\n    if (this.config.type === SnotifyStyle.prompt) {\n      this.value = '';\n    }\n\n    this.on('hidden', function () {\n      _this._eventsHolder.forEach(function (o) {\n        _this.eventEmitter.$off(o.event, o.action);\n      });\n    });\n  }\n  /**\r\n   * This callback is displayed as a global member.\r\n   * @callback action\r\n   * @param {toast} responseCode\r\n   * @returns {void}\r\n   */\n\n  /**\r\n   * Subscribe to toast events\r\n   * @param {String<SnotifyEvent>} event\r\n   * @param  {SnotifyToast~action} action\r\n   * @returns {SnotifyToast}\r\n   */\n\n\n  SnotifyToast.prototype.on = function (event, action) {\n    var _this = this;\n\n    this._eventsHolder.push({\n      event: event,\n      action: action\n    });\n\n    this.eventEmitter.$on(event, function () {\n      return action(_this);\n    });\n    return this;\n  };\n\n  return SnotifyToast;\n}();\n/**\r\n * Snotify default configuration object\r\n * @type {SnotifyDefaults}\r\n */\n\n\nvar ToastDefaults = {\n  global: {\n    newOnTop: true,\n    maxOnScreen: 8,\n    maxAtPosition: 8,\n    oneAtTime: false,\n    preventDuplicates: false\n  },\n  toast: {\n    type: SnotifyStyle.simple,\n    showProgressBar: true,\n    timeout: 2000,\n    closeOnClick: true,\n    pauseOnHover: true,\n    bodyMaxLength: 150,\n    titleMaxLength: 16,\n    backdrop: -1,\n    icon: undefined,\n    html: null,\n    position: SnotifyPosition.rightBottom,\n    animation: {\n      enter: 'fadeIn',\n      exit: 'fadeOut',\n      time: 400\n    }\n  },\n  type: (_a = {}, _a[SnotifyStyle.prompt] = {\n    timeout: 0,\n    closeOnClick: false,\n    buttons: [{\n      text: 'Ok',\n      action: null,\n      bold: true\n    }, {\n      text: 'Cancel',\n      action: null,\n      bold: false\n    }],\n    placeholder: 'Enter answer here...',\n    type: SnotifyStyle.prompt\n  }, _a[SnotifyStyle.confirm] = {\n    timeout: 0,\n    closeOnClick: false,\n    buttons: [{\n      text: 'Ok',\n      action: null,\n      bold: true\n    }, {\n      text: 'Cancel',\n      action: null,\n      bold: false\n    }],\n    type: SnotifyStyle.confirm\n  }, _a[SnotifyStyle.simple] = {\n    type: SnotifyStyle.simple\n  }, _a[SnotifyStyle.success] = {\n    type: SnotifyStyle.success\n  }, _a[SnotifyStyle.error] = {\n    type: SnotifyStyle.error\n  }, _a[SnotifyStyle.warning] = {\n    type: SnotifyStyle.warning\n  }, _a[SnotifyStyle.info] = {\n    type: SnotifyStyle.info\n  }, _a[SnotifyStyle.async] = {\n    pauseOnHover: false,\n    closeOnClick: false,\n    timeout: 0,\n    showProgressBar: false,\n    type: SnotifyStyle.async\n  }, _a)\n};\n\nvar _a;\n/**\r\n * Transform arguments to Snotify object\r\n * @param target\r\n * @param {SnotifyType} propertyKey\r\n * @param {PropertyDescriptor} descriptor\r\n * @returns {Snotify}\r\n * @constructor\r\n */\n\n\nfunction TransformArgument(target, propertyKey, descriptor) {\n  if (propertyKey === SnotifyStyle.async) {\n    return {\n      value: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var result;\n\n        if (args.length === 2) {\n          result = {\n            title: null,\n            body: args[0],\n            config: null,\n            action: args[1]\n          };\n        } else if (args.length === 3) {\n          if (typeof args[1] === 'string') {\n            result = {\n              title: args[1],\n              body: args[0],\n              config: null,\n              action: args[2]\n            };\n          } else {\n            result = {\n              title: null,\n              body: args[0],\n              config: args[2],\n              action: args[1]\n            };\n          }\n        } else {\n          result = {\n            title: args[1],\n            body: args[0],\n            config: args[3],\n            action: args[2]\n          };\n        }\n\n        return descriptor.value.apply(this, [result]);\n      }\n    };\n  } else {\n    return {\n      value: function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var result;\n\n        if (args.length === 1) {\n          result = {\n            title: null,\n            body: args[0],\n            config: null\n          };\n        } else if (args.length === 3) {\n          result = {\n            title: args[1],\n            body: args[0],\n            config: args[2]\n          };\n        } else {\n          result = (_a = {\n            title: null,\n            config: null,\n            body: args[0]\n          }, _a[typeof args[1] === 'string' ? 'title' : 'config'] = args[1], _a);\n        }\n\n        return descriptor.value.apply(this, [result]);\n\n        var _a;\n      }\n    };\n  }\n}\n/**\r\n * Generates random id\r\n * @return {number}\r\n */\n\n\nfunction uuid() {\n  return Math.floor(Math.random() * (Date.now() - 1)) + 1;\n}\n/**\r\n * Simple is object check.\r\n * @param item {Object<any>}\r\n * @returns {boolean}\r\n */\n\n\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item) && item !== null;\n}\n/**\r\n * Deep merge objects.\r\n * @param sources {Array<Object<any>>}\r\n * @returns {Object<any>}\r\n */\n\n\nfunction mergeDeep() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  var target = {};\n\n  if (!sources.length) {\n    return target;\n  }\n\n  while (sources.length > 0) {\n    var source = sources.shift();\n\n    if (isObject(source)) {\n      for (var key in source) {\n        if (isObject(source[key])) {\n          target[key] = mergeDeep(target[key], source[key]);\n        } else {\n          Object.assign(target, (_a = {}, _a[key] = source[key], _a));\n        }\n      }\n    }\n  }\n\n  return target;\n\n  var _a;\n}\n/**\r\n * Defines toast style depending on method name\r\n * @param target\r\n * @param {SnotifyType} propertyKey\r\n * @param {PropertyDescriptor} descriptor\r\n * @returns {{value: ((...args: any[]) => any)}}\r\n * @constructor\r\n */\n\n\nfunction SetToastType(target, propertyKey, descriptor) {\n  return {\n    value: function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      args[0].config = __assign({}, args[0].config, {\n        type: propertyKey\n      });\n      return descriptor.value.apply(this, args);\n    }\n  };\n}\n/**\r\n * this - create, remove, config toasts\r\n */\n// tslint:disable:unified-signatures\n\n\nvar SnotifyService =\n/** @class */\nfunction () {\n  function SnotifyService() {\n    this.emitter = new vue__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    this.notifications = [];\n    this.config = ToastDefaults;\n  }\n  /**\r\n   * emit changes in notifications array\r\n   */\n\n\n  SnotifyService.prototype.emit = function () {\n    this.emitter.$emit('snotify', this.notifications.slice());\n  };\n  /**\r\n   * returns SnotifyToast object\r\n   * @param id {Number}\r\n   * @return {SnotifyToast|undefined}\r\n   */\n\n\n  SnotifyService.prototype.get = function (id) {\n    return this.notifications.find(function (toast) {\n      return toast.id === id;\n    });\n  };\n  /**\r\n   * add SnotifyToast to notifications array\r\n   * @param toast {SnotifyToast}\r\n   */\n\n\n  SnotifyService.prototype.add = function (toast) {\n    if (this.config.global.newOnTop) {\n      this.notifications.unshift(toast);\n    } else {\n      this.notifications.push(toast);\n    }\n\n    this.emit();\n  };\n  /**\r\n   * If ID passed, emits toast animation remove, if ID & REMOVE passed, removes toast from notifications array\r\n   * @param id {number}\r\n   * @param remove {boolean}\r\n   */\n\n\n  SnotifyService.prototype.remove = function (id, remove) {\n    if (!id) {\n      return this.clear();\n    } else if (remove) {\n      this.notifications = this.notifications.filter(function (toast) {\n        return toast.id !== id;\n      });\n      return this.emit();\n    }\n\n    this.emitter.$emit('remove', id);\n  };\n  /**\r\n   * Clear notifications array\r\n   */\n\n\n  SnotifyService.prototype.clear = function () {\n    this.notifications = [];\n    this.emit();\n  };\n\n  SnotifyService.prototype.button = function (text, closeOnClick, action, bold) {\n    var _this = this;\n\n    if (closeOnClick === void 0) {\n      closeOnClick = true;\n    }\n\n    if (action === void 0) {\n      action = null;\n    }\n\n    if (bold === void 0) {\n      bold = false;\n    }\n\n    return {\n      text: text,\n      action: closeOnClick ? function (toast) {\n        action(toast);\n\n        _this.remove(toast.id);\n      } : action,\n      bold: bold\n    };\n  };\n  /**\r\n   * Creates toast and add it to array, returns toast id\r\n   * @param snotify {Snotify}\r\n   * @return {number}\r\n   */\n\n\n  SnotifyService.prototype.create = function (snotify) {\n    if (this.config.global.oneAtTime && this.notifications.length !== 0) return;\n    if (this.config.global.preventDuplicates && this.notifications.filter(function (t) {\n      return t.config.type === snotify.config.type;\n    }).length === 1) return;\n    var config = mergeDeep(this.config.toast, this.config.type[snotify.config.type], snotify.config);\n    var toast = new SnotifyToast(config.id ? config.id : uuid(), snotify.title, snotify.body, config);\n    this.add(toast);\n    return toast;\n  };\n\n  SnotifyService.prototype.setDefaults = function (defaults) {\n    return this.config = mergeDeep(this.config, defaults);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.simple = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.success = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.error = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.info = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.warning = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.confirm = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.prompt = function (args) {\n    return this.create(args);\n  };\n  /**\r\n   * Transform toast arguments into {Snotify} object\r\n   */\n\n\n  SnotifyService.prototype.async = function (args) {\n    var _this = this;\n\n    var async = args.action;\n    var toast = this.create(args);\n    toast.on('mounted', function () {\n      async().then(function (next) {\n        return _this.mergeToast(toast, next, SnotifyStyle.success);\n      }).catch(function (error) {\n        return _this.mergeToast(toast, error, SnotifyStyle.error);\n      });\n    });\n    return toast;\n  };\n\n  SnotifyService.prototype.mergeToast = function (toast, next, type) {\n    if (next.body) {\n      toast.body = next.body;\n    }\n\n    if (next.title) {\n      toast.title = next.title;\n    }\n\n    if (type) {\n      toast.config = mergeDeep(toast.config, this.config.global, this.config.toast[type], {\n        type: type\n      }, next.config);\n    } else {\n      toast.config = mergeDeep(toast.config, next.config);\n    }\n\n    if (next.html) {\n      toast.config.html = next.html;\n    }\n\n    this.emit();\n    this.emitter.$emit('toastChanged', toast);\n  };\n  /**\r\n   * Creates empty toast with html string inside\r\n   * @param {string} html\r\n   * @param {SnotifyToastConfig} config\r\n   * @returns {number}\r\n   */\n\n\n  SnotifyService.prototype.html = function (html, config) {\n    return this.create({\n      title: null,\n      body: null,\n      config: __assign({}, config, {\n        html: html\n      })\n    });\n  };\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"simple\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"success\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"error\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"info\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"warning\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"confirm\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"prompt\", null);\n\n  __decorate([TransformArgument\n  /**\r\n   * Determines current toast type and collects default configuration\r\n   */\n  , SetToastType, __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", SnotifyToast)], SnotifyService.prototype, \"async\", null);\n\n  return SnotifyService;\n}();\n\nvar Plugin = {\n  install: function (Vue$$1, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    Vue$$1.filter('truncate', function (value, limit, trail) {\n      if (limit === void 0) {\n        limit = 40;\n      }\n\n      if (trail === void 0) {\n        trail = '...';\n      }\n\n      return value.length > limit ? value.substring(0, limit) + trail : value;\n    });\n    var service = new SnotifyService();\n    service.setDefaults(options);\n    Vue$$1.prototype.$snotify = service;\n    Vue$$1.component('vue-snotify', Snotify); // auto install\n\n    if (typeof window !== 'undefined' && window.hasOwnProperty('Vue')) {\n      window.Snotify = service;\n    }\n  }\n}; // auto install\n\nif (typeof window !== 'undefined' && window.hasOwnProperty('Vue')) {\n  window.Vue.use(Plugin.install);\n}\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Plugin);\n\n//# sourceURL=webpack:///./node_modules/vue-snotify/vue-snotify.esm.js?");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/addStylesClient.js":
/*!**************************************************************!*\
  !*** ./node_modules/vue-style-loader/lib/addStylesClient.js ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return addStylesClient; });\n/* harmony import */ var _listToStyles__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./listToStyles */ \"./node_modules/vue-style-loader/lib/listToStyles.js\");\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\n\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nfunction addStylesClient (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = Object(_listToStyles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = Object(_listToStyles__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n//# sourceURL=webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js?");

/***/ }),

/***/ "./node_modules/vue-style-loader/lib/listToStyles.js":
/*!***********************************************************!*\
  !*** ./node_modules/vue-style-loader/lib/listToStyles.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return listToStyles; });\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nfunction listToStyles(parentId, list) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\n//# sourceURL=webpack:///./node_modules/vue-style-loader/lib/listToStyles.js?");

/***/ }),

/***/ "./node_modules/vue-truncate-collapsed/dist/vue-truncate-collapsed.es.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/vue-truncate-collapsed/dist/vue-truncate-collapsed.es.js ***!
  \*******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*!\n * vue-truncate-collapsed v2.1.0\n * (c) 2018-present João Vitor Cavalcante\n * Released under the MIT License.\n */\n(function () {\n  if (typeof document !== 'undefined') {\n    var head = document.head || document.getElementsByTagName('head')[0],\n        style = document.createElement('style'),\n        css = \" a[data-v-11b2e33f] { cursor: pointer; } \";\n    style.type = 'text/css';\n\n    if (style.styleSheet) {\n      style.styleSheet.cssText = css;\n    } else {\n      style.appendChild(document.createTextNode(css));\n    }\n\n    head.appendChild(style);\n  }\n})();\n\nvar h2p = __webpack_require__(/*! html-truncate */ \"./node_modules/html-truncate/lib/truncate.js\");\n\nvar truncate = {\n  render: function () {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', [!_vm.show && _vm.type !== 'html' ? _c('div', [_c('span', {\n      class: _vm.textClass\n    }, [_vm._v(\" \" + _vm._s(_vm.truncate(_vm.text)) + \" \")]), _vm._v(\" \"), _vm.text.length >= _vm.length ? _c('a', {\n      class: _vm.actionClass,\n      on: {\n        \"click\": function ($event) {\n          _vm.toggle();\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.clamp))]) : _vm._e()]) : !_vm.show && _vm.type === 'html' ? _c('div', [_c('span', {\n      class: _vm.textClass,\n      domProps: {\n        \"innerHTML\": _vm._s(_vm.truncate(_vm.text))\n      }\n    }), _vm._v(\" \"), _vm.text.length >= _vm.length ? _c('a', {\n      class: _vm.actionClass,\n      on: {\n        \"click\": function ($event) {\n          _vm.toggle();\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.clamp))]) : _vm._e()]) : _vm._e(), _vm._v(\" \"), _vm.show && _vm.type !== 'html' ? _c('div', [_c('span', [_vm._v(_vm._s(_vm.text))]), _vm._v(\" \"), _vm.text.length >= _vm.length ? _c('a', {\n      class: _vm.actionClass,\n      on: {\n        \"click\": function ($event) {\n          _vm.toggle();\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.less))]) : _vm._e()]) : _vm.show && _vm.type === 'html' ? _c('div', [_vm.text.length >= _vm.length ? _c('div', {\n      domProps: {\n        \"innerHTML\": _vm._s(_vm.text)\n      }\n    }) : _vm._e(), _vm._v(\" \"), _vm.text.length >= _vm.length ? _c('a', {\n      class: _vm.actionClass,\n      on: {\n        \"click\": function ($event) {\n          _vm.toggle();\n        }\n      }\n    }, [_vm._v(_vm._s(_vm.less))]) : _c('p', [_vm._v(\" \" + _vm._s(_vm.h2p(_vm.text)) + \" \")])]) : _vm._e()]);\n  },\n  staticRenderFns: [],\n  _scopeId: 'data-v-11b2e33f',\n  name: 'Truncate',\n  props: {\n    collapsedTextClass: {\n      type: String,\n      default: ''\n    },\n    text: {\n      type: String,\n      required: true\n    },\n    clamp: {\n      type: String,\n      default: 'Read More'\n    },\n    length: {\n      type: Number,\n      default: 100\n    },\n    less: {\n      type: String,\n      default: 'Show Less'\n    },\n    type: {\n      type: String,\n      default: 'text'\n    },\n    actionClass: {\n      type: String,\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      show: false,\n      counter: this.length\n    };\n  },\n  computed: {\n    textClass: function textClass() {\n      return this.text.length > this.length && this.collapsedTextClass ? this.collapsedTextClass : '';\n    }\n  },\n  methods: {\n    truncate: function truncate(string) {\n      if (string) {\n        if (this.type === 'html') {\n          return h2p(string, this.length);\n        }\n\n        return string.toString().substring(0, this.length);\n      }\n\n      return '';\n    },\n    toggle: function toggle() {\n      var toggled = !this.show;\n      this.show = toggled;\n      this.$emit('toggle', toggled);\n    },\n    h2p: function h2p$1(text) {\n      return h2p(text);\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (truncate);\n\n//# sourceURL=webpack:///./node_modules/vue-truncate-collapsed/dist/vue-truncate-collapsed.es.js?");

/***/ }),

/***/ "./node_modules/vue/dist/vue.esm.js":
/*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n\n/*  */\nvar emptyObject = Object.freeze({}); // these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\n\nfunction isUndef(v) {\n  return v === undefined || v === null;\n}\n\nfunction isDef(v) {\n  return v !== undefined && v !== null;\n}\n\nfunction isTrue(v) {\n  return v === true;\n}\n\nfunction isFalse(v) {\n  return v === false;\n}\n/**\n * Check if value is primitive\n */\n\n\nfunction isPrimitive(value) {\n  return typeof value === 'string' || typeof value === 'number' || // $flow-disable-line\n  typeof value === 'symbol' || typeof value === 'boolean';\n}\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\n\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\n\n\nvar _toString = Object.prototype.toString;\n\nfunction toRawType(value) {\n  return _toString.call(value).slice(8, -1);\n}\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\n\n\nfunction isPlainObject(obj) {\n  return _toString.call(obj) === '[object Object]';\n}\n\nfunction isRegExp(v) {\n  return _toString.call(v) === '[object RegExp]';\n}\n/**\n * Check if val is a valid array index.\n */\n\n\nfunction isValidArrayIndex(val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val);\n}\n/**\n * Convert a value to a string that is actually rendered.\n */\n\n\nfunction toString(val) {\n  return val == null ? '' : typeof val === 'object' ? JSON.stringify(val, null, 2) : String(val);\n}\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\n\n\nfunction toNumber(val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n;\n}\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\n\n\nfunction makeMap(str, expectsLowerCase) {\n  var map = Object.create(null);\n  var list = str.split(',');\n\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n\n  return expectsLowerCase ? function (val) {\n    return map[val.toLowerCase()];\n  } : function (val) {\n    return map[val];\n  };\n}\n/**\n * Check if a tag is a built-in tag.\n */\n\n\nvar isBuiltInTag = makeMap('slot,component', true);\n/**\n * Check if a attribute is a reserved attribute.\n */\n\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n/**\n * Remove an item from an array\n */\n\nfunction remove(arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n\n    if (index > -1) {\n      return arr.splice(index, 1);\n    }\n  }\n}\n/**\n * Check whether the object has the property.\n */\n\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n/**\n * Create a cached version of a pure function.\n */\n\n\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\n/**\n * Camelize a hyphen-delimited string.\n */\n\n\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) {\n    return c ? c.toUpperCase() : '';\n  });\n});\n/**\n * Capitalize a string.\n */\n\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n});\n/**\n * Hyphenate a camelCase string.\n */\n\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase();\n});\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\n\nfunction polyfillBind(fn, ctx) {\n  function boundFn(a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  }\n\n  boundFn._length = fn.length;\n  return boundFn;\n}\n\nfunction nativeBind(fn, ctx) {\n  return fn.bind(ctx);\n}\n\nvar bind = Function.prototype.bind ? nativeBind : polyfillBind;\n/**\n * Convert an Array-like object to a real Array.\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n\n  return ret;\n}\n/**\n * Mix properties into target object.\n */\n\n\nfunction extend(to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n\n  return to;\n}\n/**\n * Merge an Array of Objects into a single Object.\n */\n\n\nfunction toObject(arr) {\n  var res = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n\n  return res;\n}\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\n\n\nfunction noop(a, b, c) {}\n/**\n * Always return false.\n */\n\n\nvar no = function (a, b, c) {\n  return false;\n};\n/**\n * Return same value\n */\n\n\nvar identity = function (_) {\n  return _;\n};\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\nfunction genStaticKeys(modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || []);\n  }, []).join(',');\n}\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\n\n\nfunction looseEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i]);\n        });\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key]);\n        });\n      } else {\n        /* istanbul ignore next */\n        return false;\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false;\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b);\n  } else {\n    return false;\n  }\n}\n\nfunction looseIndexOf(arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/**\n * Ensure a function is called only once.\n */\n\n\nfunction once(fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  };\n}\n\nvar SSR_ATTR = 'data-server-rendered';\nvar ASSET_TYPES = ['component', 'directive', 'filter'];\nvar LIFECYCLE_HOOKS = ['beforeCreate', 'created', 'beforeMount', 'mounted', 'beforeUpdate', 'updated', 'beforeDestroy', 'destroyed', 'activated', 'deactivated', 'errorCaptured'];\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"development\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"development\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n};\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n/**\n * Define a property.\n */\n\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n/**\n * Parse simple path.\n */\n\n\nvar bailRE = /[^\\w.$]/;\n\nfunction parsePath(path) {\n  if (bailRE.test(path)) {\n    return;\n  }\n\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) {\n        return;\n      }\n\n      obj = obj[segments[i]];\n    }\n\n    return obj;\n  };\n}\n/*  */\n// can we use __proto__?\n\n\nvar hasProto = '__proto__' in {}; // Browser environment sniffing\n\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0 || weexPlatform === 'android';\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA) || weexPlatform === 'ios';\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge; // Firefox has a \"watch\" function on Object.prototype...\n\nvar nativeWatch = {}.watch;\nvar supportsPassive = false;\n\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', {\n      get: function get() {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    }); // https://github.com/facebook/flow/issues/285\n\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n} // this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\n\n\nvar _isServer;\n\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n\n  return _isServer;\n}; // detect devtools\n\n\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n/* istanbul ignore next */\n\nfunction isNative(Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString());\n}\n\nvar hasSymbol = typeof Symbol !== 'undefined' && isNative(Symbol) && typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */\n// $flow-disable-line\n\n\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    function Set() {\n      this.set = Object.create(null);\n    }\n\n    Set.prototype.has = function has(key) {\n      return this.set[key] === true;\n    };\n\n    Set.prototype.add = function add(key) {\n      this.set[key] = true;\n    };\n\n    Set.prototype.clear = function clear() {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }();\n}\n/*  */\n\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = noop; // work around flow check\n\nvar formatComponentName = noop;\n\nif (true) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n\n  var classify = function (str) {\n    return str.replace(classifyRE, function (c) {\n      return c.toUpperCase();\n    }).replace(/[-_]/g, '');\n  };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && !config.silent) {\n      console.error(\"[Vue warn]: \" + msg + trace);\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && !config.silent) {\n      console.warn(\"[Vue tip]: \" + msg + (vm ? generateComponentTrace(vm) : ''));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>';\n    }\n\n    var options = typeof vm === 'function' && vm.cid != null ? vm.options : vm._isVue ? vm.$options || vm.constructor.options : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (name ? \"<\" + classify(name) + \">\" : \"<Anonymous>\") + (file && includeFile !== false ? \" at \" + file : '');\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n\n    while (n) {\n      if (n % 2 === 1) {\n        res += str;\n      }\n\n      if (n > 1) {\n        str += str;\n      }\n\n      n >>= 1;\n    }\n\n    return res;\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue;\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n\n      return '\\n\\nfound in\\n\\n' + tree.map(function (vm, i) {\n        return \"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm) ? formatComponentName(vm[0]) + \"... (\" + vm[1] + \" recursive calls)\" : formatComponentName(vm));\n      }).join('\\n');\n    } else {\n      return \"\\n\\n(found in \" + formatComponentName(vm) + \")\";\n    }\n  };\n}\n/*  */\n\n\nvar uid = 0;\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\n\nvar Dep = function Dep() {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub(sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub(sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend() {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify() {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n}; // the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\n\n\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget(_target) {\n  if (Dep.target) {\n    targetStack.push(Dep.target);\n  }\n\n  Dep.target = _target;\n}\n\nfunction popTarget() {\n  Dep.target = targetStack.pop();\n}\n/*  */\n\n\nvar VNode = function VNode(tag, data, children, text, elm, context, componentOptions, asyncFactory) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = {\n  child: {\n    configurable: true\n  }\n}; // DEPRECATED: alias for componentInstance for backwards compat.\n\n/* istanbul ignore next */\n\nprototypeAccessors.child.get = function () {\n  return this.componentInstance;\n};\n\nObject.defineProperties(VNode.prototype, prototypeAccessors);\n\nvar createEmptyVNode = function (text) {\n  if (text === void 0) text = '';\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node;\n};\n\nfunction createTextVNode(val) {\n  return new VNode(undefined, undefined, undefined, String(val));\n} // optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\n\n\nfunction cloneVNode(vnode) {\n  var cloned = new VNode(vnode.tag, vnode.data, vnode.children, vnode.text, vnode.elm, vnode.context, vnode.componentOptions, vnode.asyncFactory);\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned;\n}\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\nvar methodsToPatch = ['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'];\n/**\n * Intercept mutating methods and emit events\n */\n\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break;\n\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n\n    if (inserted) {\n      ob.observeArray(inserted);\n    } // notify change\n\n\n    ob.dep.notify();\n    return result;\n  });\n});\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\n\nvar shouldObserve = true;\n\nfunction toggleObserving(value) {\n  shouldObserve = value;\n}\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\n\n\nvar Observer = function Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n\n  if (Array.isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\n\n\nObserver.prototype.walk = function walk(obj) {\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n/**\n * Observe a list of Array items.\n */\n\n\nObserver.prototype.observeArray = function observeArray(items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n}; // helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\n\n\nfunction protoAugment(target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n\n/* istanbul ignore next */\n\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\n\n\nfunction observe(value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return;\n  }\n\n  var ob;\n\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldObserve && !isServerRendering() && (Array.isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n\n  return ob;\n}\n/**\n * Define a reactive property on an Object.\n */\n\n\nfunction defineReactive(obj, key, val, customSetter, shallow) {\n  var dep = new Dep();\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n\n  if (property && property.configurable === false) {\n    return;\n  } // cater for pre-defined getter/setters\n\n\n  var getter = property && property.get;\n\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var setter = property && property.set;\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n\n      if (Dep.target) {\n        dep.depend();\n\n        if (childOb) {\n          childOb.dep.depend();\n\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n\n      if (newVal === value || newVal !== newVal && value !== value) {\n        return;\n      }\n      /* eslint-enable no-self-compare */\n\n\n      if (\"development\" !== 'production' && customSetter) {\n        customSetter();\n      }\n\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\n\n\nfunction set(target, key, val) {\n  if (\"development\" !== 'production' && (isUndef(target) || isPrimitive(target))) {\n    warn(\"Cannot set reactive property on undefined, null, or primitive value: \" + target);\n  }\n\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val;\n  }\n\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val;\n  }\n\n  var ob = target.__ob__;\n\n  if (target._isVue || ob && ob.vmCount) {\n    \"development\" !== 'production' && warn('Avoid adding reactive properties to a Vue instance or its root $data ' + 'at runtime - declare it upfront in the data option.');\n    return val;\n  }\n\n  if (!ob) {\n    target[key] = val;\n    return val;\n  }\n\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val;\n}\n/**\n * Delete a property and trigger change if necessary.\n */\n\n\nfunction del(target, key) {\n  if (\"development\" !== 'production' && (isUndef(target) || isPrimitive(target))) {\n    warn(\"Cannot delete reactive property on undefined, null, or primitive value: \" + target);\n  }\n\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return;\n  }\n\n  var ob = target.__ob__;\n\n  if (target._isVue || ob && ob.vmCount) {\n    \"development\" !== 'production' && warn('Avoid deleting properties on a Vue instance or its root $data ' + '- just set it to null.');\n    return;\n  }\n\n  if (!hasOwn(target, key)) {\n    return;\n  }\n\n  delete target[key];\n\n  if (!ob) {\n    return;\n  }\n\n  ob.dep.notify();\n}\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\n\n\nfunction dependArray(value) {\n  for (var e = void 0, i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\n\n\nvar strats = config.optionMergeStrategies;\n/**\n * Options with restrictions\n */\n\nif (true) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\"option \\\"\" + key + \"\\\" can only be used during instance \" + 'creation with the `new` keyword.');\n    }\n\n    return defaultStrat(parent, child);\n  };\n}\n/**\n * Helper that recursively merges two data objects together.\n */\n\n\nfunction mergeData(to, from) {\n  if (!from) {\n    return to;\n  }\n\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n\n  return to;\n}\n/**\n * Data\n */\n\n\nfunction mergeDataOrFn(parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n\n    if (!parentVal) {\n      return childVal;\n    } // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n\n\n    return function mergedDataFn() {\n      return mergeData(typeof childVal === 'function' ? childVal.call(this, this) : childVal, typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal);\n    };\n  } else {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm, vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm, vm) : parentVal;\n\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n}\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"development\" !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n\n    return mergeDataOrFn(parentVal, childVal);\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm);\n};\n/**\n * Hooks and props are merged as arrays.\n */\n\n\nfunction mergeHook(parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal, vm, key) {\n  var res = Object.create(parentVal || null);\n\n  if (childVal) {\n    \"development\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal);\n  } else {\n    return res;\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = function (parentVal, childVal, vm, key) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) {\n    parentVal = undefined;\n  }\n\n  if (childVal === nativeWatch) {\n    childVal = undefined;\n  }\n  /* istanbul ignore if */\n\n\n  if (!childVal) {\n    return Object.create(parentVal || null);\n  }\n\n  if (true) {\n    assertObjectType(key, childVal, vm);\n  }\n\n  if (!parentVal) {\n    return childVal;\n  }\n\n  var ret = {};\n  extend(ret, parentVal);\n\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n\n    ret[key$1] = parent ? parent.concat(child) : Array.isArray(child) ? child : [child];\n  }\n\n  return ret;\n};\n/**\n * Other object hashes.\n */\n\n\nstrats.props = strats.methods = strats.inject = strats.computed = function (parentVal, childVal, vm, key) {\n  if (childVal && \"development\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n\n  if (!parentVal) {\n    return childVal;\n  }\n\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n\n  if (childVal) {\n    extend(ret, childVal);\n  }\n\n  return ret;\n};\n\nstrats.provide = mergeDataOrFn;\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n/**\n * Validate component names\n */\n\n\nfunction checkComponents(options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName(name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characters and the hyphen, ' + 'and must start with a letter.');\n  }\n\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + name);\n  }\n}\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\n\n\nfunction normalizeProps(options, vm) {\n  var props = options.props;\n\n  if (!props) {\n    return;\n  }\n\n  var res = {};\n  var i, val, name;\n\n  if (Array.isArray(props)) {\n    i = props.length;\n\n    while (i--) {\n      val = props[i];\n\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = {\n          type: null\n        };\n      } else if (true) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val) ? val : {\n        type: val\n      };\n    }\n  } else if (true) {\n    warn(\"Invalid value for option \\\"props\\\": expected an Array or an Object, \" + \"but got \" + toRawType(props) + \".\", vm);\n  }\n\n  options.props = res;\n}\n/**\n * Normalize all injections into Object-based format\n */\n\n\nfunction normalizeInject(options, vm) {\n  var inject = options.inject;\n\n  if (!inject) {\n    return;\n  }\n\n  var normalized = options.inject = {};\n\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = {\n        from: inject[i]\n      };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val) ? extend({\n        from: key\n      }, val) : {\n        from: val\n      };\n    }\n  } else if (true) {\n    warn(\"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" + \"but got \" + toRawType(inject) + \".\", vm);\n  }\n}\n/**\n * Normalize raw function directives into object format.\n */\n\n\nfunction normalizeDirectives(options) {\n  var dirs = options.directives;\n\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n\n      if (typeof def === 'function') {\n        dirs[key] = {\n          bind: def,\n          update: def\n        };\n      }\n    }\n  }\n}\n\nfunction assertObjectType(name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" + \"but got \" + toRawType(value) + \".\", vm);\n  }\n}\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\n\n\nfunction mergeOptions(parent, child, vm) {\n  if (true) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n\n  var options = {};\n  var key;\n\n  for (key in parent) {\n    mergeField(key);\n  }\n\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n\n  return options;\n}\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\n\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n\n  var assets = options[type]; // check local registration variations first\n\n  if (hasOwn(assets, id)) {\n    return assets[id];\n  }\n\n  var camelizedId = camelize(id);\n\n  if (hasOwn(assets, camelizedId)) {\n    return assets[camelizedId];\n  }\n\n  var PascalCaseId = capitalize(camelizedId);\n\n  if (hasOwn(assets, PascalCaseId)) {\n    return assets[PascalCaseId];\n  } // fallback to prototype chain\n\n\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n\n  if (\"development\" !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n\n  return res;\n}\n/*  */\n\n\nfunction validateProp(key, propOptions, propsData, vm) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key]; // boolean casting\n\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  } // check default value\n\n\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key); // since the default value is a fresh copy,\n    // make sure to observe it.\n\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n\n  if (true) {\n    assertProp(prop, key, value, vm, absent);\n  }\n\n  return value;\n}\n/**\n * Get the default value of a prop.\n */\n\n\nfunction getPropDefaultValue(vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined;\n  }\n\n  var def = prop.default; // warn against non-factory defaults for Object & Array\n\n  if (\"development\" !== 'production' && isObject(def)) {\n    warn('Invalid default value for prop \"' + key + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  } // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n\n\n  if (vm && vm.$options.propsData && vm.$options.propsData[key] === undefined && vm._props[key] !== undefined) {\n    return vm._props[key];\n  } // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n\n\n  return typeof def === 'function' && getType(prop.type) !== 'Function' ? def.call(vm) : def;\n}\n/**\n * Assert whether a prop is valid.\n */\n\n\nfunction assertProp(prop, name, value, vm, absent) {\n  if (prop.required && absent) {\n    warn('Missing required prop: \"' + name + '\"', vm);\n    return;\n  }\n\n  if (value == null && !prop.required) {\n    return;\n  }\n\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" + \" Expected \" + expectedTypes.map(capitalize).join(', ') + \", got \" + toRawType(value) + \".\", vm);\n    return;\n  }\n\n  var validator = prop.validator;\n\n  if (validator) {\n    if (!validator(value)) {\n      warn('Invalid prop: custom validator check failed for prop \"' + name + '\".', vm);\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType = getType(type);\n\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase(); // for primitive wrapper objects\n\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\n\n\nfunction getType(fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : '';\n}\n\nfunction isSameType(a, b) {\n  return getType(a) === getType(b);\n}\n\nfunction getTypeIndex(type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1;\n  }\n\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n/*  */\n\n\nfunction handleError(err, vm, info) {\n  if (vm) {\n    var cur = vm;\n\n    while (cur = cur.$parent) {\n      var hooks = cur.$options.errorCaptured;\n\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n\n            if (capture) {\n              return;\n            }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError(err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info);\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n\n  logError(err, vm, info);\n}\n\nfunction logError(err, vm, info) {\n  if (true) {\n    warn(\"Error in \" + info + \": \\\"\" + err.toString() + \"\\\"\", vm);\n  }\n  /* istanbul ignore else */\n\n\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err;\n  }\n}\n/*  */\n\n/* globals MessageChannel */\n\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks() {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n} // Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\n\n\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false; // Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n\n/* istanbul ignore if */\n\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (isNative(MessageChannel) || // PhantomJS\nMessageChannel.toString() === '[object MessageChannelConstructor]')) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n} // Determine microtask defer implementation.\n\n/* istanbul ignore next, $flow-disable-line */\n\n\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n\n  microTimerFunc = function () {\n    p.then(flushCallbacks); // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n\n    if (isIOS) {\n      setTimeout(noop);\n    }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\n\n\nfunction withMacroTask(fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res;\n  });\n}\n\nfunction nextTick(cb, ctx) {\n  var _resolve;\n\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n\n  if (!pending) {\n    pending = true;\n\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  } // $flow-disable-line\n\n\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    });\n  }\n}\n/*  */\n\n\nvar mark;\nvar measure;\n\nif (true) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n\n  if (perf && perf.mark && perf.measure && perf.clearMarks && perf.clearMeasures) {\n    mark = function (tag) {\n      return perf.mark(tag);\n    };\n\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n/* not type checking this file because flow doesn't play well with Proxy */\n\n\nvar initProxy;\n\nif (true) {\n  var allowedGlobals = makeMap('Infinity,undefined,NaN,isFinite,isNaN,' + 'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' + 'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' + 'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" + 'referenced during render. Make sure that this property is reactive, ' + 'either in the data option, or for class-based components, by ' + 'initializing the property. ' + 'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.', target);\n  };\n\n  var hasProxy = typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set(target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn(\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key);\n          return false;\n        } else {\n          target[key] = value;\n          return true;\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has(target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n\n      return has || !isAllowed;\n    }\n  };\n  var getHandler = {\n    get: function get(target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n\n      return target[key];\n    }\n  };\n\n  initProxy = function initProxy(vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped ? getHandler : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n/*  */\n\n\nvar seenObjects = new _Set();\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\n\nfunction traverse(val) {\n  _traverse(val, seenObjects);\n\n  seenObjects.clear();\n}\n\nfunction _traverse(val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n\n  if (!isA && !isObject(val) || Object.isFrozen(val) || val instanceof VNode) {\n    return;\n  }\n\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n\n    if (seen.has(depId)) {\n      return;\n    }\n\n    seen.add(depId);\n  }\n\n  if (isA) {\n    i = val.length;\n\n    while (i--) {\n      _traverse(val[i], seen);\n    }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n\n    while (i--) {\n      _traverse(val[keys[i]], seen);\n    }\n  }\n}\n/*  */\n\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  };\n});\n\nfunction createFnInvoker(fns) {\n  function invoker() {\n    var arguments$1 = arguments;\n    var fns = invoker.fns;\n\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments);\n    }\n  }\n\n  invoker.fns = fns;\n  return invoker;\n}\n\nfunction updateListeners(on, oldOn, add, remove$$1, vm) {\n  var name, def, cur, old, event;\n\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n\n    if (isUndef(cur)) {\n      \"development\" !== 'production' && warn(\"Invalid handler for event \\\"\" + event.name + \"\\\": got \" + String(cur), vm);\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n/*  */\n\n\nfunction mergeVNodeHook(def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook() {\n    hook.apply(this, arguments); // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n/*  */\n\n\nfunction extractPropsFromVNodeData(data, Ctor, tag) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n\n  if (isUndef(propOptions)) {\n    return;\n  }\n\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n\n      if (true) {\n        var keyInLowerCase = key.toLowerCase();\n\n        if (key !== keyInLowerCase && attrs && hasOwn(attrs, keyInLowerCase)) {\n          tip(\"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" + formatComponentName(tag || Ctor) + \", but the declared prop name is\" + \" \\\"\" + key + \"\\\". \" + \"Note that HTML attributes are case-insensitive and camelCased \" + \"props need to use their kebab-case equivalents when using in-DOM \" + \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\");\n        }\n      }\n\n      checkProp(res, props, key, altKey, true) || checkProp(res, attrs, key, altKey, false);\n    }\n  }\n\n  return res;\n}\n\nfunction checkProp(res, hash, key, altKey, preserve) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n\n      if (!preserve) {\n        delete hash[key];\n      }\n\n      return true;\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n\n      if (!preserve) {\n        delete hash[altKey];\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n/*  */\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\n\n\nfunction simpleNormalizeChildren(children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children);\n    }\n  }\n\n  return children;\n} // 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\n\n\nfunction normalizeChildren(children) {\n  return isPrimitive(children) ? [createTextVNode(children)] : Array.isArray(children) ? normalizeArrayChildren(children) : undefined;\n}\n\nfunction isTextNode(node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment);\n}\n\nfunction normalizeArrayChildren(children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n\n    if (isUndef(c) || typeof c === 'boolean') {\n      continue;\n    }\n\n    lastIndex = res.length - 1;\n    last = res[lastIndex]; //  nested\n\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, (nestedIndex || '') + \"_\" + i); // merge adjacent text nodes\n\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + c[0].text);\n          c.shift();\n        }\n\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) && isDef(c.tag) && isUndef(c.key) && isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n\n        res.push(c);\n      }\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nfunction ensureCtor(comp, base) {\n  if (comp.__esModule || hasSymbol && comp[Symbol.toStringTag] === 'Module') {\n    comp = comp.default;\n  }\n\n  return isObject(comp) ? base.extend(comp) : comp;\n}\n\nfunction createAsyncPlaceholder(factory, data, context, children, tag) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = {\n    data: data,\n    context: context,\n    children: children,\n    tag: tag\n  };\n  return node;\n}\n\nfunction resolveAsyncComponent(factory, baseCtor, context) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp;\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved;\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp;\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor); // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n\n      if (!sync) {\n        forceRender();\n      }\n    });\n    var reject = once(function (reason) {\n      \"development\" !== 'production' && warn(\"Failed to resolve async component: \" + String(factory) + (reason ? \"\\nReason: \" + reason : ''));\n\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject( true ? \"timeout (\" + res.timeout + \"ms)\" : undefined);\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false; // return in case resolved synchronously\n\n    return factory.loading ? factory.loadingComp : factory.resolved;\n  }\n}\n/*  */\n\n\nfunction isAsyncPlaceholder(node) {\n  return node.isComment && node.asyncFactory;\n}\n/*  */\n\n\nfunction getFirstComponentChild(children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c;\n      }\n    }\n  }\n}\n/*  */\n\n/*  */\n\n\nfunction initEvents(vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false; // init parent attached events\n\n  var listeners = vm.$options._parentListeners;\n\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add(event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1(event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners(vm, listeners, oldListeners) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin(Vue) {\n  var hookRE = /^hook:/;\n\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n    var vm = this;\n\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn); // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n\n    return vm;\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n\n    function on() {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm;\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n    var vm = this; // all\n\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm;\n    } // array of events\n\n\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n\n      return vm;\n    } // specific event\n\n\n    var cbs = vm._events[event];\n\n    if (!cbs) {\n      return vm;\n    }\n\n    if (!fn) {\n      vm._events[event] = null;\n      return vm;\n    }\n\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n\n      while (i$1--) {\n        cb = cbs[i$1];\n\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break;\n        }\n      }\n    }\n\n    return vm;\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n\n    if (true) {\n      var lowerCaseEvent = event.toLowerCase();\n\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" + formatComponentName(vm) + \" but the handler is registered for \\\"\" + event + \"\\\". \" + \"Note that HTML attributes are case-insensitive and you cannot use \" + \"v-on to listen to camelCase events when using in-DOM templates. \" + \"You should probably use \\\"\" + hyphenate(event) + \"\\\" instead of \\\"\" + event + \"\\\".\");\n      }\n    }\n\n    var cbs = vm._events[event];\n\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, \"event handler for \\\"\" + event + \"\\\"\");\n        }\n      }\n    }\n\n    return vm;\n  };\n}\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\n\n\nfunction resolveSlots(children, context) {\n  var slots = {};\n\n  if (!children) {\n    return slots;\n  }\n\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data; // remove slot attribute if the node is resolved as a Vue slot node\n\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    } // named slots should only be respected if the vnode was rendered in the\n    // same context.\n\n\n    if ((child.context === context || child.fnContext === context) && data && data.slot != null) {\n      var name = data.slot;\n      var slot = slots[name] || (slots[name] = []);\n\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  } // ignore slots that contains only whitespace\n\n\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n\n  return slots;\n}\n\nfunction isWhitespace(node) {\n  return node.isComment && !node.asyncFactory || node.text === ' ';\n}\n\nfunction resolveScopedSlots(fns, // see flow/vnode\nres) {\n  res = res || {};\n\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle(vm) {\n  var options = vm.$options; // locate first non-abstract parent\n\n  var parent = options.parent;\n\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n  vm.$children = [];\n  vm.$refs = {};\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode; // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false\n      /* removeOnly */\n      , vm.$options._parentElm, vm.$options._refElm); // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n\n    activeInstance = prevActiveInstance; // update __vue__ reference\n\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    } // if parent is an HOC, update its $el as well\n\n\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    } // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n\n    if (vm._isBeingDestroyed) {\n      return;\n    }\n\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true; // remove self from parent\n\n    var parent = vm.$parent;\n\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    } // teardown watchers\n\n\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n\n    var i = vm._watchers.length;\n\n    while (i--) {\n      vm._watchers[i].teardown();\n    } // remove reference from data ob\n    // frozen object may not have observer.\n\n\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    } // call the last hook...\n\n\n    vm._isDestroyed = true; // invoke destroy hooks on current rendered tree\n\n    vm.__patch__(vm._vnode, null); // fire destroyed hook\n\n\n    callHook(vm, 'destroyed'); // turn off all instance listeners.\n\n    vm.$off(); // remove __vue__ reference\n\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    } // release circular reference (#6759)\n\n\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent(vm, el, hydrating) {\n  vm.$el = el;\n\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n\n    if (true) {\n      /* istanbul ignore if */\n      if (vm.$options.template && vm.$options.template.charAt(0) !== '#' || vm.$options.el || el) {\n        warn('You are using the runtime-only build of Vue where the template ' + 'compiler is not available. Either pre-compile the templates into ' + 'render functions, or use the compiler-included build.', vm);\n      } else {\n        warn('Failed to mount component: template or render function not defined.', vm);\n      }\n    }\n  }\n\n  callHook(vm, 'beforeMount');\n  var updateComponent;\n  /* istanbul ignore if */\n\n  if (\"development\" !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n      mark(startTag);\n\n      var vnode = vm._render();\n\n      mark(endTag);\n      measure(\"vue \" + name + \" render\", startTag, endTag);\n      mark(startTag);\n\n      vm._update(vnode, hydrating);\n\n      mark(endTag);\n      measure(\"vue \" + name + \" patch\", startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  } // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n\n\n  new Watcher(vm, updateComponent, noop, null, true\n  /* isRenderWatcher */\n  );\n  hydrating = false; // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n\n  return vm;\n}\n\nfunction updateChildComponent(vm, propsData, listeners, parentVnode, renderChildren) {\n  if (true) {\n    isUpdatingChildComponent = true;\n  } // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n\n\n  var hasChildren = !!(renderChildren || // has new static slots\n  vm.$options._renderChildren || // has old static slots\n  parentVnode.data.scopedSlots || // has new scoped slots\n  vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) {\n    // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n\n  vm.$options._renderChildren = renderChildren; // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject; // update props\n\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n\n    toggleObserving(true); // keep a copy of raw propsData\n\n    vm.$options.propsData = propsData;\n  } // update listeners\n\n\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners); // resolve slots + force update if has children\n\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (true) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree(vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction activateChildComponent(vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n\n    if (isInInactiveTree(vm)) {\n      return;\n    }\n  } else if (vm._directInactive) {\n    return;\n  }\n\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent(vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n\n    if (isInInactiveTree(vm)) {\n      return;\n    }\n  }\n\n  if (!vm._inactive) {\n    vm._inactive = true;\n\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook(vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, hook + \" hook\");\n      }\n    }\n  }\n\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n\n  popTarget();\n}\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n/**\n * Reset the scheduler's state.\n */\n\nfunction resetSchedulerState() {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n\n  if (true) {\n    circular = {};\n  }\n\n  waiting = flushing = false;\n}\n/**\n * Flush both queues and run the watchers.\n */\n\n\nfunction flushSchedulerQueue() {\n  flushing = true;\n  var watcher, id; // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n\n  queue.sort(function (a, b) {\n    return a.id - b.id;\n  }); // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run(); // in dev build, check and stop circular updates.\n\n    if (\"development\" !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn('You may have an infinite update loop ' + (watcher.user ? \"in watcher with expression \\\"\" + watcher.expression + \"\\\"\" : \"in a component render function.\"), watcher.vm);\n        break;\n      }\n    }\n  } // keep copies of post queues before resetting state\n\n\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n  resetSchedulerState(); // call component updated and activated hooks\n\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue); // devtool hook\n\n  /* istanbul ignore if */\n\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks(queue) {\n  var i = queue.length;\n\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\n\n\nfunction queueActivatedComponent(vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks(queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true\n    /* true */\n    );\n  }\n}\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\n\n\nfunction queueWatcher(watcher) {\n  var id = watcher.id;\n\n  if (has[id] == null) {\n    has[id] = true;\n\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n\n      queue.splice(i + 1, 0, watcher);\n    } // queue the flush\n\n\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n/*  */\n\n\nvar uid$1 = 0;\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\n\nvar Watcher = function Watcher(vm, expOrFn, cb, options, isRenderWatcher) {\n  this.vm = vm;\n\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n\n  vm._watchers.push(this); // options\n\n\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  true ? expOrFn.toString() : undefined; // parse expression for getter\n\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n\n    if (!this.getter) {\n      this.getter = function () {};\n\n      \"development\" !== 'production' && warn(\"Failed watching path: \\\"\" + expOrFn + \"\\\" \" + 'Watcher only accepts simple dot-delimited paths. ' + 'For full control, use a function instead.', vm);\n    }\n  }\n\n  this.value = this.lazy ? undefined : this.get();\n};\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\n\nWatcher.prototype.get = function get() {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, \"getter for watcher \\\"\" + this.expression + \"\\\"\");\n    } else {\n      throw e;\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n\n    popTarget();\n    this.cleanupDeps();\n  }\n\n  return value;\n};\n/**\n * Add a dependency to this directive.\n */\n\n\nWatcher.prototype.addDep = function addDep(dep) {\n  var id = dep.id;\n\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n/**\n * Clean up for dependency collection.\n */\n\n\nWatcher.prototype.cleanupDeps = function cleanupDeps() {\n  var this$1 = this;\n  var i = this.deps.length;\n\n  while (i--) {\n    var dep = this$1.deps[i];\n\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\n\n\nWatcher.prototype.update = function update() {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\n\n\nWatcher.prototype.run = function run() {\n  if (this.active) {\n    var value = this.get();\n\n    if (value !== this.value || // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated.\n    isObject(value) || this.deep) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, \"callback for watcher \\\"\" + this.expression + \"\\\"\");\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\n\nWatcher.prototype.evaluate = function evaluate() {\n  this.value = this.get();\n  this.dirty = false;\n};\n/**\n * Depend on all deps collected by this watcher.\n */\n\n\nWatcher.prototype.depend = function depend() {\n  var this$1 = this;\n  var i = this.deps.length;\n\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n/**\n * Remove self from all dependencies' subscriber list.\n */\n\n\nWatcher.prototype.teardown = function teardown() {\n  var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n\n    var i = this.deps.length;\n\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n\n    this.active = false;\n  }\n};\n/*  */\n\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy(target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter() {\n    return this[sourceKey][key];\n  };\n\n  sharedPropertyDefinition.set = function proxySetter(val) {\n    this[sourceKey][key] = val;\n  };\n\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState(vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n\n  if (opts.props) {\n    initProps(vm, opts.props);\n  }\n\n  if (opts.methods) {\n    initMethods(vm, opts.methods);\n  }\n\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true\n    /* asRootData */\n    );\n  }\n\n  if (opts.computed) {\n    initComputed(vm, opts.computed);\n  }\n\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps(vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {}; // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent; // root instance props should be converted\n\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n\n  var loop = function (key) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n\n    if (true) {\n      var hyphenatedKey = hyphenate(key);\n\n      if (isReservedAttribute(hyphenatedKey) || config.isReservedAttr(hyphenatedKey)) {\n        warn(\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\", vm);\n      }\n\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\"Avoid mutating a prop directly since the value will be \" + \"overwritten whenever the parent component re-renders. \" + \"Instead, use a data or computed property based on the prop's \" + \"value. Prop being mutated: \\\"\" + key + \"\\\"\", vm);\n        }\n      });\n    } else {} // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n\n\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop(key);\n\n  toggleObserving(true);\n}\n\nfunction initData(vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function' ? getData(data, vm) : data || {};\n\n  if (!isPlainObject(data)) {\n    data = {};\n    \"development\" !== 'production' && warn('data functions should return an object:\\n' + 'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function', vm);\n  } // proxy data on instance\n\n\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n\n  while (i--) {\n    var key = keys[i];\n\n    if (true) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\", vm);\n      }\n    }\n\n    if (props && hasOwn(props, key)) {\n      \"development\" !== 'production' && warn(\"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" + \"Use prop default value instead.\", vm);\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  } // observe data\n\n\n  observe(data, true\n  /* asRootData */\n  );\n}\n\nfunction getData(data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n\n  try {\n    return data.call(vm, vm);\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {};\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = {\n  lazy: true\n};\n\nfunction initComputed(vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null); // computed properties are just getters during SSR\n\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n\n    if (\"development\" !== 'production' && getter == null) {\n      warn(\"Getter is missing for computed property \\\"\" + key + \"\\\".\", vm);\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n    } // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n\n\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (true) {\n      if (key in vm.$data) {\n        warn(\"The computed property \\\"\" + key + \"\\\" is already defined in data.\", vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn(\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\", vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed(target, key, userDef) {\n  var shouldCache = !isServerRendering();\n\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache ? createComputedGetter(key) : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get ? shouldCache && userDef.cache !== false ? createComputedGetter(key) : userDef.get : noop;\n    sharedPropertyDefinition.set = userDef.set ? userDef.set : noop;\n  }\n\n  if (\"development\" !== 'production' && sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\", this);\n    };\n  }\n\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter(key) {\n  return function computedGetter() {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n\n      if (Dep.target) {\n        watcher.depend();\n      }\n\n      return watcher.value;\n    }\n  };\n}\n\nfunction initMethods(vm, methods) {\n  var props = vm.$options.props;\n\n  for (var key in methods) {\n    if (true) {\n      if (methods[key] == null) {\n        warn(\"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" + \"Did you reference the function correctly?\", vm);\n      }\n\n      if (props && hasOwn(props, key)) {\n        warn(\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\", vm);\n      }\n\n      if (key in vm && isReserved(key)) {\n        warn(\"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" + \"Avoid defining component methods that start with _ or $.\");\n      }\n    }\n\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch(vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher(vm, expOrFn, handler, options) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n\n  return vm.$watch(expOrFn, handler, options);\n}\n\nfunction stateMixin(Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n\n  dataDef.get = function () {\n    return this._data;\n  };\n\n  var propsDef = {};\n\n  propsDef.get = function () {\n    return this._props;\n  };\n\n  if (true) {\n    dataDef.set = function (newData) {\n      warn('Avoid replacing instance root $data. ' + 'Use nested data properties instead.', this);\n    };\n\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options);\n    }\n\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n}\n/*  */\n\n\nfunction initProvide(vm) {\n  var provide = vm.$options.provide;\n\n  if (provide) {\n    vm._provided = typeof provide === 'function' ? provide.call(vm) : provide;\n  }\n}\n\nfunction initInjections(vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (true) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\"Avoid mutating an injected value directly since the changes will be \" + \"overwritten whenever the provided component re-renders. \" + \"injection being mutated: \\\"\" + key + \"\\\"\", vm);\n        });\n      } else {}\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject(inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol ? Reflect.ownKeys(inject).filter(function (key) {\n      /* istanbul ignore next */\n      return Object.getOwnPropertyDescriptor(inject, key).enumerable;\n    }) : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break;\n        }\n\n        source = source.$parent;\n      }\n\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function' ? provideDefault.call(vm) : provideDefault;\n        } else if (true) {\n          warn(\"Injection \\\"\" + key + \"\\\" not found\", vm);\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\n\n\nfunction renderList(val, render) {\n  var ret, i, l, keys, key;\n\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n\n  if (isDef(ret)) {\n    ret._isVList = true;\n  }\n\n  return ret;\n}\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\n\n\nfunction renderSlot(name, fallback, props, bindObject) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n\n  if (scopedSlotFn) {\n    // scoped slot\n    props = props || {};\n\n    if (bindObject) {\n      if (\"development\" !== 'production' && !isObject(bindObject)) {\n        warn('slot v-bind without argument expects an Object', this);\n      }\n\n      props = extend(extend({}, bindObject), props);\n    }\n\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name]; // warn duplicate slot usage\n\n    if (slotNodes) {\n      if (\"development\" !== 'production' && slotNodes._rendered) {\n        warn(\"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" + \"- this will likely cause render errors.\", this);\n      }\n\n      slotNodes._rendered = true;\n    }\n\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n\n  if (target) {\n    return this.$createElement('template', {\n      slot: target\n    }, nodes);\n  } else {\n    return nodes;\n  }\n}\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\n\n\nfunction resolveFilter(id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity;\n}\n/*  */\n\n\nfunction isKeyNotMatch(expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1;\n  } else {\n    return expect !== actual;\n  }\n}\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\n\n\nfunction checkKeyCodes(eventKeyCode, key, builtInKeyCode, eventKeyName, builtInKeyName) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName);\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode);\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key;\n  }\n}\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\n\n\nfunction bindObjectProps(data, tag, value, asProp, isSync) {\n  if (value) {\n    if (!isObject(value)) {\n      \"development\" !== 'production' && warn('v-bind without argument expects an Object or Array value', this);\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n\n      var hash;\n\n      var loop = function (key) {\n        if (key === 'class' || key === 'style' || isReservedAttribute(key)) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key) ? data.domProps || (data.domProps = {}) : data.attrs || (data.attrs = {});\n        }\n\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n\n            on[\"update:\" + key] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop(key);\n    }\n  }\n\n  return data;\n}\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\n\n\nfunction renderStatic(index, isInFor) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index]; // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n\n  if (tree && !isInFor) {\n    return tree;\n  } // otherwise, render a fresh tree.\n\n\n  tree = cached[index] = this.$options.staticRenderFns[index].call(this._renderProxy, null, this // for render fns generated for functional component templates\n  );\n  markStatic(tree, \"__static__\" + index, false);\n  return tree;\n}\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\n\n\nfunction markOnce(tree, index, key) {\n  markStatic(tree, \"__once__\" + index + (key ? \"_\" + key : \"\"), true);\n  return tree;\n}\n\nfunction markStatic(tree, key, isOnce) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], key + \"_\" + i, isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode(node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n/*  */\n\n\nfunction bindObjectListeners(data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"development\" !== 'production' && warn('v-on without argument expects an Object value', this);\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n\n  return data;\n}\n/*  */\n\n\nfunction installRenderHelpers(target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n/*  */\n\n\nfunction FunctionalRenderContext(data, props, children, parent, Ctor) {\n  var options = Ctor.options; // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n\n  var contextVm;\n\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent); // $flow-disable-line\n\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent; // $flow-disable-line\n\n    parent = parent._original;\n  }\n\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n\n  this.slots = function () {\n    return resolveSlots(children, parent);\n  }; // support for compiled functional template\n\n\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options; // pre-resolve slots for renderSlot()\n\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n\n      return vnode;\n    };\n  } else {\n    this._c = function (a, b, c, d) {\n      return createElement(contextVm, a, b, c, d, needNormalization);\n    };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent(Ctor, propsData, data, contextVm, children) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) {\n      mergeProps(props, data.attrs);\n    }\n\n    if (isDef(data.props)) {\n      mergeProps(props, data.props);\n    }\n  }\n\n  var renderContext = new FunctionalRenderContext(data, props, children, contextVm, Ctor);\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options);\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n\n    return res;\n  }\n}\n\nfunction cloneAndMarkFunctionalResult(vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n\n  return clone;\n}\n\nfunction mergeProps(to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n/*  */\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n// Updates the state of the component to weex native render engine.\n\n/*  */\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n// listening on native callback\n\n/*  */\n\n/*  */\n// inline hooks to be invoked on component VNodes during patch\n\n\nvar componentVNodeHooks = {\n  init: function init(vnode, hydrating, parentElm, refElm) {\n    if (vnode.componentInstance && !vnode.componentInstance._isDestroyed && vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(vnode, activeInstance, parentElm, refElm);\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n  prepatch: function prepatch(oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(child, options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n    );\n  },\n  insert: function insert(vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true\n        /* direct */\n        );\n      }\n    }\n  },\n  destroy: function destroy(vnode) {\n    var componentInstance = vnode.componentInstance;\n\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true\n        /* direct */\n        );\n      }\n    }\n  }\n};\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent(Ctor, data, context, children, tag) {\n  if (isUndef(Ctor)) {\n    return;\n  }\n\n  var baseCtor = context.$options._base; // plain options object: turn it into a constructor\n\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  } // if at this stage it's not a constructor or an async component factory,\n  // reject.\n\n\n  if (typeof Ctor !== 'function') {\n    if (true) {\n      warn(\"Invalid Component definition: \" + String(Ctor), context);\n    }\n\n    return;\n  } // async component\n\n\n  var asyncFactory;\n\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(asyncFactory, data, context, children, tag);\n    }\n  }\n\n  data = data || {}; // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n\n  resolveConstructorOptions(Ctor); // transform component v-model data into props & events\n\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  } // extract props\n\n\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag); // functional component\n\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children);\n  } // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n\n\n  var listeners = data.on; // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n    // work around flow\n    var slot = data.slot;\n    data = {};\n\n    if (slot) {\n      data.slot = slot;\n    }\n  } // install component management hooks onto the placeholder node\n\n\n  installComponentHooks(data); // return a placeholder vnode\n\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\"vue-component-\" + Ctor.cid + (name ? \"-\" + name : ''), data, undefined, undefined, undefined, context, {\n    Ctor: Ctor,\n    propsData: propsData,\n    listeners: listeners,\n    tag: tag,\n    children: children\n  }, asyncFactory); // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n  /* istanbul ignore if */\n\n  return vnode;\n}\n\nfunction createComponentInstanceForVnode(vnode, // we know it's MountedComponentVNode but flow doesn't\nparent, // activeInstance in lifecycle state\nparentElm, refElm) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  }; // check inline-template render functions\n\n  var inlineTemplate = vnode.data.inlineTemplate;\n\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n\n  return new vnode.componentOptions.Ctor(options);\n}\n\nfunction installComponentHooks(data) {\n  var hooks = data.hook || (data.hook = {});\n\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n} // transform component v-model info (value and callback) into\n// prop and event handler respectively.\n\n\nfunction transformModel(options, data) {\n  var prop = options.model && options.model.prop || 'value';\n  var event = options.model && options.model.event || 'input';\n  (data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n/*  */\n\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2; // wrapper function for providing a more flexible interface\n// without getting yelled at by flow\n\nfunction createElement(context, tag, data, children, normalizationType, alwaysNormalize) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n\n  return _createElement(context, tag, data, children, normalizationType);\n}\n\nfunction _createElement(context, tag, data, children, normalizationType) {\n  if (isDef(data) && isDef(data.__ob__)) {\n    \"development\" !== 'production' && warn(\"Avoid using observed data object as vnode data: \" + JSON.stringify(data) + \"\\n\" + 'Always create fresh vnode data objects in each render!', context);\n    return createEmptyVNode();\n  } // object syntax in v-bind\n\n\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode();\n  } // warn against non-primitive key\n\n\n  if (\"development\" !== 'production' && isDef(data) && isDef(data.key) && !isPrimitive(data.key)) {\n    {\n      warn('Avoid using non-primitive value as key, ' + 'use string/number value instead.', context);\n    }\n  } // support single function children as default scoped slot\n\n\n  if (Array.isArray(children) && typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = {\n      default: children[0]\n    };\n    children.length = 0;\n  }\n\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n\n  var vnode, ns;\n\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = context.$vnode && context.$vnode.ns || config.getTagNamespace(tag);\n\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(config.parsePlatformTagName(tag), data, children, undefined, undefined, context);\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(tag, data, children, undefined, undefined, context);\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n\n  if (Array.isArray(vnode)) {\n    return vnode;\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) {\n      applyNS(vnode, ns);\n    }\n\n    if (isDef(data)) {\n      registerDeepBindings(data);\n    }\n\n    return vnode;\n  } else {\n    return createEmptyVNode();\n  }\n}\n\nfunction applyNS(vnode, ns, force) {\n  vnode.ns = ns;\n\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n\n      if (isDef(child.tag) && (isUndef(child.ns) || isTrue(force) && child.tag !== 'svg')) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n} // ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\n\n\nfunction registerDeepBindings(data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n/*  */\n\n\nfunction initRender(vm) {\n  vm._vnode = null; // the root of the child tree\n\n  vm._staticTrees = null; // v-once cached trees\n\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject; // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n\n  vm._c = function (a, b, c, d) {\n    return createElement(vm, a, b, c, d, false);\n  }; // normalization is always applied for the public version, used in\n  // user-written render functions.\n\n\n  vm.$createElement = function (a, b, c, d) {\n    return createElement(vm, a, b, c, d, true);\n  }; // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n\n\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n\n  if (true) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {}\n}\n\nfunction renderMixin(Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this);\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode; // reset _rendered flag on slots for duplicate slot check\n\n    if (true) {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    } // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n\n\n    vm.$vnode = _parentVnode; // render self\n\n    var vnode;\n\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\"); // return error render result,\n      // or previous vnode to prevent render error causing blank component\n\n      /* istanbul ignore else */\n\n      if (true) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {}\n    } // return empty vnode in case the render function errored out\n\n\n    if (!(vnode instanceof VNode)) {\n      if (\"development\" !== 'production' && Array.isArray(vnode)) {\n        warn('Multiple root nodes returned from render function. Render function ' + 'should return a single root node.', vm);\n      }\n\n      vnode = createEmptyVNode();\n    } // set parent\n\n\n    vnode.parent = _parentVnode;\n    return vnode;\n  };\n}\n/*  */\n\n\nvar uid$3 = 0;\n\nfunction initMixin(Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this; // a uid\n\n    vm._uid = uid$3++;\n    var startTag, endTag;\n    /* istanbul ignore if */\n\n    if (\"development\" !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + vm._uid;\n      endTag = \"vue-perf-end:\" + vm._uid;\n      mark(startTag);\n    } // a flag to avoid this being observed\n\n\n    vm._isVue = true; // merge options\n\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(resolveConstructorOptions(vm.constructor), options || {}, vm);\n    }\n    /* istanbul ignore else */\n\n\n    if (true) {\n      initProxy(vm);\n    } else {} // expose real self\n\n\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n\n    callHook(vm, 'created');\n    /* istanbul ignore if */\n\n    if (\"development\" !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(\"vue \" + vm._name + \" init\", startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent(vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options); // doing this because it's faster than dynamic enumeration.\n\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions(Ctor) {\n  var options = Ctor.options;\n\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions; // check if there are any late-modified/attached options (#4976)\n\n      var modifiedOptions = resolveModifiedOptions(Ctor); // update base extend options\n\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n\n  return options;\n}\n\nfunction resolveModifiedOptions(Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) {\n        modified = {};\n      }\n\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n\n  return modified;\n}\n\nfunction dedupe(latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n\n    return res;\n  } else {\n    return latest;\n  }\n}\n\nfunction Vue(options) {\n  if (\"development\" !== 'production' && !(this instanceof Vue)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n/*  */\n\nfunction initUse(Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = this._installedPlugins || (this._installedPlugins = []);\n\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this;\n    } // additional parameters\n\n\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n\n    installedPlugins.push(plugin);\n    return this;\n  };\n}\n/*  */\n\n\nfunction initMixin$1(Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this;\n  };\n}\n/*  */\n\n\nfunction initExtend(Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n  /**\n   * Class inheritance\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId];\n    }\n\n    var name = extendOptions.name || Super.options.name;\n\n    if (\"development\" !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent(options) {\n      this._init(options);\n    };\n\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super; // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    } // allow further extension/mixin/plugin usage\n\n\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use; // create asset registers, so extended classes\n    // can have their private assets too.\n\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    }); // enable recursive self-lookup\n\n    if (name) {\n      Sub.options.components[name] = Sub;\n    } // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n\n\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options); // cache constructor\n\n    cachedCtors[SuperId] = Sub;\n    return Sub;\n  };\n}\n\nfunction initProps$1(Comp) {\n  var props = Comp.options.props;\n\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1(Comp) {\n  var computed = Comp.options.computed;\n\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n/*  */\n\n\nfunction initAssetRegisters(Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (\"development\" !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = {\n            bind: definition,\n            update: definition\n          };\n        }\n\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n}\n/*  */\n\n\nfunction getComponentName(opts) {\n  return opts && (opts.Ctor.options.name || opts.tag);\n}\n\nfunction matches(pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1;\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1;\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name);\n  }\n  /* istanbul ignore next */\n\n\n  return false;\n}\n\nfunction pruneCache(keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n\n  for (var key in cache) {\n    var cachedNode = cache[key];\n\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry(cache, key, keys, current) {\n  var cached$$1 = cache[key];\n\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n  created: function created() {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n  destroyed: function destroyed() {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) {\n        return matches(val, name);\n      });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) {\n        return !matches(val, name);\n      });\n    });\n  },\n  render: function render() {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n\n      if ( // not included\n      include && (!name || !matches(include, name)) || // excluded\n      exclude && name && matches(exclude, name)) {\n        return vnode;\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null // same constructor may get registered as different local components\n      // so cid alone is not enough (#3269)\n      ? componentOptions.Ctor.cid + (componentOptions.tag ? \"::\" + componentOptions.tag : '') : vnode.key;\n\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance; // make current key freshest\n\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key); // prune oldest entry\n\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n\n    return vnode || slot && slot[0];\n  }\n};\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n  /*  */\n\n};\n\nfunction initGlobalAPI(Vue) {\n  // config\n  var configDef = {};\n\n  configDef.get = function () {\n    return config;\n  };\n\n  if (true) {\n    configDef.set = function () {\n      warn('Do not replace the Vue.config object, set individual fields instead.');\n    };\n  }\n\n  Object.defineProperty(Vue, 'config', configDef); // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  }); // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n\n  Vue.options._base = Vue;\n  extend(Vue.options.components, builtInComponents);\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get() {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext;\n  }\n}); // expose FunctionalRenderContext for ssr runtime helper installation\n\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\nVue.version = '2.5.17';\n/*  */\n// these are reserved for web because they are directly compiled away\n// during template compilation\n\nvar isReservedAttr = makeMap('style,class'); // attributes that should be using props for binding\n\nvar acceptValue = makeMap('input,textarea,option,select,progress');\n\nvar mustUseProp = function (tag, type, attr) {\n  return attr === 'value' && acceptValue(tag) && type !== 'button' || attr === 'selected' && tag === 'option' || attr === 'checked' && tag === 'input' || attr === 'muted' && tag === 'video';\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\nvar isBooleanAttr = makeMap('allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' + 'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' + 'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' + 'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' + 'required,reversed,scoped,seamless,selected,sortable,translate,' + 'truespeed,typemustmatch,visible');\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink';\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : '';\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false;\n};\n/*  */\n\n\nfunction genClassForVnode(vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n\n  return renderClass(data.staticClass, data.class);\n}\n\nfunction mergeClassData(child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class) ? [child.class, parent.class] : parent.class\n  };\n}\n\nfunction renderClass(staticClass, dynamicClass) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass));\n  }\n  /* istanbul ignore next */\n\n\n  return '';\n}\n\nfunction concat(a, b) {\n  return a ? b ? a + ' ' + b : a : b || '';\n}\n\nfunction stringifyClass(value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value);\n  }\n\n  if (isObject(value)) {\n    return stringifyObject(value);\n  }\n\n  if (typeof value === 'string') {\n    return value;\n  }\n  /* istanbul ignore next */\n\n\n  return '';\n}\n\nfunction stringifyArray(value) {\n  var res = '';\n  var stringified;\n\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) {\n        res += ' ';\n      }\n\n      res += stringified;\n    }\n  }\n\n  return res;\n}\n\nfunction stringifyObject(value) {\n  var res = '';\n\n  for (var key in value) {\n    if (value[key]) {\n      if (res) {\n        res += ' ';\n      }\n\n      res += key;\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\nvar isHTMLTag = makeMap('html,body,base,head,link,meta,style,title,' + 'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' + 'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' + 'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' + 's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' + 'embed,object,param,source,canvas,script,noscript,del,ins,' + 'caption,col,colgroup,table,thead,tbody,td,th,tr,' + 'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' + 'output,progress,select,textarea,' + 'details,dialog,menu,menuitem,summary,' + 'content,element,shadow,template,blockquote,iframe,tfoot'); // this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\n\nvar isSVG = makeMap('svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' + 'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' + 'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view', true);\n\nvar isPreTag = function (tag) {\n  return tag === 'pre';\n};\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag);\n};\n\nfunction getTagNamespace(tag) {\n  if (isSVG(tag)) {\n    return 'svg';\n  } // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n\n\n  if (tag === 'math') {\n    return 'math';\n  }\n}\n\nvar unknownElementCache = Object.create(null);\n\nfunction isUnknownElement(tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true;\n  }\n\n  if (isReservedTag(tag)) {\n    return false;\n  }\n\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag];\n  }\n\n  var el = document.createElement(tag);\n\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return unknownElementCache[tag] = el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n  } else {\n    return unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString());\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n\n    if (!selected) {\n      \"development\" !== 'production' && warn('Cannot find element: ' + el);\n      return document.createElement('div');\n    }\n\n    return selected;\n  } else {\n    return el;\n  }\n}\n/*  */\n\n\nfunction createElement$1(tagName, vnode) {\n  var elm = document.createElement(tagName);\n\n  if (tagName !== 'select') {\n    return elm;\n  } // false or null will remove the attribute but undefined will not\n\n\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n\n  return elm;\n}\n\nfunction createElementNS(namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName);\n}\n\nfunction createTextNode(text) {\n  return document.createTextNode(text);\n}\n\nfunction createComment(text) {\n  return document.createComment(text);\n}\n\nfunction insertBefore(parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild(node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild(node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode(node) {\n  return node.parentNode;\n}\n\nfunction nextSibling(node) {\n  return node.nextSibling;\n}\n\nfunction tagName(node) {\n  return node.tagName;\n}\n\nfunction setTextContent(node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope(node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n/*  */\n\nvar ref = {\n  create: function create(_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update(oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy(vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef(vnode, isRemoval) {\n  var key = vnode.data.ref;\n\n  if (!isDef(key)) {\n    return;\n  }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\n\nvar emptyNode = new VNode('', {}, []);\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode(a, b) {\n  return a.key === b.key && (a.tag === b.tag && a.isComment === b.isComment && isDef(a.data) === isDef(b.data) && sameInputType(a, b) || isTrue(a.isAsyncPlaceholder) && a.asyncFactory === b.asyncFactory && isUndef(b.asyncFactory.error));\n}\n\nfunction sameInputType(a, b) {\n  if (a.tag !== 'input') {\n    return true;\n  }\n\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB);\n}\n\nfunction createKeyToOldIdx(children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n\n    if (isDef(key)) {\n      map[key] = i;\n    }\n  }\n\n  return map;\n}\n\nfunction createPatchFunction(backend) {\n  var i, j;\n  var cbs = {};\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt(elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm);\n  }\n\n  function createRmCb(childElm, listeners) {\n    function remove() {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n\n    remove.listeners = listeners;\n    return remove;\n  }\n\n  function removeNode(el) {\n    var parent = nodeOps.parentNode(el); // element may have already been removed due to v-html / v-text\n\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1(vnode, inVPre) {\n    return !inVPre && !vnode.ns && !(config.ignoredElements.length && config.ignoredElements.some(function (ignore) {\n      return isRegExp(ignore) ? ignore.test(vnode.tag) : ignore === vnode.tag;\n    })) && config.isUnknownElement(vnode.tag);\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm(vnode, insertedVnodeQueue, parentElm, refElm, nested, ownerArray, index) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return;\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n\n    if (isDef(tag)) {\n      if (true) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.', vnode.context);\n        }\n      }\n\n      vnode.elm = vnode.ns ? nodeOps.createElementNS(vnode.ns, tag) : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n      /* istanbul ignore if */\n\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (\"development\" !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false\n        /* hydrating */\n        , parentElm, refElm);\n      } // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n\n\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n\n        return true;\n      }\n    }\n  }\n\n  function initComponent(vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n\n    vnode.elm = vnode.componentInstance.$el;\n\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode); // make sure to invoke the insert hook\n\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i; // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n\n    var innerNode = vnode;\n\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n\n        insertedVnodeQueue.push(innerNode);\n        break;\n      }\n    } // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n\n\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert(parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren(vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (true) {\n        checkDuplicateKeys(children);\n      }\n\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable(vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n\n    return isDef(vnode.tag);\n  }\n\n  function invokeCreateHooks(vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n\n    i = vnode.data.hook; // Reuse variable\n\n    if (isDef(i)) {\n      if (isDef(i.create)) {\n        i.create(emptyNode, vnode);\n      }\n\n      if (isDef(i.insert)) {\n        insertedVnodeQueue.push(vnode);\n      }\n    }\n  } // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n\n\n  function setScope(vnode) {\n    var i;\n\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n\n        ancestor = ancestor.parent;\n      }\n    } // for slot content they should also get the scopeId from the host instance.\n\n\n    if (isDef(i = activeInstance) && i !== vnode.context && i !== vnode.fnContext && isDef(i = i.$options._scopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook(vnode) {\n    var i, j;\n    var data = vnode.data;\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) {\n        i(vnode);\n      }\n\n      for (i = 0; i < cbs.destroy.length; ++i) {\n        cbs.destroy[i](vnode);\n      }\n    }\n\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes(parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else {\n          // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook(vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } // recursively invoke hooks on child component root node\n\n\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm; // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n\n    var canMove = !removeOnly;\n\n    if (true) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) {\n        // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) {\n        // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) {\n          oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);\n        }\n\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n\n        if (isUndef(idxInOld)) {\n          // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys(children) {\n    var seenKeys = {};\n\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\", vnode.context);\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld(node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n\n      if (isDef(c) && sameVnode(node, c)) {\n        return i;\n      }\n    }\n  }\n\n  function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return;\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n\n      return;\n    } // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n\n\n    if (isTrue(vnode.isStatic) && isTrue(oldVnode.isStatic) && vnode.key === oldVnode.key && (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return;\n    }\n\n    var i;\n    var data = vnode.data;\n\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) {\n        cbs.update[i](oldVnode, vnode);\n      }\n\n      if (isDef(i = data.hook) && isDef(i = i.update)) {\n        i(oldVnode, vnode);\n      }\n    }\n\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) {\n          updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);\n        }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) {\n          nodeOps.setTextContent(elm, '');\n        }\n\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) {\n        i(oldVnode, vnode);\n      }\n    }\n  }\n\n  function invokeInsertHook(vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false; // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key'); // Note: this is a browser-only function so we can assume elms are DOM nodes.\n\n  function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || data && data.pre;\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true;\n    } // assert node match\n\n\n    if (true) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false;\n      }\n    }\n\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) {\n        i(vnode, true\n        /* hydrating */\n        );\n      }\n\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true;\n      }\n    }\n\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n\n              return false;\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break;\n              }\n\n              childNode = childNode.nextSibling;\n            } // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n\n\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (\"development\" !== 'production' && typeof console !== 'undefined' && !hydrationBailed) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n\n              return false;\n            }\n          }\n        }\n      }\n\n      if (isDef(data)) {\n        var fullInvoke = false;\n\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break;\n          }\n        }\n\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n\n    return true;\n  }\n\n  function assertNodeMatch(node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || !isUnknownElement$$1(vnode, inVPre) && vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase());\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3);\n    }\n  }\n\n  return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) {\n        invokeDestroyHook(oldVnode);\n      }\n\n      return;\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode;\n            } else if (true) {\n              warn('The client-side rendered virtual DOM tree is not matching ' + 'server-rendered content. This is likely caused by incorrect ' + 'HTML markup, for example nesting block-level elements inside ' + '<p>, or missing <tbody>. Bailing hydration and performing ' + 'full client-side render.');\n            }\n          } // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n\n\n          oldVnode = emptyNodeAt(oldVnode);\n        } // replacing existing element\n\n\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm); // create new node\n\n        createElm(vnode, insertedVnodeQueue, // extremely rare edge case: do not insert if old element is in a\n        // leaving transition. Only happens when combining transition +\n        // keep-alive + HOCs. (#4590)\n        oldElm._leaveCb ? null : parentElm$1, nodeOps.nextSibling(oldElm)); // update parent placeholder node element, recursively\n\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n\n            ancestor.elm = vnode.elm;\n\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              } // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n\n\n              var insert = ancestor.data.hook.insert;\n\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n\n            ancestor = ancestor.parent;\n          }\n        } // destroy old node\n\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm;\n  };\n}\n/*  */\n\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives(vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives(oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update(oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n  var key, oldDir, dir;\n\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1(dirs, vm) {\n  var res = Object.create(null);\n\n  if (!dirs) {\n    // $flow-disable-line\n    return res;\n  }\n\n  var i, dir;\n\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  } // $flow-disable-line\n\n\n  return res;\n}\n\nfunction getRawDirName(dir) {\n  return dir.rawName || dir.name + \".\" + Object.keys(dir.modifiers || {}).join('.');\n}\n\nfunction callHook$1(dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, \"directive \" + dir.name + \" \" + hook + \" hook\");\n    }\n  }\n}\n\nvar baseModules = [ref, directives];\n/*  */\n\nfunction updateAttrs(oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return;\n  }\n\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return;\n  }\n\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {}; // clone observed objects, as the user probably wants to mutate it\n\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  } // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n\n  /* istanbul ignore if */\n\n\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr(el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED' ? 'true' : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr(el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n\n    /* istanbul ignore if */\n    if (isIE && !isIE9 && el.tagName === 'TEXTAREA' && key === 'placeholder' && !el.__ieph) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n\n      el.addEventListener('input', blocker); // $flow-disable-line\n\n      el.__ieph = true;\n      /* IE placeholder patched */\n    }\n\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n  /*  */\n\n};\n\nfunction updateClass(oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticClass) && isUndef(data.class) && (isUndef(oldData) || isUndef(oldData.staticClass) && isUndef(oldData.class))) {\n    return;\n  }\n\n  var cls = genClassForVnode(vnode); // handle transition classes\n\n  var transitionClass = el._transitionClasses;\n\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  } // set the class\n\n\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n  /*  */\n\n};\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters(exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) {\n        inSingle = false;\n      }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) {\n        inDouble = false;\n      }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) {\n        inTemplateString = false;\n      }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) {\n        inRegex = false;\n      }\n    } else if (c === 0x7C && // pipe\n    exp.charCodeAt(i + 1) !== 0x7C && exp.charCodeAt(i - 1) !== 0x7C && !curly && !square && !paren) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;\n          break;\n        // \"\n\n        case 0x27:\n          inSingle = true;\n          break;\n        // '\n\n        case 0x60:\n          inTemplateString = true;\n          break;\n        // `\n\n        case 0x28:\n          paren++;\n          break;\n        // (\n\n        case 0x29:\n          paren--;\n          break;\n        // )\n\n        case 0x5B:\n          square++;\n          break;\n        // [\n\n        case 0x5D:\n          square--;\n          break;\n        // ]\n\n        case 0x7B:\n          curly++;\n          break;\n        // {\n\n        case 0x7D:\n          curly--;\n          break;\n        // }\n      }\n\n      if (c === 0x2f) {\n        // /\n        var j = i - 1;\n        var p = void 0; // find first non-whitespace prev char\n\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n\n          if (p !== ' ') {\n            break;\n          }\n        }\n\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter() {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression;\n}\n\nfunction wrapFilter(exp, filter) {\n  var i = filter.indexOf('(');\n\n  if (i < 0) {\n    // _f: resolveFilter\n    return \"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\";\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return \"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args);\n  }\n}\n/*  */\n\n\nfunction baseWarn(msg) {\n  console.error(\"[Vue compiler]: \" + msg);\n}\n\nfunction pluckModuleFunction(modules, key) {\n  return modules ? modules.map(function (m) {\n    return m[key];\n  }).filter(function (_) {\n    return _;\n  }) : [];\n}\n\nfunction addProp(el, name, value) {\n  (el.props || (el.props = [])).push({\n    name: name,\n    value: value\n  });\n  el.plain = false;\n}\n\nfunction addAttr(el, name, value) {\n  (el.attrs || (el.attrs = [])).push({\n    name: name,\n    value: value\n  });\n  el.plain = false;\n} // add a raw attr (use this in preTransforms)\n\n\nfunction addRawAttr(el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({\n    name: name,\n    value: value\n  });\n}\n\nfunction addDirective(el, name, rawName, value, arg, modifiers) {\n  (el.directives || (el.directives = [])).push({\n    name: name,\n    rawName: rawName,\n    value: value,\n    arg: arg,\n    modifiers: modifiers\n  });\n  el.plain = false;\n}\n\nfunction addHandler(el, name, value, modifiers, important, warn) {\n  modifiers = modifiers || emptyObject; // warn prevent and passive modifier\n\n  /* istanbul ignore if */\n\n  if (\"development\" !== 'production' && warn && modifiers.prevent && modifiers.passive) {\n    warn('passive and prevent can\\'t be used together. ' + 'Passive handler can\\'t prevent default event.');\n  } // check capture modifier\n\n\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n\n\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  } // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n\n\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr(el, name, getStatic) {\n  var dynamicValue = getAndRemoveAttr(el, ':' + name) || getAndRemoveAttr(el, 'v-bind:' + name);\n\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue);\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n\n    if (staticValue != null) {\n      return JSON.stringify(staticValue);\n    }\n  }\n} // note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n\nfunction getAndRemoveAttr(el, name, removeFromMap) {\n  var val;\n\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n\n  return val;\n}\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\nfunction genComponentModel(el, value, modifiers) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n\n  if (trim) {\n    valueExpression = \"(typeof \" + baseValueExpression + \" === 'string'\" + \"? \" + baseValueExpression + \".trim()\" + \": \" + baseValueExpression + \")\";\n  }\n\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var assignment = genAssignmentCode(value, valueExpression);\n  el.model = {\n    value: \"(\" + value + \")\",\n    expression: \"\\\"\" + value + \"\\\"\",\n    callback: \"function (\" + baseValueExpression + \") {\" + assignment + \"}\"\n  };\n}\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n\nfunction genAssignmentCode(value, assignment) {\n  var res = parseModel(value);\n\n  if (res.key === null) {\n    return value + \"=\" + assignment;\n  } else {\n    return \"$set(\" + res.exp + \", \" + res.key + \", \" + assignment + \")\";\n  }\n}\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel(val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      };\n    } else {\n      return {\n        exp: val,\n        key: null\n      };\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  };\n}\n\nfunction next() {\n  return str.charCodeAt(++index$1);\n}\n\nfunction eof() {\n  return index$1 >= len;\n}\n\nfunction isStringStart(chr) {\n  return chr === 0x22 || chr === 0x27;\n}\n\nfunction parseBracket(chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n\n  while (!eof()) {\n    chr = next();\n\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue;\n    }\n\n    if (chr === 0x5B) {\n      inBracket++;\n    }\n\n    if (chr === 0x5D) {\n      inBracket--;\n    }\n\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break;\n    }\n  }\n}\n\nfunction parseString(chr) {\n  var stringQuote = chr;\n\n  while (!eof()) {\n    chr = next();\n\n    if (chr === stringQuote) {\n      break;\n    }\n  }\n}\n/*  */\n\n\nvar warn$1; // in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\n\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model(el, dir, _warn) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (true) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\"<\" + el.tag + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" + \"File inputs are read only. Use a v-on:change listener instead.\");\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime\n\n    return false;\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers); // component v-model doesn't need extra runtime\n\n    return false;\n  } else if (true) {\n    warn$1(\"<\" + el.tag + \" v-model=\\\"\" + value + \"\\\">: \" + \"v-model is not supported on this element type. \" + 'If you are working with contenteditable, it\\'s recommended to ' + 'wrap a library dedicated for that purpose inside a custom component.');\n  } // ensure runtime directive metadata\n\n\n  return true;\n}\n\nfunction genCheckboxModel(el, value, modifiers) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked', \"Array.isArray(\" + value + \")\" + \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (trueValueBinding === 'true' ? \":(\" + value + \")\" : \":_q(\" + value + \",\" + trueValueBinding + \")\"));\n  addHandler(el, 'change', \"var $$a=\" + value + \",\" + '$$el=$event.target,' + \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" + 'if(Array.isArray($$a)){' + \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" + '$$i=_i($$a,$$v);' + \"if($$el.checked){$$i<0&&(\" + genAssignmentCode(value, '$$a.concat([$$v])') + \")}\" + \"else{$$i>-1&&(\" + genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))') + \")}\" + \"}else{\" + genAssignmentCode(value, '$$c') + \"}\", null, true);\n}\n\nfunction genRadioModel(el, value, modifiers) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? \"_n(\" + valueBinding + \")\" : valueBinding;\n  addProp(el, 'checked', \"_q(\" + value + \",\" + valueBinding + \")\");\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect(el, value, modifiers) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" + \".call($event.target.options,function(o){return o.selected})\" + \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" + \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + genAssignmentCode(value, assignment);\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel(el, value, modifiers) {\n  var type = el.attrsMap.type; // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n\n  if (true) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" + 'because the latter already expands to a value binding internally');\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy ? 'change' : type === 'range' ? RANGE_TOKEN : 'input';\n  var valueExpression = '$event.target.value';\n\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', \"(\" + value + \")\");\n  addHandler(el, event, code, null, true);\n\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n/*  */\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\n\n\nfunction normalizeEvents(on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  } // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n\n  /* istanbul ignore if */\n\n\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler(handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n\n  return function onceHandler() {\n    var res = handler.apply(null, arguments);\n\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  };\n}\n\nfunction add$1(event, handler, once$$1, capture, passive) {\n  handler = withMacroTask(handler);\n\n  if (once$$1) {\n    handler = createOnceHandler(handler, event, capture);\n  }\n\n  target$1.addEventListener(event, handler, supportsPassive ? {\n    capture: capture,\n    passive: passive\n  } : capture);\n}\n\nfunction remove$2(event, handler, capture, _target) {\n  (_target || target$1).removeEventListener(event, handler._withTask || handler, capture);\n}\n\nfunction updateDOMListeners(oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return;\n  }\n\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n  /*  */\n\n};\n\nfunction updateDOMProps(oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return;\n  }\n\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {}; // clone observed objects, as the user probably wants to mutate it\n\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n\n  for (key in props) {\n    cur = props[key]; // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) {\n        vnode.children.length = 0;\n      }\n\n      if (cur === oldProps[key]) {\n        continue;\n      } // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n\n\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur; // avoid resetting cursor position when value is the same\n\n      var strCur = isUndef(cur) ? '' : String(cur);\n\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n} // check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue(elm, checkVal) {\n  return !elm.composing && (elm.tagName === 'OPTION' || isNotInFocusAndDirty(elm, checkVal) || isDirtyWithModifiers(elm, checkVal));\n}\n\nfunction isNotInFocusAndDirty(elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true; // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n\n  try {\n    notInFocus = document.activeElement !== elm;\n  } catch (e) {}\n\n  return notInFocus && elm.value !== checkVal;\n}\n\nfunction isDirtyWithModifiers(elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false;\n    }\n\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal);\n    }\n\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim();\n    }\n  }\n\n  return value !== newVal;\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n  /*  */\n\n};\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res;\n}); // merge static and dynamic style data on the same vnode\n\nfunction normalizeStyleData(data) {\n  var style = normalizeStyleBinding(data.style); // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n\n  return data.staticStyle ? extend(data.staticStyle, style) : style;\n} // normalize possible array / string values into Object\n\n\nfunction normalizeStyleBinding(bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle);\n  }\n\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle);\n  }\n\n  return bindingStyle;\n}\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\n\n\nfunction getStyle(vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n\n      if (childNode && childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if (styleData = normalizeStyleData(vnode.data)) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n\n  while (parentNode = parentNode.parent) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n\n  return res;\n}\n/*  */\n\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\n\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n\n  if (prop !== 'filter' && prop in emptyStyle) {\n    return prop;\n  }\n\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n\n    if (name in emptyStyle) {\n      return name;\n    }\n  }\n});\n\nfunction updateStyle(oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) && isUndef(oldData.staticStyle) && isUndef(oldData.style)) {\n    return;\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {}; // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n  var style = normalizeStyleBinding(vnode.data.style) || {}; // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n\n  vnode.data.normalizedStyle = isDef(style.__ob__) ? extend({}, style) : style;\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n\n  for (name in newStyle) {\n    cur = newStyle[name];\n\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n  /*  */\n\n  /**\n   * Add class with compatibility for SVG since classList is not supported on\n   * SVG elements in IE\n   */\n\n};\n\nfunction addClass(el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) {\n        return el.classList.add(c);\n      });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\n\n\nfunction removeClass(el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) {\n        return el.classList.remove(c);\n      });\n    } else {\n      el.classList.remove(cls);\n    }\n\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n\n    cur = cur.trim();\n\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n/*  */\n\n\nfunction resolveTransition(def) {\n  if (!def) {\n    return;\n  }\n  /* istanbul ignore else */\n\n\n  if (typeof def === 'object') {\n    var res = {};\n\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n\n    extend(res, def);\n    return res;\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def);\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: name + \"-enter\",\n    enterToClass: name + \"-enter-to\",\n    enterActiveClass: name + \"-enter-active\",\n    leaveClass: name + \"-leave\",\n    leaveToClass: name + \"-leave-to\",\n    leaveActiveClass: name + \"-leave-active\"\n  };\n});\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation'; // Transition property/event sniffing\n\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\n\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined && window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n\n  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n} // binding to window is necessary to make hot reload work in IE in strict mode\n\n\nvar raf = inBrowser ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout :\n/* istanbul ignore next */\nfunction (fn) {\n  return fn();\n};\n\nfunction nextFrame(fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass(el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass(el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds(el, expectedType, cb) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n\n  if (!type) {\n    return cb();\n  }\n\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo(el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0 ? transitionTimeout > animationTimeout ? TRANSITION : ANIMATION : null;\n    propCount = type ? type === TRANSITION ? transitionDurations.length : animationDurations.length : 0;\n  }\n\n  var hasTransform = type === TRANSITION && transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  };\n}\n\nfunction getTimeout(delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i]);\n  }));\n}\n\nfunction toMs(s) {\n  return Number(s.slice(0, -1)) * 1000;\n}\n/*  */\n\n\nfunction enter(vnode, toggleDisplay) {\n  var el = vnode.elm; // call leave callback now\n\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n\n  if (isUndef(data)) {\n    return;\n  }\n  /* istanbul ignore if */\n\n\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return;\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration; // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return;\n  }\n\n  var startClass = isAppear && appearClass ? appearClass : enterClass;\n  var activeClass = isAppear && appearActiveClass ? appearActiveClass : enterActiveClass;\n  var toClass = isAppear && appearToClass ? appearToClass : enterToClass;\n  var beforeEnterHook = isAppear ? beforeAppear || beforeEnter : beforeEnter;\n  var enterHook = isAppear ? typeof appear === 'function' ? appear : enter : enter;\n  var afterEnterHook = isAppear ? afterAppear || afterEnter : afterEnter;\n  var enterCancelledHook = isAppear ? appearCancelled || enterCancelled : enterCancelled;\n  var explicitEnterDuration = toNumber(isObject(duration) ? duration.enter : duration);\n\n  if (\"development\" !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n\n      if (pendingNode && pendingNode.tag === vnode.tag && pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n\n      enterHook && enterHook(el, cb);\n    });\n  } // start enter transition\n\n\n  beforeEnterHook && beforeEnterHook(el);\n\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave(vnode, rm) {\n  var el = vnode.elm; // call enter callback now\n\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm();\n  }\n  /* istanbul ignore if */\n\n\n  if (isDef(el._leaveCb)) {\n    return;\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n  var explicitLeaveDuration = toNumber(isObject(duration) ? duration.leave : duration);\n\n  if (\"development\" !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave() {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return;\n    } // record leaving element\n\n\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n\n    beforeLeave && beforeLeave(el);\n\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n\n    leave && leave(el, cb);\n\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n} // only used in dev mode\n\n\nfunction checkDuration(val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\"<transition> explicit \" + name + \" duration is not a valid number - \" + \"got \" + JSON.stringify(val) + \".\", vnode.context);\n  } else if (isNaN(val)) {\n    warn(\"<transition> explicit \" + name + \" duration is NaN - \" + 'the duration expression might be incorrect.', vnode.context);\n  }\n}\n\nfunction isValidDuration(val) {\n  return typeof val === 'number' && !isNaN(val);\n}\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\n\n\nfunction getHookArgumentsLength(fn) {\n  if (isUndef(fn)) {\n    return false;\n  }\n\n  var invokerFns = fn.fns;\n\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(Array.isArray(invokerFns) ? invokerFns[0] : invokerFns);\n  } else {\n    return (fn._length || fn.length) > 1;\n  }\n}\n\nfunction _enter(_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1(vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\nvar platformModules = [attrs, klass, events, domProps, style, transition];\n/*  */\n// the directive module should be applied last, after all\n// built-in modules have been applied.\n\nvar modules = platformModules.concat(baseModules);\nvar patch = createPatchFunction({\n  nodeOps: nodeOps,\n  modules: modules\n});\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\n\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted(el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd); // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated(el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context); // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n\n      if (curOptions.some(function (o, i) {\n        return !looseEqual(o, prevOptions[i]);\n      })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple ? binding.value.some(function (v) {\n          return hasNoMatchingOption(v, curOptions);\n        }) : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected(el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected(el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n\n  if (isMultiple && !Array.isArray(value)) {\n    \"development\" !== 'production' && warn(\"<select multiple v-model=\\\"\" + binding.expression + \"\\\"> \" + \"expects an Array value for its binding, but got \" + Object.prototype.toString.call(value).slice(8, -1), vm);\n    return;\n  }\n\n  var selected, option;\n\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n\n        return;\n      }\n    }\n  }\n\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption(value, options) {\n  return options.every(function (o) {\n    return !looseEqual(o, value);\n  });\n}\n\nfunction getValue(option) {\n  return '_value' in option ? option._value : option.value;\n}\n\nfunction onCompositionStart(e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd(e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) {\n    return;\n  }\n\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger(el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n/*  */\n// recursively search for possible transition defined inside the component root\n\n\nfunction locateNode(vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition) ? locateNode(vnode.componentInstance._vnode) : vnode;\n}\n\nvar show = {\n  bind: function bind(el, ref, vnode) {\n    var value = ref.value;\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay = el.style.display === 'none' ? '' : el.style.display;\n\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n  update: function update(el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n    /* istanbul ignore if */\n\n    if (!value === !oldValue) {\n      return;\n    }\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n\n    if (transition$$1) {\n      vnode.data.show = true;\n\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n  unbind: function unbind(el, binding, vnode, oldVnode, isDestroy) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\nvar platformDirectives = {\n  model: directive,\n  show: show\n  /*  */\n  // Provides transition support for a single element/component.\n  // supports transition mode (out-in / in-out)\n\n};\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n}; // in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\n\nfunction getRealChild(vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children));\n  } else {\n    return vnode;\n  }\n}\n\nfunction extractTransitionData(comp) {\n  var data = {};\n  var options = comp.$options; // props\n\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  } // events.\n  // extract listeners and pass them directly to the transition methods\n\n\n  var listeners = options._parentListeners;\n\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n\n  return data;\n}\n\nfunction placeholder(h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    });\n  }\n}\n\nfunction hasParentTransition(vnode) {\n  while (vnode = vnode.parent) {\n    if (vnode.data.transition) {\n      return true;\n    }\n  }\n}\n\nfunction isSameChild(child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag;\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n  render: function render(h) {\n    var this$1 = this;\n    var children = this.$slots.default;\n\n    if (!children) {\n      return;\n    } // filter out text nodes (possible whitespaces)\n\n\n    children = children.filter(function (c) {\n      return c.tag || isAsyncPlaceholder(c);\n    });\n    /* istanbul ignore if */\n\n    if (!children.length) {\n      return;\n    } // warn multiple elements\n\n\n    if (\"development\" !== 'production' && children.length > 1) {\n      warn('<transition> can only be used on a single element. Use ' + '<transition-group> for lists.', this.$parent);\n    }\n\n    var mode = this.mode; // warn invalid mode\n\n    if (\"development\" !== 'production' && mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn('invalid <transition> mode: ' + mode, this.$parent);\n    }\n\n    var rawChild = children[0]; // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild;\n    } // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n\n\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n\n    if (!child) {\n      return rawChild;\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild);\n    } // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n\n\n    var id = \"__transition-\" + this._uid + \"-\";\n    child.key = child.key == null ? child.isComment ? id + 'comment' : id + child.tag : isPrimitive(child.key) ? String(child.key).indexOf(id) === 0 ? child.key : id + child.key : child.key;\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild); // mark v-show\n    // so that the transition module can hand over the control to the directive\n\n    if (child.data.directives && child.data.directives.some(function (d) {\n      return d.name === 'show';\n    })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild) && !isAsyncPlaceholder(oldChild) && // #6687 component root is a comment node\n    !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data); // handle transition mode\n\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild);\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild;\n        }\n\n        var delayedLeave;\n\n        var performLeave = function () {\n          delayedLeave();\n        };\n\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) {\n          delayedLeave = leave;\n        });\n      }\n    }\n\n    return rawChild;\n  }\n  /*  */\n  // Provides transition support for list items.\n  // supports move transitions using the FLIP technique.\n  // Because the vdom's children update algorithm is \"unstable\" - i.e.\n  // it doesn't guarantee the relative positioning of removed elements,\n  // we force transition-group to update its children into two passes:\n  // in the first pass, we remove all nodes that need to be removed,\n  // triggering their leaving transition; in the second pass, we insert/move\n  // into the final desired state. This way in the second pass removed\n  // nodes will remain where they should be.\n\n};\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\ndelete props.mode;\nvar TransitionGroup = {\n  props: props,\n  render: function render(h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c;\n          (c.data || (c.data = {})).transition = transitionData;\n        } else if (true) {\n          var opts = c.componentOptions;\n          var name = opts ? opts.Ctor.options.name || opts.tag || '' : c.tag;\n          warn(\"<transition-group> children must be keyed: <\" + name + \">\");\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children);\n  },\n  beforeUpdate: function beforeUpdate() {\n    // force removing pass\n    this.__patch__(this._vnode, this.kept, false, // hydrating\n    true // removeOnly (!important, avoids unnecessary moves)\n    );\n\n    this._vnode = this.kept;\n  },\n  updated: function updated() {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || (this.name || 'v') + '-move';\n\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return;\n    } // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n\n\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation); // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n\n    this._reflow = document.body.offsetHeight;\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n  methods: {\n    hasMove: function hasMove(el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false;\n      }\n      /* istanbul ignore if */\n\n\n      if (this._hasMove) {\n        return this._hasMove;\n      } // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n\n\n      var clone = el.cloneNode();\n\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) {\n          removeClass(clone, cls);\n        });\n      }\n\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return this._hasMove = info.hasTransform;\n    }\n  }\n};\n\nfunction callPendingCbs(c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n\n\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition(c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation(c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n  /*  */\n  // install platform specific utils\n\n};\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement; // install platform runtime directives & components\n\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents); // install platform patch function\n\nVue.prototype.__patch__ = inBrowser ? patch : noop; // public mount method\n\nVue.prototype.$mount = function (el, hydrating) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating);\n}; // devtools global hook\n\n/* istanbul ignore next */\n\n\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\"development\" !== 'production' && \"development\" !== 'test' && isChrome) {\n        console[console.info ? 'info' : 'log']('Download the Vue Devtools extension for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n      }\n    }\n\n    if (\"development\" !== 'production' && \"development\" !== 'test' && config.productionTip !== false && typeof console !== 'undefined') {\n      console[console.info ? 'info' : 'log'](\"You are running Vue in development mode.\\n\" + \"Make sure to turn on production mode when deploying for production.\\n\" + \"See more tips at https://vuejs.org/guide/deployment.html\");\n    }\n  }, 0);\n}\n/*  */\n\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g');\n});\n\nfunction parseText(text, delimiters) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n\n  if (!tagRE.test(text)) {\n    return;\n  }\n\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n\n  while (match = tagRE.exec(text)) {\n    index = match.index; // push text token\n\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    } // tag token\n\n\n    var exp = parseFilters(match[1].trim());\n    tokens.push(\"_s(\" + exp + \")\");\n    rawTokens.push({\n      '@binding': exp\n    });\n    lastIndex = index + match[0].length;\n  }\n\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  };\n}\n/*  */\n\n\nfunction transformNode(el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n\n  if (\"development\" !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n\n    if (res) {\n      warn(\"class=\\\"\" + staticClass + \"\\\": \" + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.');\n    }\n  }\n\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n\n  var classBinding = getBindingAttr(el, 'class', false\n  /* getStatic */\n  );\n\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData(el) {\n  var data = '';\n\n  if (el.staticClass) {\n    data += \"staticClass:\" + el.staticClass + \",\";\n  }\n\n  if (el.classBinding) {\n    data += \"class:\" + el.classBinding + \",\";\n  }\n\n  return data;\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n  /*  */\n\n};\n\nfunction transformNode$1(el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (true) {\n      var res = parseText(staticStyle, options.delimiters);\n\n      if (res) {\n        warn(\"style=\\\"\" + staticStyle + \"\\\": \" + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.');\n      }\n    }\n\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false\n  /* getStatic */\n  );\n\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1(el) {\n  var data = '';\n\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + el.staticStyle + \",\";\n  }\n\n  if (el.styleBinding) {\n    data += \"style:(\" + el.styleBinding + \"),\";\n  }\n\n  return data;\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n  /*  */\n\n};\nvar decoder;\nvar he = {\n  decode: function decode(html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent;\n  }\n  /*  */\n\n};\nvar isUnaryTag = makeMap('area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' + 'link,meta,param,source,track,wbr'); // Elements that you can, intentionally, leave open\n// (and which close themselves)\n\nvar canBeLeftOpenTag = makeMap('colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'); // HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\n\nvar isNonPhrasingTag = makeMap('address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' + 'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' + 'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' + 'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' + 'title,tr,track');\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n// Regular Expressions for parsing tags and attributes\n\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\n\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp(\"^<\" + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp(\"^<\\\\/\" + qnameCapture + \"[^>]*>\");\nvar doctype = /^<!DOCTYPE [^>]+>/i; // #7298: escape - to avoid being pased as HTML comment when inlined in page\n\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n}); // Special Elements (can contain anything)\n\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g; // #5992\n\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\n\nvar shouldIgnoreFirstNewline = function (tag, html) {\n  return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n';\n};\n\nfunction decodeAttr(value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) {\n    return decodingMap[match];\n  });\n}\n\nfunction parseHTML(html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n\n  while (html) {\n    last = html; // Make sure we're not in a plaintext content element like script/style\n\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n\n            advance(commentEnd + 3);\n            continue;\n          }\n        } // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n\n\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue;\n          }\n        } // Doctype:\n\n\n        var doctypeMatch = html.match(doctype);\n\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue;\n        } // End tag:\n\n\n        var endTagMatch = html.match(endTag);\n\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue;\n        } // Start tag:\n\n\n        var startTagMatch = parseStartTag();\n\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n\n          continue;\n        }\n      }\n\n      var text = void 0,\n          rest = void 0,\n          next = void 0;\n\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n\n        while (!endTag.test(rest) && !startTagOpen.test(rest) && !comment.test(rest) && !conditionalComment.test(rest)) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n\n          if (next < 0) {\n            break;\n          }\n\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text.replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n          .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n\n        if (options.chars) {\n          options.chars(text);\n        }\n\n        return '';\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n\n      if (\"development\" !== 'production' && !stack.length && options.warn) {\n        options.warn(\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\");\n      }\n\n      break;\n    }\n  } // Clean up any remaining tags\n\n\n  parseEndTag();\n\n  function advance(n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag() {\n    var start = html.match(startTagOpen);\n\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match;\n      }\n    }\n  }\n\n  function handleStartTag(match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i]; // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') {\n          delete args[3];\n        }\n\n        if (args[4] === '') {\n          delete args[4];\n        }\n\n        if (args[5] === '') {\n          delete args[5];\n        }\n      }\n\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href' ? options.shouldDecodeNewlinesForHref : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({\n        tag: tagName,\n        lowerCasedTag: tagName.toLowerCase(),\n        attrs: attrs\n      });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag(tagName, start, end) {\n    var pos, lowerCasedTagName;\n\n    if (start == null) {\n      start = index;\n    }\n\n    if (end == null) {\n      end = index;\n    }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    } // Find the closest opened tag of the same type\n\n\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break;\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (\"development\" !== 'production' && (i > pos || !tagName) && options.warn) {\n          options.warn(\"tag <\" + stack[i].tag + \"> has no matching end tag.\");\n        }\n\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      } // Remove the open elements from the stack\n\n\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n/*  */\n\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\nvar decodeHTMLCached = cached(he.decode); // configurable state\n\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\nfunction createASTElement(tag, attrs, parent) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  };\n}\n/**\n * Convert HTML string to AST.\n */\n\n\nfunction parse(template, options) {\n  warn$2 = options.warn || baseWarn;\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce(msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement(element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    } // apply post-transforms\n\n\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start(tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = currentParent && currentParent.ns || platformGetTagNamespace(tag); // handle IE svg bug\n\n      /* istanbul ignore if */\n\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"development\" !== 'production' && warn$2('Templates should only be responsible for mapping the state to the ' + 'UI. Avoid placing tags with side-effects in your templates, such as ' + \"<\" + tag + \">\" + ', as they will not be parsed.');\n      } // apply pre-transforms\n\n\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element); // element-scope stuff\n\n        processElement(element, options);\n      }\n\n      function checkRootConstraints(el) {\n        if (true) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\"Cannot use <\" + el.tag + \"> as component root element because it may \" + 'contain multiple nodes.');\n          }\n\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce('Cannot use v-for on stateful component root element because ' + 'it renders multiple elements.');\n          }\n        }\n      } // tree management\n\n\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (true) {\n          warnOnce(\"Component template should contain exactly one root element. \" + \"If you are using v-if on multiple elements, \" + \"use v-else-if to chain them instead.\");\n        }\n      }\n\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) {\n          // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';\n          (currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n    end: function end() {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      } // pop stack\n\n\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n    chars: function chars(text) {\n      if (!currentParent) {\n        if (true) {\n          if (text === template) {\n            warnOnce('Component template requires a root element, rather than just text.');\n          } else if (text = text.trim()) {\n            warnOnce(\"text \\\"\" + text + \"\\\" outside root element will be ignored.\");\n          }\n        }\n\n        return;\n      } // IE textarea placeholder bug\n\n      /* istanbul ignore if */\n\n\n      if (isIE && currentParent.tag === 'textarea' && currentParent.attrsMap.placeholder === text) {\n        return;\n      }\n\n      var children = currentParent.children;\n      text = inPre || text.trim() ? isTextTag(currentParent) ? text : decodeHTMLCached(text) // only preserve whitespace if its not right after a starting tag\n      : preserveWhitespace && children.length ? ' ' : '';\n\n      if (text) {\n        var res;\n\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment(text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root;\n}\n\nfunction processPre(el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs(el) {\n  var l = el.attrsList.length;\n\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement(element, options) {\n  processKey(element); // determine whether this is a plain element after\n  // removing structural attributes\n\n  element.plain = !element.key && !element.attrsList.length;\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n\n  processAttrs(element);\n}\n\nfunction processKey(el) {\n  var exp = getBindingAttr(el, 'key');\n\n  if (exp) {\n    if (\"development\" !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n\n    el.key = exp;\n  }\n}\n\nfunction processRef(el) {\n  var ref = getBindingAttr(el, 'ref');\n\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor(el) {\n  var exp;\n\n  if (exp = getAndRemoveAttr(el, 'v-for')) {\n    var res = parseFor(exp);\n\n    if (res) {\n      extend(el, res);\n    } else if (true) {\n      warn$2(\"Invalid v-for expression: \" + exp);\n    }\n  }\n}\n\nfunction parseFor(exp) {\n  var inMatch = exp.match(forAliasRE);\n\n  if (!inMatch) {\n    return;\n  }\n\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n\n  return res;\n}\n\nfunction processIf(el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions(el, parent) {\n  var prev = findPrevElement(parent.children);\n\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (true) {\n    warn$2(\"v-\" + (el.elseif ? 'else-if=\"' + el.elseif + '\"' : 'else') + \" \" + \"used on element <\" + el.tag + \"> without corresponding v-if.\");\n  }\n}\n\nfunction findPrevElement(children) {\n  var i = children.length;\n\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i];\n    } else {\n      if (\"development\" !== 'production' && children[i].text !== ' ') {\n        warn$2(\"text \\\"\" + children[i].text.trim() + \"\\\" between v-if and v-else(-if) \" + \"will be ignored.\");\n      }\n\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition(el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce(el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot(el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n\n    if (\"development\" !== 'production' && el.key) {\n      warn$2(\"`key` does not work on <slot> because slots are abstract outlets \" + \"and can possibly expand into multiple elements. \" + \"Use the key on a wrapping element instead.\");\n    }\n  } else {\n    var slotScope;\n\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n\n      if (\"development\" !== 'production' && slotScope) {\n        warn$2(\"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" + \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" + \"can also be used on plain elements in addition to <template> to \" + \"denote scoped slots.\", true);\n      }\n\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if (slotScope = getAndRemoveAttr(el, 'slot-scope')) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\"Ambiguous combined usage of slot-scope and v-for on <\" + el.tag + \"> \" + \"(v-for takes higher priority). Use a wrapper <template> for the \" + \"scoped slot to make it clearer.\", true);\n      }\n\n      el.slotScope = slotScope;\n    }\n\n    var slotTarget = getBindingAttr(el, 'slot');\n\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget; // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent(el) {\n  var binding;\n\n  if (binding = getBindingAttr(el, 'is')) {\n    el.component = binding;\n  }\n\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs(el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true; // modifiers\n\n      modifiers = parseModifiers(name);\n\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n\n      if (bindRE.test(name)) {\n        // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n\n            if (name === 'innerHtml') {\n              name = 'innerHTML';\n            }\n          }\n\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n\n          if (modifiers.sync) {\n            addHandler(el, \"update:\" + camelize(name), genAssignmentCode(value, \"$event\"));\n          }\n        }\n\n        if (isProp || !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) {\n        // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else {\n        // normal directives\n        name = name.replace(dirRE, ''); // parse arg\n\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n\n        addDirective(el, name, rawName, value, arg, modifiers);\n\n        if (\"development\" !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (true) {\n        var res = parseText(value, delimiters);\n\n        if (res) {\n          warn$2(name + \"=\\\"\" + value + \"\\\": \" + 'Interpolation inside attributes has been removed. ' + 'Use v-bind or the colon shorthand instead. For example, ' + 'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.');\n        }\n      }\n\n      addAttr(el, name, JSON.stringify(value)); // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n\n      if (!el.component && name === 'muted' && platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor(el) {\n  var parent = el;\n\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true;\n    }\n\n    parent = parent.parent;\n  }\n\n  return false;\n}\n\nfunction parseModifiers(name) {\n  var match = name.match(modifierRE);\n\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) {\n      ret[m.slice(1)] = true;\n    });\n    return ret;\n  }\n}\n\nfunction makeAttrsMap(attrs) {\n  var map = {};\n\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\"development\" !== 'production' && map[attrs[i].name] && !isIE && !isEdge) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n\n    map[attrs[i].name] = attrs[i].value;\n  }\n\n  return map;\n} // for script (e.g. type=\"x/template\") or style, do not decode content\n\n\nfunction isTextTag(el) {\n  return el.tag === 'script' || el.tag === 'style';\n}\n\nfunction isForbiddenTag(el) {\n  return el.tag === 'style' || el.tag === 'script' && (!el.attrsMap.type || el.attrsMap.type === 'text/javascript');\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n/* istanbul ignore next */\n\nfunction guardIESVGBug(attrs) {\n  var res = [];\n\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n\n  return res;\n}\n\nfunction checkForAliasModel(el, value) {\n  var _el = el;\n\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\"<\" + el.tag + \" v-model=\\\"\" + value + \"\\\">: \" + \"You are binding v-model directly to a v-for iteration alias. \" + \"This will not be able to modify the v-for source array because \" + \"writing to the alias is like modifying a function local variable. \" + \"Consider using an array of objects and use v-model on an object property instead.\");\n    }\n\n    _el = _el.parent;\n  }\n}\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\n\nfunction preTransformNode(el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n\n    if (!map['v-model']) {\n      return;\n    }\n\n    var typeBinding;\n\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + map['v-bind'] + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? \"&&(\" + ifCondition + \")\" : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true); // 1. checkbox\n\n      var branch0 = cloneASTElement(el); // process for on the main node\n\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      }); // 2. add radio else-if condition\n\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      }); // 3. other\n\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0;\n    }\n  }\n}\n\nfunction cloneASTElement(el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent);\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n};\nvar modules$1 = [klass$1, style$1, model$2];\n/*  */\n\nfunction text(el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', \"_s(\" + dir.value + \")\");\n  }\n}\n/*  */\n\n\nfunction html(el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', \"_s(\" + dir.value + \")\");\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n  /*  */\n\n};\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\nvar genStaticKeysCached = cached(genStaticKeys$1);\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\n\nfunction optimize(root, options) {\n  if (!root) {\n    return;\n  }\n\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no; // first pass: mark all non-static nodes.\n\n  markStatic$1(root); // second pass: mark static roots.\n\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1(keys) {\n  return makeMap('type,tag,attrsList,attrsMap,plain,parent,children,attrs' + (keys ? ',' + keys : ''));\n}\n\nfunction markStatic$1(node) {\n  node.static = isStatic(node);\n\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (!isPlatformReservedTag(node.tag) && node.tag !== 'slot' && node.attrsMap['inline-template'] == null) {\n      return;\n    }\n\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots(node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    } // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n\n\n    if (node.static && node.children.length && !(node.children.length === 1 && node.children[0].type === 3)) {\n      node.staticRoot = true;\n      return;\n    } else {\n      node.staticRoot = false;\n    }\n\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic(node) {\n  if (node.type === 2) {\n    // expression\n    return false;\n  }\n\n  if (node.type === 3) {\n    // text\n    return true;\n  }\n\n  return !!(node.pre || !node.hasBindings && // no dynamic bindings\n  !node.if && !node.for && // not v-if or v-for or v-else\n  !isBuiltInTag(node.tag) && // not a built-in\n  isPlatformReservedTag(node.tag) && // not a component\n  !isDirectChildOfTemplateFor(node) && Object.keys(node).every(isStaticKey));\n}\n\nfunction isDirectChildOfTemplateFor(node) {\n  while (node.parent) {\n    node = node.parent;\n\n    if (node.tag !== 'template') {\n      return false;\n    }\n\n    if (node.for) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/*  */\n\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/; // KeyboardEvent.keyCode aliases\n\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n}; // KeyboardEvent.key aliases\n\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n}; // #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\n\nvar genGuard = function (condition) {\n  return \"if(\" + condition + \")return null;\";\n};\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers(events, isNative, warn) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + genHandler(name, events[name]) + \",\";\n  }\n\n  return res.slice(0, -1) + '}';\n}\n\nfunction genHandler(name, handler) {\n  if (!handler) {\n    return 'function(){}';\n  }\n\n  if (Array.isArray(handler)) {\n    return \"[\" + handler.map(function (handler) {\n      return genHandler(name, handler);\n    }).join(',') + \"]\";\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value;\n    }\n    /* istanbul ignore if */\n\n\n    return \"function($event){\" + handler.value + \"}\"; // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key]; // left/right\n\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = handler.modifiers;\n        genModifierCode += genGuard(['ctrl', 'shift', 'alt', 'meta'].filter(function (keyModifier) {\n          return !modifiers[keyModifier];\n        }).map(function (keyModifier) {\n          return \"$event.\" + keyModifier + \"Key\";\n        }).join('||'));\n      } else {\n        keys.push(key);\n      }\n    }\n\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    } // Make sure modifiers like prevent and stop get executed after key filtering\n\n\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n\n    var handlerCode = isMethodPath ? \"return \" + handler.value + \"($event)\" : isFunctionExpression ? \"return (\" + handler.value + \")($event)\" : handler.value;\n    /* istanbul ignore if */\n\n    return \"function($event){\" + code + handlerCode + \"}\";\n  }\n}\n\nfunction genKeyFilter(keys) {\n  return \"if(!('button' in $event)&&\" + keys.map(genFilterCode).join('&&') + \")return null;\";\n}\n\nfunction genFilterCode(key) {\n  var keyVal = parseInt(key, 10);\n\n  if (keyVal) {\n    return \"$event.keyCode!==\" + keyVal;\n  }\n\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return \"_k($event.keyCode,\" + JSON.stringify(key) + \",\" + JSON.stringify(keyCode) + \",\" + \"$event.key,\" + \"\" + JSON.stringify(keyName) + \")\";\n}\n/*  */\n\n\nfunction on(el, dir) {\n  if (\"development\" !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n\n  el.wrapListeners = function (code) {\n    return \"_g(\" + code + \",\" + dir.value + \")\";\n  };\n}\n/*  */\n\n\nfunction bind$1(el, dir) {\n  el.wrapData = function (code) {\n    return \"_b(\" + code + \",'\" + el.tag + \"',\" + dir.value + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\";\n  };\n}\n/*  */\n\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n  /*  */\n\n};\n\nvar CodegenState = function CodegenState(options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n\n  this.maybeComponent = function (el) {\n    return !isReservedTag(el.tag);\n  };\n\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\nfunction generate(ast, options) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: \"with(this){return \" + code + \"}\",\n    staticRenderFns: state.staticRenderFns\n  };\n}\n\nfunction genElement(el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state);\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state);\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state);\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state);\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0';\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state);\n  } else {\n    // component or element\n    var code;\n\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + el.tag + \"'\" + (data ? \",\" + data : '') + (children ? \",\" + children : '') + \")\";\n    } // module transforms\n\n\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n\n    return code;\n  }\n} // hoist static sub-trees out\n\n\nfunction genStatic(el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push(\"with(this){return \" + genElement(el, state) + \"}\");\n  return \"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\";\n} // v-once\n\n\nfunction genOnce(el, state) {\n  el.onceProcessed = true;\n\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state);\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break;\n      }\n\n      parent = parent.parent;\n    }\n\n    if (!key) {\n      \"development\" !== 'production' && state.warn(\"v-once can only be used inside v-for that is keyed. \");\n      return genElement(el, state);\n    }\n\n    return \"_o(\" + genElement(el, state) + \",\" + state.onceId++ + \",\" + key + \")\";\n  } else {\n    return genStatic(el, state);\n  }\n}\n\nfunction genIf(el, state, altGen, altEmpty) {\n  el.ifProcessed = true; // avoid recursion\n\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty);\n}\n\nfunction genIfConditions(conditions, state, altGen, altEmpty) {\n  if (!conditions.length) {\n    return altEmpty || '_e()';\n  }\n\n  var condition = conditions.shift();\n\n  if (condition.exp) {\n    return \"(\" + condition.exp + \")?\" + genTernaryExp(condition.block) + \":\" + genIfConditions(conditions, state, altGen, altEmpty);\n  } else {\n    return \"\" + genTernaryExp(condition.block);\n  } // v-if with v-once should generate code like (a)?_m(0):_m(1)\n\n\n  function genTernaryExp(el) {\n    return altGen ? altGen(el, state) : el.once ? genOnce(el, state) : genElement(el, state);\n  }\n}\n\nfunction genFor(el, state, altGen, altHelper) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? \",\" + el.iterator1 : '';\n  var iterator2 = el.iterator2 ? \",\" + el.iterator2 : '';\n\n  if (\"development\" !== 'production' && state.maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key) {\n    state.warn(\"<\" + el.tag + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" + \"v-for should have explicit keys. \" + \"See https://vuejs.org/guide/list.html#key for more info.\", true\n    /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n\n  return (altHelper || '_l') + \"((\" + exp + \"),\" + \"function(\" + alias + iterator1 + iterator2 + \"){\" + \"return \" + (altGen || genElement)(el, state) + '})';\n}\n\nfunction genData$2(el, state) {\n  var data = '{'; // directives first.\n  // directives may mutate the el's other properties before they are generated.\n\n  var dirs = genDirectives(el, state);\n\n  if (dirs) {\n    data += dirs + ',';\n  } // key\n\n\n  if (el.key) {\n    data += \"key:\" + el.key + \",\";\n  } // ref\n\n\n  if (el.ref) {\n    data += \"ref:\" + el.ref + \",\";\n  }\n\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  } // pre\n\n\n  if (el.pre) {\n    data += \"pre:true,\";\n  } // record original tag name for components using \"is\" attribute\n\n\n  if (el.component) {\n    data += \"tag:\\\"\" + el.tag + \"\\\",\";\n  } // module data generation functions\n\n\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  } // attributes\n\n\n  if (el.attrs) {\n    data += \"attrs:{\" + genProps(el.attrs) + \"},\";\n  } // DOM props\n\n\n  if (el.props) {\n    data += \"domProps:{\" + genProps(el.props) + \"},\";\n  } // event handlers\n\n\n  if (el.events) {\n    data += genHandlers(el.events, false, state.warn) + \",\";\n  }\n\n  if (el.nativeEvents) {\n    data += genHandlers(el.nativeEvents, true, state.warn) + \",\";\n  } // slot target\n  // only for non-scoped slots\n\n\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + el.slotTarget + \",\";\n  } // scoped slots\n\n\n  if (el.scopedSlots) {\n    data += genScopedSlots(el.scopedSlots, state) + \",\";\n  } // component v-model\n\n\n  if (el.model) {\n    data += \"model:{value:\" + el.model.value + \",callback:\" + el.model.callback + \",expression:\" + el.model.expression + \"},\";\n  } // inline-template\n\n\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n\n  data = data.replace(/,$/, '') + '}'; // v-bind data wrap\n\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  } // v-on data wrap\n\n\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n\n  return data;\n}\n\nfunction genDirectives(el, state) {\n  var dirs = el.directives;\n\n  if (!dirs) {\n    return;\n  }\n\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + dir.name + \"\\\",rawName:\\\"\" + dir.rawName + \"\\\"\" + (dir.value ? \",value:(\" + dir.value + \"),expression:\" + JSON.stringify(dir.value) : '') + (dir.arg ? \",arg:\\\"\" + dir.arg + \"\\\"\" : '') + (dir.modifiers ? \",modifiers:\" + JSON.stringify(dir.modifiers) : '') + \"},\";\n    }\n  }\n\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']';\n  }\n}\n\nfunction genInlineTemplate(el, state) {\n  var ast = el.children[0];\n\n  if (\"development\" !== 'production' && (el.children.length !== 1 || ast.type !== 1)) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return \"inlineTemplate:{render:function(){\" + inlineRenderFns.render + \"},staticRenderFns:[\" + inlineRenderFns.staticRenderFns.map(function (code) {\n      return \"function(){\" + code + \"}\";\n    }).join(',') + \"]}\";\n  }\n}\n\nfunction genScopedSlots(slots, state) {\n  return \"scopedSlots:_u([\" + Object.keys(slots).map(function (key) {\n    return genScopedSlot(key, slots[key], state);\n  }).join(',') + \"])\";\n}\n\nfunction genScopedSlot(key, el, state) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state);\n  }\n\n  var fn = \"function(\" + String(el.slotScope) + \"){\" + \"return \" + (el.tag === 'template' ? el.if ? el.if + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\" : genChildren(el, state) || 'undefined' : genElement(el, state)) + \"}\";\n  return \"{key:\" + key + \",fn:\" + fn + \"}\";\n}\n\nfunction genForScopedSlot(key, el, state) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? \",\" + el.iterator1 : '';\n  var iterator2 = el.iterator2 ? \",\" + el.iterator2 : '';\n  el.forProcessed = true; // avoid recursion\n\n  return \"_l((\" + exp + \"),\" + \"function(\" + alias + iterator1 + iterator2 + \"){\" + \"return \" + genScopedSlot(key, el, state) + '})';\n}\n\nfunction genChildren(el, state, checkSkip, altGenElement, altGenNode) {\n  var children = el.children;\n\n  if (children.length) {\n    var el$1 = children[0]; // optimize single v-for\n\n    if (children.length === 1 && el$1.for && el$1.tag !== 'template' && el$1.tag !== 'slot') {\n      return (altGenElement || genElement)(el$1, state);\n    }\n\n    var normalizationType = checkSkip ? getNormalizationType(children, state.maybeComponent) : 0;\n    var gen = altGenNode || genNode;\n    return \"[\" + children.map(function (c) {\n      return gen(c, state);\n    }).join(',') + \"]\" + (normalizationType ? \",\" + normalizationType : '');\n  }\n} // determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\n\n\nfunction getNormalizationType(children, maybeComponent) {\n  var res = 0;\n\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n\n    if (el.type !== 1) {\n      continue;\n    }\n\n    if (needsNormalization(el) || el.ifConditions && el.ifConditions.some(function (c) {\n      return needsNormalization(c.block);\n    })) {\n      res = 2;\n      break;\n    }\n\n    if (maybeComponent(el) || el.ifConditions && el.ifConditions.some(function (c) {\n      return maybeComponent(c.block);\n    })) {\n      res = 1;\n    }\n  }\n\n  return res;\n}\n\nfunction needsNormalization(el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot';\n}\n\nfunction genNode(node, state) {\n  if (node.type === 1) {\n    return genElement(node, state);\n  }\n\n  if (node.type === 3 && node.isComment) {\n    return genComment(node);\n  } else {\n    return genText(node);\n  }\n}\n\nfunction genText(text) {\n  return \"_v(\" + (text.type === 2 ? text.expression // no need for () because already wrapped in _s()\n  : transformSpecialNewlines(JSON.stringify(text.text))) + \")\";\n}\n\nfunction genComment(comment) {\n  return \"_e(\" + JSON.stringify(comment.text) + \")\";\n}\n\nfunction genSlot(el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? \",\" + children : '');\n  var attrs = el.attrs && \"{\" + el.attrs.map(function (a) {\n    return camelize(a.name) + \":\" + a.value;\n  }).join(',') + \"}\";\n  var bind$$1 = el.attrsMap['v-bind'];\n\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n\n  return res + ')';\n} // componentName is el.component, take it as argument to shun flow's pessimistic refinement\n\n\nfunction genComponent(componentName, el, state) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return \"_c(\" + componentName + \",\" + genData$2(el, state) + (children ? \",\" + children : '') + \")\";\n}\n\nfunction genProps(props) {\n  var res = '';\n\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n\n    {\n      res += \"\\\"\" + prop.name + \"\\\":\" + transformSpecialNewlines(prop.value) + \",\";\n    }\n  }\n\n  return res.slice(0, -1);\n} // #3895, #4268\n\n\nfunction transformSpecialNewlines(text) {\n  return text.replace(/\\u2028/g, '\\\\u2028').replace(/\\u2029/g, '\\\\u2029');\n}\n/*  */\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\n\n\nvar prohibitedKeywordRE = new RegExp('\\\\b' + ('do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' + 'super,throw,while,yield,delete,export,import,return,switch,default,' + 'extends,finally,continue,debugger,function,arguments').split(',').join('\\\\b|\\\\b') + '\\\\b'); // these unary operators should not be used as property/method names\n\nvar unaryOperatorsRE = new RegExp('\\\\b' + 'delete,typeof,void'.split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)'); // strip strings in expressions\n\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g; // detect problematic expressions in a template\n\nfunction detectErrors(ast) {\n  var errors = [];\n\n  if (ast) {\n    checkNode(ast, errors);\n  }\n\n  return errors;\n}\n\nfunction checkNode(node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, \"v-for=\\\"\" + value + \"\\\"\", errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, name + \"=\\\"\" + value + \"\\\"\", errors);\n          } else {\n            checkExpression(value, name + \"=\\\"\" + value + \"\\\"\", errors);\n          }\n        }\n      }\n    }\n\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent(exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\"avoid using JavaScript unary operator as property name: \" + \"\\\"\" + keywordMatch[0] + \"\\\" in expression \" + text.trim());\n  }\n\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor(node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier(ident, type, text, errors) {\n  if (typeof ident === 'string') {\n    try {\n      new Function(\"var \" + ident + \"=_\");\n    } catch (e) {\n      errors.push(\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + text.trim());\n    }\n  }\n}\n\nfunction checkExpression(exp, text, errors) {\n  try {\n    new Function(\"return \" + exp);\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n\n    if (keywordMatch) {\n      errors.push(\"avoid using JavaScript keyword as property name: \" + \"\\\"\" + keywordMatch[0] + \"\\\"\\n  Raw expression: \" + text.trim());\n    } else {\n      errors.push(\"invalid expression: \" + e.message + \" in\\n\\n\" + \"    \" + exp + \"\\n\\n\" + \"  Raw expression: \" + text.trim() + \"\\n\");\n    }\n  }\n}\n/*  */\n\n\nfunction createFunction(code, errors) {\n  try {\n    return new Function(code);\n  } catch (err) {\n    errors.push({\n      err: err,\n      code: code\n    });\n    return noop;\n  }\n}\n\nfunction createCompileToFunctionFn(compile) {\n  var cache = Object.create(null);\n  return function compileToFunctions(template, options, vm) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n    /* istanbul ignore if */\n\n    if (true) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1('It seems you are using the standalone build of Vue.js in an ' + 'environment with Content Security Policy that prohibits unsafe-eval. ' + 'The template compiler cannot work in this environment. Consider ' + 'relaxing the policy to allow unsafe-eval or pre-compiling your ' + 'templates into render functions.');\n        }\n      }\n    } // check cache\n\n\n    var key = options.delimiters ? String(options.delimiters) + template : template;\n\n    if (cache[key]) {\n      return cache[key];\n    } // compile\n\n\n    var compiled = compile(template, options); // check compilation errors/tips\n\n    if (true) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\"Error compiling template:\\n\\n\" + template + \"\\n\\n\" + compiled.errors.map(function (e) {\n          return \"- \" + e;\n        }).join('\\n') + '\\n', vm);\n      }\n\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) {\n          return tip(msg, vm);\n        });\n      }\n    } // turn code into functions\n\n\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors);\n    }); // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n\n    /* istanbul ignore if */\n\n    if (true) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\"Failed to generate render function:\\n\\n\" + fnGenErrors.map(function (ref) {\n          var err = ref.err;\n          var code = ref.code;\n          return err.toString() + \" in\\n\\n\" + code + \"\\n\";\n        }).join('\\n'), vm);\n      }\n    }\n\n    return cache[key] = res;\n  };\n}\n/*  */\n\n\nfunction createCompilerCreator(baseCompile) {\n  return function createCompiler(baseOptions) {\n    function compile(template, options) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n        } // merge custom directives\n\n\n        if (options.directives) {\n          finalOptions.directives = extend(Object.create(baseOptions.directives || null), options.directives);\n        } // copy other options\n\n\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n\n      if (true) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled;\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    };\n  };\n}\n/*  */\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\n\n\nvar createCompiler = createCompilerCreator(function baseCompile(template, options) {\n  var ast = parse(template.trim(), options);\n\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  };\n});\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n/*  */\n// check whether current browser encodes a char inside attribute values\n\nvar div;\n\nfunction getShouldDecode(href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0;\n} // #3663: IE encodes newlines inside attribute values while other browsers don't\n\n\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false; // #6828: chrome encodes content in a[href]\n\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML;\n});\nvar mount = Vue.prototype.$mount;\n\nVue.prototype.$mount = function (el, hydrating) {\n  el = el && query(el);\n  /* istanbul ignore if */\n\n  if (el === document.body || el === document.documentElement) {\n    \"development\" !== 'production' && warn(\"Do not mount Vue to <html> or <body> - mount to normal elements instead.\");\n    return this;\n  }\n\n  var options = this.$options; // resolve template/el and convert to render function\n\n  if (!options.render) {\n    var template = options.template;\n\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n\n          if (\"development\" !== 'production' && !template) {\n            warn(\"Template element not found or is empty: \" + options.template, this);\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (true) {\n          warn('invalid template option:' + template, this);\n        }\n\n        return this;\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n\n    if (template) {\n      /* istanbul ignore if */\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n      /* istanbul ignore if */\n\n      if (\"development\" !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(\"vue \" + this._name + \" compile\", 'compile', 'compile end');\n      }\n    }\n  }\n\n  return mount.call(this, el, hydrating);\n};\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\n\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nVue.compile = compileToFunctions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\"), __webpack_require__(/*! ./../../timers-browserify/main.js */ \"./node_modules/timers-browserify/main.js\").setImmediate))\n\n//# sourceURL=webpack:///./node_modules/vue/dist/vue.esm.js?");

/***/ }),

/***/ "./node_modules/vuex/dist/vuex.esm.js":
/*!********************************************!*\
  !*** ./node_modules/vuex/dist/vuex.esm.js ***!
  \********************************************/
/*! exports provided: Store, install, mapState, mapMutations, mapGetters, mapActions, createNamespacedHelpers, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Store\", function() { return Store; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"install\", function() { return install; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapState\", function() { return mapState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapMutations\", function() { return mapMutations; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapGetters\", function() { return mapGetters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapActions\", function() { return mapActions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createNamespacedHelpers\", function() { return createNamespacedHelpers; });\n/**\n * vuex v3.0.1\n * (c) 2017 Evan You\n * @license MIT\n */\nvar applyMixin = function (Vue) {\n  var version = Number(Vue.version.split('.')[0]);\n\n  if (version >= 2) {\n    Vue.mixin({\n      beforeCreate: vuexInit\n    });\n  } else {\n    // override init and inject vuex init procedure\n    // for 1.x backwards compatibility.\n    var _init = Vue.prototype._init;\n\n    Vue.prototype._init = function (options) {\n      if (options === void 0) options = {};\n      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\n      _init.call(this, options);\n    };\n  }\n  /**\n   * Vuex init hook, injected into each instances init hooks list.\n   */\n\n\n  function vuexInit() {\n    var options = this.$options; // store injection\n\n    if (options.store) {\n      this.$store = typeof options.store === 'function' ? options.store() : options.store;\n    } else if (options.parent && options.parent.$store) {\n      this.$store = options.parent.$store;\n    }\n  }\n};\n\nvar devtoolHook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\nfunction devtoolPlugin(store) {\n  if (!devtoolHook) {\n    return;\n  }\n\n  store._devtoolHook = devtoolHook;\n  devtoolHook.emit('vuex:init', store);\n  devtoolHook.on('vuex:travel-to-state', function (targetState) {\n    store.replaceState(targetState);\n  });\n  store.subscribe(function (mutation, state) {\n    devtoolHook.emit('vuex:mutation', mutation, state);\n  });\n}\n/**\n * Get the first item that pass the test\n * by second argument function\n *\n * @param {Array} list\n * @param {Function} f\n * @return {*}\n */\n\n/**\n * Deep copy the given object considering circular structure.\n * This function caches all nested objects and its copies.\n * If it detects circular structure, use cached copy to avoid infinite loop.\n *\n * @param {*} obj\n * @param {Array<Object>} cache\n * @return {*}\n */\n\n/**\n * forEach for object\n */\n\n\nfunction forEachValue(obj, fn) {\n  Object.keys(obj).forEach(function (key) {\n    return fn(obj[key], key);\n  });\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction isPromise(val) {\n  return val && typeof val.then === 'function';\n}\n\nfunction assert(condition, msg) {\n  if (!condition) {\n    throw new Error(\"[vuex] \" + msg);\n  }\n}\n\nvar Module = function Module(rawModule, runtime) {\n  this.runtime = runtime;\n  this._children = Object.create(null);\n  this._rawModule = rawModule;\n  var rawState = rawModule.state;\n  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};\n};\n\nvar prototypeAccessors$1 = {\n  namespaced: {\n    configurable: true\n  }\n};\n\nprototypeAccessors$1.namespaced.get = function () {\n  return !!this._rawModule.namespaced;\n};\n\nModule.prototype.addChild = function addChild(key, module) {\n  this._children[key] = module;\n};\n\nModule.prototype.removeChild = function removeChild(key) {\n  delete this._children[key];\n};\n\nModule.prototype.getChild = function getChild(key) {\n  return this._children[key];\n};\n\nModule.prototype.update = function update(rawModule) {\n  this._rawModule.namespaced = rawModule.namespaced;\n\n  if (rawModule.actions) {\n    this._rawModule.actions = rawModule.actions;\n  }\n\n  if (rawModule.mutations) {\n    this._rawModule.mutations = rawModule.mutations;\n  }\n\n  if (rawModule.getters) {\n    this._rawModule.getters = rawModule.getters;\n  }\n};\n\nModule.prototype.forEachChild = function forEachChild(fn) {\n  forEachValue(this._children, fn);\n};\n\nModule.prototype.forEachGetter = function forEachGetter(fn) {\n  if (this._rawModule.getters) {\n    forEachValue(this._rawModule.getters, fn);\n  }\n};\n\nModule.prototype.forEachAction = function forEachAction(fn) {\n  if (this._rawModule.actions) {\n    forEachValue(this._rawModule.actions, fn);\n  }\n};\n\nModule.prototype.forEachMutation = function forEachMutation(fn) {\n  if (this._rawModule.mutations) {\n    forEachValue(this._rawModule.mutations, fn);\n  }\n};\n\nObject.defineProperties(Module.prototype, prototypeAccessors$1);\n\nvar ModuleCollection = function ModuleCollection(rawRootModule) {\n  // register root module (Vuex.Store options)\n  this.register([], rawRootModule, false);\n};\n\nModuleCollection.prototype.get = function get(path) {\n  return path.reduce(function (module, key) {\n    return module.getChild(key);\n  }, this.root);\n};\n\nModuleCollection.prototype.getNamespace = function getNamespace(path) {\n  var module = this.root;\n  return path.reduce(function (namespace, key) {\n    module = module.getChild(key);\n    return namespace + (module.namespaced ? key + '/' : '');\n  }, '');\n};\n\nModuleCollection.prototype.update = function update$1(rawRootModule) {\n  update([], this.root, rawRootModule);\n};\n\nModuleCollection.prototype.register = function register(path, rawModule, runtime) {\n  var this$1 = this;\n  if (runtime === void 0) runtime = true;\n\n  if (true) {\n    assertRawModule(path, rawModule);\n  }\n\n  var newModule = new Module(rawModule, runtime);\n\n  if (path.length === 0) {\n    this.root = newModule;\n  } else {\n    var parent = this.get(path.slice(0, -1));\n    parent.addChild(path[path.length - 1], newModule);\n  } // register nested modules\n\n\n  if (rawModule.modules) {\n    forEachValue(rawModule.modules, function (rawChildModule, key) {\n      this$1.register(path.concat(key), rawChildModule, runtime);\n    });\n  }\n};\n\nModuleCollection.prototype.unregister = function unregister(path) {\n  var parent = this.get(path.slice(0, -1));\n  var key = path[path.length - 1];\n\n  if (!parent.getChild(key).runtime) {\n    return;\n  }\n\n  parent.removeChild(key);\n};\n\nfunction update(path, targetModule, newModule) {\n  if (true) {\n    assertRawModule(path, newModule);\n  } // update target module\n\n\n  targetModule.update(newModule); // update nested modules\n\n  if (newModule.modules) {\n    for (var key in newModule.modules) {\n      if (!targetModule.getChild(key)) {\n        if (true) {\n          console.warn(\"[vuex] trying to add a new module '\" + key + \"' on hot reloading, \" + 'manual reload is needed');\n        }\n\n        return;\n      }\n\n      update(path.concat(key), targetModule.getChild(key), newModule.modules[key]);\n    }\n  }\n}\n\nvar functionAssert = {\n  assert: function (value) {\n    return typeof value === 'function';\n  },\n  expected: 'function'\n};\nvar objectAssert = {\n  assert: function (value) {\n    return typeof value === 'function' || typeof value === 'object' && typeof value.handler === 'function';\n  },\n  expected: 'function or object with \"handler\" function'\n};\nvar assertTypes = {\n  getters: functionAssert,\n  mutations: functionAssert,\n  actions: objectAssert\n};\n\nfunction assertRawModule(path, rawModule) {\n  Object.keys(assertTypes).forEach(function (key) {\n    if (!rawModule[key]) {\n      return;\n    }\n\n    var assertOptions = assertTypes[key];\n    forEachValue(rawModule[key], function (value, type) {\n      assert(assertOptions.assert(value), makeAssertionMessage(path, key, type, value, assertOptions.expected));\n    });\n  });\n}\n\nfunction makeAssertionMessage(path, key, type, value, expected) {\n  var buf = key + \" should be \" + expected + \" but \\\"\" + key + \".\" + type + \"\\\"\";\n\n  if (path.length > 0) {\n    buf += \" in module \\\"\" + path.join('.') + \"\\\"\";\n  }\n\n  buf += \" is \" + JSON.stringify(value) + \".\";\n  return buf;\n}\n\nvar Vue; // bind on install\n\nvar Store = function Store(options) {\n  var this$1 = this;\n  if (options === void 0) options = {}; // Auto install if it is not done yet and `window` has `Vue`.\n  // To allow users to avoid auto-installation in some cases,\n  // this code should be placed here. See #731\n\n  if (!Vue && typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  if (true) {\n    assert(Vue, \"must call Vue.use(Vuex) before creating a store instance.\");\n    assert(typeof Promise !== 'undefined', \"vuex requires a Promise polyfill in this browser.\");\n    assert(this instanceof Store, \"Store must be called with the new operator.\");\n  }\n\n  var plugins = options.plugins;\n  if (plugins === void 0) plugins = [];\n  var strict = options.strict;\n  if (strict === void 0) strict = false;\n  var state = options.state;\n  if (state === void 0) state = {};\n\n  if (typeof state === 'function') {\n    state = state() || {};\n  } // store internal state\n\n\n  this._committing = false;\n  this._actions = Object.create(null);\n  this._actionSubscribers = [];\n  this._mutations = Object.create(null);\n  this._wrappedGetters = Object.create(null);\n  this._modules = new ModuleCollection(options);\n  this._modulesNamespaceMap = Object.create(null);\n  this._subscribers = [];\n  this._watcherVM = new Vue(); // bind commit and dispatch to self\n\n  var store = this;\n  var ref = this;\n  var dispatch = ref.dispatch;\n  var commit = ref.commit;\n\n  this.dispatch = function boundDispatch(type, payload) {\n    return dispatch.call(store, type, payload);\n  };\n\n  this.commit = function boundCommit(type, payload, options) {\n    return commit.call(store, type, payload, options);\n  }; // strict mode\n\n\n  this.strict = strict; // init root module.\n  // this also recursively registers all sub-modules\n  // and collects all module getters inside this._wrappedGetters\n\n  installModule(this, state, [], this._modules.root); // initialize the store vm, which is responsible for the reactivity\n  // (also registers _wrappedGetters as computed properties)\n\n  resetStoreVM(this, state); // apply plugins\n\n  plugins.forEach(function (plugin) {\n    return plugin(this$1);\n  });\n\n  if (Vue.config.devtools) {\n    devtoolPlugin(this);\n  }\n};\n\nvar prototypeAccessors = {\n  state: {\n    configurable: true\n  }\n};\n\nprototypeAccessors.state.get = function () {\n  return this._vm._data.$$state;\n};\n\nprototypeAccessors.state.set = function (v) {\n  if (true) {\n    assert(false, \"Use store.replaceState() to explicit replace store state.\");\n  }\n};\n\nStore.prototype.commit = function commit(_type, _payload, _options) {\n  var this$1 = this; // check object-style commit\n\n  var ref = unifyObjectStyle(_type, _payload, _options);\n  var type = ref.type;\n  var payload = ref.payload;\n  var options = ref.options;\n  var mutation = {\n    type: type,\n    payload: payload\n  };\n  var entry = this._mutations[type];\n\n  if (!entry) {\n    if (true) {\n      console.error(\"[vuex] unknown mutation type: \" + type);\n    }\n\n    return;\n  }\n\n  this._withCommit(function () {\n    entry.forEach(function commitIterator(handler) {\n      handler(payload);\n    });\n  });\n\n  this._subscribers.forEach(function (sub) {\n    return sub(mutation, this$1.state);\n  });\n\n  if (\"development\" !== 'production' && options && options.silent) {\n    console.warn(\"[vuex] mutation type: \" + type + \". Silent option has been removed. \" + 'Use the filter functionality in the vue-devtools');\n  }\n};\n\nStore.prototype.dispatch = function dispatch(_type, _payload) {\n  var this$1 = this; // check object-style dispatch\n\n  var ref = unifyObjectStyle(_type, _payload);\n  var type = ref.type;\n  var payload = ref.payload;\n  var action = {\n    type: type,\n    payload: payload\n  };\n  var entry = this._actions[type];\n\n  if (!entry) {\n    if (true) {\n      console.error(\"[vuex] unknown action type: \" + type);\n    }\n\n    return;\n  }\n\n  this._actionSubscribers.forEach(function (sub) {\n    return sub(action, this$1.state);\n  });\n\n  return entry.length > 1 ? Promise.all(entry.map(function (handler) {\n    return handler(payload);\n  })) : entry[0](payload);\n};\n\nStore.prototype.subscribe = function subscribe(fn) {\n  return genericSubscribe(fn, this._subscribers);\n};\n\nStore.prototype.subscribeAction = function subscribeAction(fn) {\n  return genericSubscribe(fn, this._actionSubscribers);\n};\n\nStore.prototype.watch = function watch(getter, cb, options) {\n  var this$1 = this;\n\n  if (true) {\n    assert(typeof getter === 'function', \"store.watch only accepts a function.\");\n  }\n\n  return this._watcherVM.$watch(function () {\n    return getter(this$1.state, this$1.getters);\n  }, cb, options);\n};\n\nStore.prototype.replaceState = function replaceState(state) {\n  var this$1 = this;\n\n  this._withCommit(function () {\n    this$1._vm._data.$$state = state;\n  });\n};\n\nStore.prototype.registerModule = function registerModule(path, rawModule, options) {\n  if (options === void 0) options = {};\n\n  if (typeof path === 'string') {\n    path = [path];\n  }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n    assert(path.length > 0, 'cannot register the root module by using registerModule.');\n  }\n\n  this._modules.register(path, rawModule);\n\n  installModule(this, this.state, path, this._modules.get(path), options.preserveState); // reset store to update getters...\n\n  resetStoreVM(this, this.state);\n};\n\nStore.prototype.unregisterModule = function unregisterModule(path) {\n  var this$1 = this;\n\n  if (typeof path === 'string') {\n    path = [path];\n  }\n\n  if (true) {\n    assert(Array.isArray(path), \"module path must be a string or an Array.\");\n  }\n\n  this._modules.unregister(path);\n\n  this._withCommit(function () {\n    var parentState = getNestedState(this$1.state, path.slice(0, -1));\n    Vue.delete(parentState, path[path.length - 1]);\n  });\n\n  resetStore(this);\n};\n\nStore.prototype.hotUpdate = function hotUpdate(newOptions) {\n  this._modules.update(newOptions);\n\n  resetStore(this, true);\n};\n\nStore.prototype._withCommit = function _withCommit(fn) {\n  var committing = this._committing;\n  this._committing = true;\n  fn();\n  this._committing = committing;\n};\n\nObject.defineProperties(Store.prototype, prototypeAccessors);\n\nfunction genericSubscribe(fn, subs) {\n  if (subs.indexOf(fn) < 0) {\n    subs.push(fn);\n  }\n\n  return function () {\n    var i = subs.indexOf(fn);\n\n    if (i > -1) {\n      subs.splice(i, 1);\n    }\n  };\n}\n\nfunction resetStore(store, hot) {\n  store._actions = Object.create(null);\n  store._mutations = Object.create(null);\n  store._wrappedGetters = Object.create(null);\n  store._modulesNamespaceMap = Object.create(null);\n  var state = store.state; // init all modules\n\n  installModule(store, state, [], store._modules.root, true); // reset vm\n\n  resetStoreVM(store, state, hot);\n}\n\nfunction resetStoreVM(store, state, hot) {\n  var oldVm = store._vm; // bind store public getters\n\n  store.getters = {};\n  var wrappedGetters = store._wrappedGetters;\n  var computed = {};\n  forEachValue(wrappedGetters, function (fn, key) {\n    // use computed to leverage its lazy-caching mechanism\n    computed[key] = function () {\n      return fn(store);\n    };\n\n    Object.defineProperty(store.getters, key, {\n      get: function () {\n        return store._vm[key];\n      },\n      enumerable: true // for local getters\n\n    });\n  }); // use a Vue instance to store the state tree\n  // suppress warnings just in case the user has added\n  // some funky global mixins\n\n  var silent = Vue.config.silent;\n  Vue.config.silent = true;\n  store._vm = new Vue({\n    data: {\n      $$state: state\n    },\n    computed: computed\n  });\n  Vue.config.silent = silent; // enable strict mode for new vm\n\n  if (store.strict) {\n    enableStrictMode(store);\n  }\n\n  if (oldVm) {\n    if (hot) {\n      // dispatch changes in all subscribed watchers\n      // to force getter re-evaluation for hot reloading.\n      store._withCommit(function () {\n        oldVm._data.$$state = null;\n      });\n    }\n\n    Vue.nextTick(function () {\n      return oldVm.$destroy();\n    });\n  }\n}\n\nfunction installModule(store, rootState, path, module, hot) {\n  var isRoot = !path.length;\n\n  var namespace = store._modules.getNamespace(path); // register in namespace map\n\n\n  if (module.namespaced) {\n    store._modulesNamespaceMap[namespace] = module;\n  } // set state\n\n\n  if (!isRoot && !hot) {\n    var parentState = getNestedState(rootState, path.slice(0, -1));\n    var moduleName = path[path.length - 1];\n\n    store._withCommit(function () {\n      Vue.set(parentState, moduleName, module.state);\n    });\n  }\n\n  var local = module.context = makeLocalContext(store, namespace, path);\n  module.forEachMutation(function (mutation, key) {\n    var namespacedType = namespace + key;\n    registerMutation(store, namespacedType, mutation, local);\n  });\n  module.forEachAction(function (action, key) {\n    var type = action.root ? key : namespace + key;\n    var handler = action.handler || action;\n    registerAction(store, type, handler, local);\n  });\n  module.forEachGetter(function (getter, key) {\n    var namespacedType = namespace + key;\n    registerGetter(store, namespacedType, getter, local);\n  });\n  module.forEachChild(function (child, key) {\n    installModule(store, rootState, path.concat(key), child, hot);\n  });\n}\n/**\n * make localized dispatch, commit, getters and state\n * if there is no namespace, just use root ones\n */\n\n\nfunction makeLocalContext(store, namespace, path) {\n  var noNamespace = namespace === '';\n  var local = {\n    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n\n        if (\"development\" !== 'production' && !store._actions[type]) {\n          console.error(\"[vuex] unknown local action type: \" + args.type + \", global type: \" + type);\n          return;\n        }\n      }\n\n      return store.dispatch(type, payload);\n    },\n    commit: noNamespace ? store.commit : function (_type, _payload, _options) {\n      var args = unifyObjectStyle(_type, _payload, _options);\n      var payload = args.payload;\n      var options = args.options;\n      var type = args.type;\n\n      if (!options || !options.root) {\n        type = namespace + type;\n\n        if (\"development\" !== 'production' && !store._mutations[type]) {\n          console.error(\"[vuex] unknown local mutation type: \" + args.type + \", global type: \" + type);\n          return;\n        }\n      }\n\n      store.commit(type, payload, options);\n    }\n  }; // getters and state object must be gotten lazily\n  // because they will be changed by vm update\n\n  Object.defineProperties(local, {\n    getters: {\n      get: noNamespace ? function () {\n        return store.getters;\n      } : function () {\n        return makeLocalGetters(store, namespace);\n      }\n    },\n    state: {\n      get: function () {\n        return getNestedState(store.state, path);\n      }\n    }\n  });\n  return local;\n}\n\nfunction makeLocalGetters(store, namespace) {\n  var gettersProxy = {};\n  var splitPos = namespace.length;\n  Object.keys(store.getters).forEach(function (type) {\n    // skip if the target getter is not match this namespace\n    if (type.slice(0, splitPos) !== namespace) {\n      return;\n    } // extract local getter type\n\n\n    var localType = type.slice(splitPos); // Add a port to the getters proxy.\n    // Define as getter property because\n    // we do not want to evaluate the getters in this time.\n\n    Object.defineProperty(gettersProxy, localType, {\n      get: function () {\n        return store.getters[type];\n      },\n      enumerable: true\n    });\n  });\n  return gettersProxy;\n}\n\nfunction registerMutation(store, type, handler, local) {\n  var entry = store._mutations[type] || (store._mutations[type] = []);\n  entry.push(function wrappedMutationHandler(payload) {\n    handler.call(store, local.state, payload);\n  });\n}\n\nfunction registerAction(store, type, handler, local) {\n  var entry = store._actions[type] || (store._actions[type] = []);\n  entry.push(function wrappedActionHandler(payload, cb) {\n    var res = handler.call(store, {\n      dispatch: local.dispatch,\n      commit: local.commit,\n      getters: local.getters,\n      state: local.state,\n      rootGetters: store.getters,\n      rootState: store.state\n    }, payload, cb);\n\n    if (!isPromise(res)) {\n      res = Promise.resolve(res);\n    }\n\n    if (store._devtoolHook) {\n      return res.catch(function (err) {\n        store._devtoolHook.emit('vuex:error', err);\n\n        throw err;\n      });\n    } else {\n      return res;\n    }\n  });\n}\n\nfunction registerGetter(store, type, rawGetter, local) {\n  if (store._wrappedGetters[type]) {\n    if (true) {\n      console.error(\"[vuex] duplicate getter key: \" + type);\n    }\n\n    return;\n  }\n\n  store._wrappedGetters[type] = function wrappedGetter(store) {\n    return rawGetter(local.state, // local state\n    local.getters, // local getters\n    store.state, // root state\n    store.getters // root getters\n    );\n  };\n}\n\nfunction enableStrictMode(store) {\n  store._vm.$watch(function () {\n    return this._data.$$state;\n  }, function () {\n    if (true) {\n      assert(store._committing, \"Do not mutate vuex store state outside mutation handlers.\");\n    }\n  }, {\n    deep: true,\n    sync: true\n  });\n}\n\nfunction getNestedState(state, path) {\n  return path.length ? path.reduce(function (state, key) {\n    return state[key];\n  }, state) : state;\n}\n\nfunction unifyObjectStyle(type, payload, options) {\n  if (isObject(type) && type.type) {\n    options = payload;\n    payload = type;\n    type = type.type;\n  }\n\n  if (true) {\n    assert(typeof type === 'string', \"Expects string as the type, but found \" + typeof type + \".\");\n  }\n\n  return {\n    type: type,\n    payload: payload,\n    options: options\n  };\n}\n\nfunction install(_Vue) {\n  if (Vue && _Vue === Vue) {\n    if (true) {\n      console.error('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n    }\n\n    return;\n  }\n\n  Vue = _Vue;\n  applyMixin(Vue);\n}\n\nvar mapState = normalizeNamespace(function (namespace, states) {\n  var res = {};\n  normalizeMap(states).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedState() {\n      var state = this.$store.state;\n      var getters = this.$store.getters;\n\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapState', namespace);\n\n        if (!module) {\n          return;\n        }\n\n        state = module.context.state;\n        getters = module.context.getters;\n      }\n\n      return typeof val === 'function' ? val.call(this, state, getters) : state[val];\n    }; // mark vuex getter for devtools\n\n\n    res[key].vuex = true;\n  });\n  return res;\n});\nvar mapMutations = normalizeNamespace(function (namespace, mutations) {\n  var res = {};\n  normalizeMap(mutations).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedMutation() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      var commit = this.$store.commit;\n\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);\n\n        if (!module) {\n          return;\n        }\n\n        commit = module.context.commit;\n      }\n\n      return typeof val === 'function' ? val.apply(this, [commit].concat(args)) : commit.apply(this.$store, [val].concat(args));\n    };\n  });\n  return res;\n});\nvar mapGetters = normalizeNamespace(function (namespace, getters) {\n  var res = {};\n  normalizeMap(getters).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n    val = namespace + val;\n\n    res[key] = function mappedGetter() {\n      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {\n        return;\n      }\n\n      if (\"development\" !== 'production' && !(val in this.$store.getters)) {\n        console.error(\"[vuex] unknown getter: \" + val);\n        return;\n      }\n\n      return this.$store.getters[val];\n    }; // mark vuex getter for devtools\n\n\n    res[key].vuex = true;\n  });\n  return res;\n});\nvar mapActions = normalizeNamespace(function (namespace, actions) {\n  var res = {};\n  normalizeMap(actions).forEach(function (ref) {\n    var key = ref.key;\n    var val = ref.val;\n\n    res[key] = function mappedAction() {\n      var args = [],\n          len = arguments.length;\n\n      while (len--) args[len] = arguments[len];\n\n      var dispatch = this.$store.dispatch;\n\n      if (namespace) {\n        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);\n\n        if (!module) {\n          return;\n        }\n\n        dispatch = module.context.dispatch;\n      }\n\n      return typeof val === 'function' ? val.apply(this, [dispatch].concat(args)) : dispatch.apply(this.$store, [val].concat(args));\n    };\n  });\n  return res;\n});\n\nvar createNamespacedHelpers = function (namespace) {\n  return {\n    mapState: mapState.bind(null, namespace),\n    mapGetters: mapGetters.bind(null, namespace),\n    mapMutations: mapMutations.bind(null, namespace),\n    mapActions: mapActions.bind(null, namespace)\n  };\n};\n\nfunction normalizeMap(map) {\n  return Array.isArray(map) ? map.map(function (key) {\n    return {\n      key: key,\n      val: key\n    };\n  }) : Object.keys(map).map(function (key) {\n    return {\n      key: key,\n      val: map[key]\n    };\n  });\n}\n\nfunction normalizeNamespace(fn) {\n  return function (namespace, map) {\n    if (typeof namespace !== 'string') {\n      map = namespace;\n      namespace = '';\n    } else if (namespace.charAt(namespace.length - 1) !== '/') {\n      namespace += '/';\n    }\n\n    return fn(namespace, map);\n  };\n}\n\nfunction getModuleByNamespace(store, helper, namespace) {\n  var module = store._modulesNamespaceMap[namespace];\n\n  if (\"development\" !== 'production' && !module) {\n    console.error(\"[vuex] module namespace not found in \" + helper + \"(): \" + namespace);\n  }\n\n  return module;\n}\n\nvar index_esm = {\n  Store: Store,\n  install: install,\n  version: '3.0.1',\n  mapState: mapState,\n  mapMutations: mapMutations,\n  mapGetters: mapGetters,\n  mapActions: mapActions,\n  createNamespacedHelpers: createNamespacedHelpers\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index_esm);\n\n//# sourceURL=webpack:///./node_modules/vuex/dist/vuex.esm.js?");

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

/***/ }),

/***/ "./vendor/css/open-sans.css":
/*!**********************************!*\
  !*** ./vendor/css/open-sans.css ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin\n\n//# sourceURL=webpack:///./vendor/css/open-sans.css?");

/***/ }),

/***/ "./vendor/js/tablesorter.js":
/*!**********************************!*\
  !*** ./vendor/js/tablesorter.js ***!
  \**********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tablesorter_dist_js_jquery_tablesorter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tablesorter/dist/js/jquery.tablesorter */ \"./node_modules/tablesorter/dist/js/jquery.tablesorter.js\");\n/* harmony import */ var tablesorter_dist_js_jquery_tablesorter__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_jquery_tablesorter__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var tablesorter_dist_js_widgets_widget_storage_min__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tablesorter/dist/js/widgets/widget-storage.min */ \"./node_modules/tablesorter/dist/js/widgets/widget-storage.min.js\");\n/* harmony import */ var tablesorter_dist_js_widgets_widget_storage_min__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_widgets_widget_storage_min__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var tablesorter_dist_js_widgets_widget_columnSelector_min__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tablesorter/dist/js/widgets/widget-columnSelector.min */ \"./node_modules/tablesorter/dist/js/widgets/widget-columnSelector.min.js\");\n/* harmony import */ var tablesorter_dist_js_widgets_widget_columnSelector_min__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_widgets_widget_columnSelector_min__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var tablesorter_dist_js_widgets_widget_stickyHeaders_min__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tablesorter/dist/js/widgets/widget-stickyHeaders.min */ \"./node_modules/tablesorter/dist/js/widgets/widget-stickyHeaders.min.js\");\n/* harmony import */ var tablesorter_dist_js_widgets_widget_stickyHeaders_min__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_widgets_widget_stickyHeaders_min__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var tablesorter_dist_js_widgets_widget_saveSort_min__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tablesorter/dist/js/widgets/widget-saveSort.min */ \"./node_modules/tablesorter/dist/js/widgets/widget-saveSort.min.js\");\n/* harmony import */ var tablesorter_dist_js_widgets_widget_saveSort_min__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_widgets_widget_saveSort_min__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var tablesorter_dist_js_widgets_widget_filter_min__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tablesorter/dist/js/widgets/widget-filter.min */ \"./node_modules/tablesorter/dist/js/widgets/widget-filter.min.js\");\n/* harmony import */ var tablesorter_dist_js_widgets_widget_filter_min__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_js_widgets_widget_filter_min__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var tablesorter_dist_css_theme_blue_min_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tablesorter/dist/css/theme.blue.min.css */ \"./node_modules/tablesorter/dist/css/theme.blue.min.css\");\n/* harmony import */ var tablesorter_dist_css_theme_blue_min_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(tablesorter_dist_css_theme_blue_min_css__WEBPACK_IMPORTED_MODULE_6__);\n/* eslint-disable import/no-unassigned-import */\n// Include `tablesorter` with no widgets, except `zebra` which is included by default\n // The `storage` widget is required for saving filters and selected columns\n\n\n\n\n\n\n\n/* eslint-enable import/no-unassigned-import */\n\n//# sourceURL=webpack:///./vendor/js/tablesorter.js?");

/***/ })

/******/ });