{"version":3,"names":[],"mappings":"","sources":["js/vue-submit-form.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\nwindow.vueSubmitForm = async function (formId) {\n    const element = document.getElementById(formId);\n    const formData = new FormData(element);\n    const method = element.getAttribute('method');\n    const base = document.getElementsByTagName('base')[0].getAttribute('href');\n    const path = element.getAttribute('action');\n    const redirect = element.getAttribute('redirect');\n\n    // @TODO: Add this back when we're JSON only\n    //        This converts formData to JSON\n    // const body = Array.from(formData.entries()).reduce((memo, pair) => ({\n    // ...memo,\n    // [pair[0]]: pair[1]\n    // }), {});\n    this.$http[method](path, { body: formData, redirect: 'follow' }).then(resp => {\n        try {\n            const json = JSON.parse(resp.body);\n            const { redirect } = json;\n            if (redirect) {\n                window.location.href = base + redirect;\n                return;\n            }\n        } catch (e) {}\n        // Ignore\n\n\n        // Fallback\n        if (redirect) {\n            window.location.href = base + redirect;\n        }\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"vue-submit-form.js"}