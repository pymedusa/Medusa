{"version":3,"names":[],"mappings":"","sources":["js/config/notifications.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nMEDUSA.config.notifications = function () {\n    // eslint-disable-line max-lines\n    $('#testGrowl').on('click', function () {\n        var growl = {};\n        growl.host = $.trim($('#growl_host').val());\n        growl.password = $.trim($('#growl_password').val());\n        if (!growl.host) {\n            $('#testGrowl-result').html('Please fill out the necessary fields above.');\n            $('#growl_host').addClass('warning');\n            return;\n        }\n        $('#growl_host').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testGrowl-result').html(MEDUSA.config.loading);\n        $.get('home/testGrowl', {\n            host: growl.host,\n            password: growl.password\n        }).done(function (data) {\n            $('#testGrowl-result').html(data);\n            $('#testGrowl').prop('disabled', false);\n        });\n    });\n\n    $('#testProwl').on('click', function () {\n        var prowl = {};\n        prowl.api = $.trim($('#prowl_api').val());\n        prowl.priority = $('#prowl_priority').val();\n        if (!prowl.api) {\n            $('#testProwl-result').html('Please fill out the necessary fields above.');\n            $('#prowl_api').addClass('warning');\n            return;\n        }\n        $('#prowl_api').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testProwl-result').html(MEDUSA.config.loading);\n        $.get('home/testProwl', {\n            prowl_api: prowl.api, // eslint-disable-line camelcase\n            prowl_priority: prowl.priority // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testProwl-result').html(data);\n            $('#testProwl').prop('disabled', false);\n        });\n    });\n\n    $('#testKODI').on('click', function () {\n        var kodi = {};\n        kodi.host = $.trim($('#kodi_host').val());\n        kodi.username = $.trim($('#kodi_username').val());\n        kodi.password = $.trim($('#kodi_password').val());\n        if (!kodi.host) {\n            $('#testKODI-result').html('Please fill out the necessary fields above.');\n            $('#kodi_host').addClass('warning');\n            return;\n        }\n        $('#kodi_host').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testKODI-result').html(MEDUSA.config.loading);\n        $.get('home/testKODI', {\n            host: kodi.host,\n            username: kodi.username,\n            password: kodi.password\n        }).done(function (data) {\n            $('#testKODI-result').html(data);\n            $('#testKODI').prop('disabled', false);\n        });\n    });\n\n    $('#testPHT').on('click', function () {\n        var plex = {};\n        plex.client = {};\n        plex.client.host = $.trim($('#plex_client_host').val());\n        plex.client.username = $.trim($('#plex_client_username').val());\n        plex.client.password = $.trim($('#plex_client_password').val());\n        if (!plex.client.host) {\n            $('#testPHT-result').html('Please fill out the necessary fields above.');\n            $('#plex_client_host').addClass('warning');\n            return;\n        }\n        $('#plex_client_host').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testPHT-result').html(MEDUSA.config.loading);\n        $.get('home/testPHT', {\n            host: plex.client.host,\n            username: plex.client.username,\n            password: plex.client.password\n        }).done(function (data) {\n            $('#testPHT-result').html(data);\n            $('#testPHT').prop('disabled', false);\n        });\n    });\n\n    $('#testPMS').on('click', function () {\n        var plex = {};\n        plex.server = {};\n        plex.server.host = $.trim($('#plex_server_host').val());\n        plex.server.username = $.trim($('#plex_server_username').val());\n        plex.server.password = $.trim($('#plex_server_password').val());\n        plex.server.token = $.trim($('#plex_server_token').val());\n        if (!plex.server.host) {\n            $('#testPMS-result').html('Please fill out the necessary fields above.');\n            $('#plex_server_host').addClass('warning');\n            return;\n        }\n        $('#plex_server_host').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testPMS-result').html(MEDUSA.config.loading);\n        $.get('home/testPMS', {\n            host: plex.server.host,\n            username: plex.server.username,\n            password: plex.server.password,\n            plex_server_token: plex.server.token // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testPMS-result').html(data);\n            $('#testPMS').prop('disabled', false);\n        });\n    });\n\n    $('#testEMBY').on('click', function () {\n        var emby = {};\n        emby.host = $('#emby_host').val();\n        emby.apikey = $('#emby_apikey').val();\n        if (!emby.host || !emby.apikey) {\n            $('#testEMBY-result').html('Please fill out the necessary fields above.');\n            $('#emby_host').addRemoveWarningClass(emby.host);\n            $('#emby_apikey').addRemoveWarningClass(emby.apikey);\n            return;\n        }\n        $('#emby_host,#emby_apikey').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testEMBY-result').html(MEDUSA.config.loading);\n        $.get('home/testEMBY', {\n            host: emby.host,\n            emby_apikey: emby.apikey // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testEMBY-result').html(data);\n            $('#testEMBY').prop('disabled', false);\n        });\n    });\n\n    $('#testBoxcar2').on('click', function () {\n        var boxcar2 = {};\n        boxcar2.accesstoken = $.trim($('#boxcar2_accesstoken').val());\n        if (!boxcar2.accesstoken) {\n            $('#testBoxcar2-result').html('Please fill out the necessary fields above.');\n            $('#boxcar2_accesstoken').addClass('warning');\n            return;\n        }\n        $('#boxcar2_accesstoken').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testBoxcar2-result').html(MEDUSA.config.loading);\n        $.get('home/testBoxcar2', {\n            accesstoken: boxcar2.accesstoken\n        }).done(function (data) {\n            $('#testBoxcar2-result').html(data);\n            $('#testBoxcar2').prop('disabled', false);\n        });\n    });\n\n    $('#testPushover').on('click', function () {\n        var pushover = {};\n        pushover.userkey = $('#pushover_userkey').val();\n        pushover.apikey = $('#pushover_apikey').val();\n        if (!pushover.userkey || !pushover.apikey) {\n            $('#testPushover-result').html('Please fill out the necessary fields above.');\n            $('#pushover_userkey').addRemoveWarningClass(pushover.userkey);\n            $('#pushover_apikey').addRemoveWarningClass(pushover.apikey);\n            return;\n        }\n        $('#pushover_userkey,#pushover_apikey').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testPushover-result').html(MEDUSA.config.loading);\n        $.get('home/testPushover', {\n            userKey: pushover.userkey,\n            apiKey: pushover.apikey\n        }).done(function (data) {\n            $('#testPushover-result').html(data);\n            $('#testPushover').prop('disabled', false);\n        });\n    });\n\n    $('#testLibnotify').on('click', function () {\n        $('#testLibnotify-result').html(MEDUSA.config.loading);\n        $.get('home/testLibnotify', function (data) {\n            $('#testLibnotify-result').html(data);\n        });\n    });\n\n    $('#twitterStep1').on('click', function () {\n        $('#testTwitter-result').html(MEDUSA.config.loading);\n        $.get('home/twitterStep1', function (data) {\n            window.open(data);\n        }).done(function () {\n            $('#testTwitter-result').html('<b>Step1:</b> Confirm Authorization');\n        });\n    });\n\n    $('#twitterStep2').on('click', function () {\n        var twitter = {};\n        twitter.key = $.trim($('#twitter_key').val());\n        $('#twitter_key').addRemoveWarningClass(twitter.key);\n        if (twitter.key) {\n            $('#testTwitter-result').html(MEDUSA.config.loading);\n            $.get('home/twitterStep2', {\n                key: twitter.key\n            }, function (data) {\n                $('#testTwitter-result').html(data);\n            });\n        }\n        $('#testTwitter-result').html('Please fill out the necessary fields above.');\n    });\n\n    $('#testTwitter').on('click', function () {\n        $.get('home/testTwitter', function (data) {\n            $('#testTwitter-result').html(data);\n        });\n    });\n\n    $('#settingsNMJ').on('click', function () {\n        var nmj = {};\n        if ($('#nmj_host').val()) {\n            $('#testNMJ-result').html(MEDUSA.config.loading);\n            nmj.host = $('#nmj_host').val();\n\n            $.get('home/settingsNMJ', {\n                host: nmj.host\n            }, function (data) {\n                if (data === null) {\n                    $('#nmj_database').removeAttr('readonly');\n                    $('#nmj_mount').removeAttr('readonly');\n                }\n                var JSONData = $.parseJSON(data);\n                $('#testNMJ-result').html(JSONData.message);\n                $('#nmj_database').val(JSONData.database);\n                $('#nmj_mount').val(JSONData.mount);\n\n                if (JSONData.database) {\n                    $('#nmj_database').prop('readonly', true);\n                } else {\n                    $('#nmj_database').removeAttr('readonly');\n                }\n                if (JSONData.mount) {\n                    $('#nmj_mount').prop('readonly', true);\n                } else {\n                    $('#nmj_mount').removeAttr('readonly');\n                }\n            });\n        }\n        alert('Please fill in the Popcorn IP address'); // eslint-disable-line no-alert\n        $('#nmj_host').focus();\n    });\n\n    $('#testNMJ').on('click', function () {\n        var nmj = {};\n        nmj.host = $.trim($('#nmj_host').val());\n        nmj.database = $('#nmj_database').val();\n        nmj.mount = $('#nmj_mount').val();\n        if (nmj.host) {\n            $('#nmj_host').removeClass('warning');\n            $(this).prop('disabled', true);\n            $('#testNMJ-result').html(MEDUSA.config.loading);\n            $.get('home/testNMJ', {\n                host: nmj.host,\n                database: nmj.database,\n                mount: nmj.mount\n            }).done(function (data) {\n                $('#testNMJ-result').html(data);\n                $('#testNMJ').prop('disabled', false);\n            });\n        }\n        $('#testNMJ-result').html('Please fill out the necessary fields above.');\n        $('#nmj_host').addClass('warning');\n    });\n\n    $('#settingsNMJv2').on('click', function () {\n        var nmjv2 = {};\n        if ($('#nmjv2_host').val()) {\n            $('#testNMJv2-result').html(MEDUSA.config.loading);\n            nmjv2.host = $('#nmjv2_host').val();\n            nmjv2.dbloc = '';\n            var radios = document.getElementsByName('nmjv2_dbloc');\n            for (var i = 0, len = radios.length; i < len; i++) {\n                if (radios[i].checked) {\n                    nmjv2.dbloc = radios[i].value;\n                    break;\n                }\n            }\n\n            nmjv2.dbinstance = $('#NMJv2db_instance').val();\n            $.get('home/settingsNMJv2', {\n                host: nmjv2.host,\n                dbloc: nmjv2.dbloc,\n                instance: nmjv2.dbinstance\n            }, function (data) {\n                if (data === null) {\n                    $('#nmjv2_database').removeAttr('readonly');\n                }\n                var JSONData = $.parseJSON(data);\n                $('#testNMJv2-result').html(JSONData.message);\n                $('#nmjv2_database').val(JSONData.database);\n\n                if (JSONData.database) {\n                    $('#nmjv2_database').prop('readonly', true);\n                } else {\n                    $('#nmjv2_database').removeAttr('readonly');\n                }\n            });\n        }\n        alert('Please fill in the Popcorn IP address'); // eslint-disable-line no-alert\n        $('#nmjv2_host').focus();\n    });\n\n    $('#testNMJv2').on('click', function () {\n        var nmjv2 = {};\n        nmjv2.host = $.trim($('#nmjv2_host').val());\n        if (nmjv2.host) {\n            $('#nmjv2_host').removeClass('warning');\n            $(this).prop('disabled', true);\n            $('#testNMJv2-result').html(MEDUSA.config.loading);\n            $.get('home/testNMJv2', {\n                host: nmjv2.host\n            }).done(function (data) {\n                $('#testNMJv2-result').html(data);\n                $('#testNMJv2').prop('disabled', false);\n            });\n        }\n        $('#testNMJv2-result').html('Please fill out the necessary fields above.');\n        $('#nmjv2_host').addClass('warning');\n    });\n\n    $('#testFreeMobile').on('click', function () {\n        var freemobile = {};\n        freemobile.id = $.trim($('#freemobile_id').val());\n        freemobile.apikey = $.trim($('#freemobile_apikey').val());\n        if (!freemobile.id || !freemobile.apikey) {\n            $('#testFreeMobile-result').html('Please fill out the necessary fields above.');\n            if (freemobile.id) {\n                $('#freemobile_id').removeClass('warning');\n            } else {\n                $('#freemobile_id').addClass('warning');\n            }\n            if (freemobile.apikey) {\n                $('#freemobile_apikey').removeClass('warning');\n            } else {\n                $('#freemobile_apikey').addClass('warning');\n            }\n            return;\n        }\n        $('#freemobile_id,#freemobile_apikey').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testFreeMobile-result').html(MEDUSA.config.loading);\n        $.get('home/testFreeMobile', {\n            freemobile_id: freemobile.id, // eslint-disable-line camelcase\n            freemobile_apikey: freemobile.apikey // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testFreeMobile-result').html(data);\n            $('#testFreeMobile').prop('disabled', false);\n        });\n    });\n\n    $('#testTelegram').on('click', function () {\n        var telegram = {};\n        telegram.id = $.trim($('#telegram_id').val());\n        telegram.apikey = $.trim($('#telegram_apikey').val());\n        if (!telegram.id || !telegram.apikey) {\n            $('#testTelegram-result').html('Please fill out the necessary fields above.');\n            $('#telegram_id').addRemoveWarningClass(telegram.id);\n            $('#telegram_apikey').addRemoveWarningClass(telegram.apikey);\n            return;\n        }\n        $('#telegram_id,#telegram_apikey').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testTelegram-result').html(MEDUSA.config.loading);\n        $.get('home/testTelegram', {\n            telegram_id: telegram.id, // eslint-disable-line camelcase\n            telegram_apikey: telegram.apikey // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testTelegram-result').html(data);\n            $('#testTelegram').prop('disabled', false);\n        });\n    });\n\n    $('#testSlack').on('click', function () {\n        var slack = {};\n        slack.webhook = $.trim($('#slack_webhook').val());\n\n        if (!slack.webhook) {\n            $('#testSlack-result').html('Please fill out the necessary fields above.');\n            $('#slack_webhook').addRemoveWarningClass(slack.webhook);\n            return;\n        }\n        $('#slack_webhook').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testSlack-result').html(MEDUSA.config.loading);\n        $.get('home/testslack', {\n            slack_webhook: slack.webhook // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testSlack-result').html(data);\n            $('#testSlack').prop('disabled', false);\n        });\n    });\n\n    $('#TraktGetPin').on('click', function () {\n        window.open($('#trakt_pin_url').val(), 'popUp', 'toolbar=no, scrollbars=no, resizable=no, top=200, left=200, width=650, height=550');\n        $('#trakt_pin').prop('disabled', false);\n    });\n\n    $('#trakt_pin').on('keyup change', function () {\n        if ($('#trakt_pin').val().length === 0) {\n            $('#TraktGetPin').removeClass('hide');\n            $('#authTrakt').addClass('hide');\n        } else {\n            $('#TraktGetPin').addClass('hide');\n            $('#authTrakt').removeClass('hide');\n        }\n    });\n\n    $('#authTrakt').on('click', function () {\n        var trakt = {};\n        trakt.pin = $('#trakt_pin').val();\n        if (trakt.pin.length !== 0) {\n            $.get('home/getTraktToken', {\n                trakt_pin: trakt.pin // eslint-disable-line camelcase\n            }).done(function (data) {\n                $('#testTrakt-result').html(data);\n                $('#authTrakt').addClass('hide');\n                $('#trakt_pin').prop('disabled', true);\n                $('#trakt_pin').val('');\n                $('#TraktGetPin').removeClass('hide');\n            });\n        }\n    });\n\n    $('#testTrakt').on('click', function () {\n        var trakt = {};\n        trakt.username = $.trim($('#trakt_username').val());\n        trakt.trendingBlacklist = $.trim($('#trakt_blacklist_name').val());\n        if (!trakt.username) {\n            $('#testTrakt-result').html('Please fill out the necessary fields above.');\n            $('#trakt_username').addRemoveWarningClass(trakt.username);\n            return;\n        }\n\n        if (/\\s/g.test(trakt.trendingBlacklist)) {\n            $('#testTrakt-result').html('Check blacklist name; the value needs to be a trakt slug');\n            $('#trakt_blacklist_name').addClass('warning');\n            return;\n        }\n        $('#trakt_username').removeClass('warning');\n        $('#trakt_blacklist_name').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testTrakt-result').html(MEDUSA.config.loading);\n        $.get('home/testTrakt', {\n            username: trakt.username,\n            blacklist_name: trakt.trendingBlacklist // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testTrakt-result').html(data);\n            $('#testTrakt').prop('disabled', false);\n        });\n    });\n\n    $('#forceSync').on('click', function () {\n        $('#testTrakt-result').html(MEDUSA.config.loading);\n        $.getJSON('home/forceTraktSync', function (data) {\n            $('#testTrakt-result').html(data.result);\n        });\n    });\n\n    $('#testEmail').on('click', function () {\n        var status;\n        var host;\n        var port;\n        var tls;\n        var from;\n        var user;\n        var pwd;\n        var err;\n        var to;\n        status = $('#testEmail-result');\n        status.html(MEDUSA.config.loading);\n        host = $('#email_host').val();\n        host = host.length > 0 ? host : null;\n        port = $('#email_port').val();\n        port = port.length > 0 ? port : null;\n        tls = $('#email_tls').attr('checked') === undefined ? 0 : 1;\n        from = $('#email_from').val();\n        from = from.length > 0 ? from : 'root@localhost';\n        user = $('#email_user').val().trim();\n        pwd = $('#email_password').val();\n        err = '';\n        if (host === null) {\n            err += '<li style=\"color: red;\">You must specify an SMTP hostname!</li>';\n        }\n        if (port === null) {\n            err += '<li style=\"color: red;\">You must specify an SMTP port!</li>';\n        } else if (port.match(/^\\d+$/) === null || parseInt(port, 10) > 65535) {\n            err += '<li style=\"color: red;\">SMTP port must be between 0 and 65535!</li>';\n        }\n        if (err.length > 0) {\n            err = '<ol>' + err + '</ol>';\n            status.html(err);\n        } else {\n            to = prompt('Enter an email address to send the test to:', null); // eslint-disable-line no-alert\n            if (to === null || to.length === 0 || to.match(/.*@.*/) === null) {\n                status.html('<p style=\"color: red;\">You must provide a recipient email address!</p>');\n            } else {\n                $.get('home/testEmail', {\n                    host: host,\n                    port: port,\n                    smtp_from: from, // eslint-disable-line camelcase\n                    use_tls: tls, // eslint-disable-line camelcase\n                    user: user,\n                    pwd: pwd,\n                    to: to\n                }, function (msg) {\n                    $('#testEmail-result').html(msg);\n                });\n            }\n        }\n    });\n\n    $('#testNMA').on('click', function () {\n        var nma = {};\n        nma.api = $.trim($('#nma_api').val());\n        nma.priority = $('#nma_priority').val();\n        if (!nma.api) {\n            $('#testNMA-result').html('Please fill out the necessary fields above.');\n            $('#nma_api').addClass('warning');\n            return;\n        }\n        $('#nma_api').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testNMA-result').html(MEDUSA.config.loading);\n        $.get('home/testNMA', {\n            nma_api: nma.api, // eslint-disable-line camelcase\n            nma_priority: nma.priority // eslint-disable-line camelcase\n        }).done(function (data) {\n            $('#testNMA-result').html(data);\n            $('#testNMA').prop('disabled', false);\n        });\n    });\n\n    $('#testPushalot').on('click', function () {\n        var pushalot = {};\n        pushalot.authToken = $.trim($('#pushalot_authorizationtoken').val());\n        if (!pushalot.authToken) {\n            $('#testPushalot-result').html('Please fill out the necessary fields above.');\n            $('#pushalot_authorizationtoken').addClass('warning');\n            return;\n        }\n        $('#pushalot_authorizationtoken').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testPushalot-result').html(MEDUSA.config.loading);\n        $.get('home/testPushalot', {\n            authorizationToken: pushalot.authToken\n        }).done(function (data) {\n            $('#testPushalot-result').html(data);\n            $('#testPushalot').prop('disabled', false);\n        });\n    });\n\n    $('#testPushbullet').on('click', function () {\n        var pushbullet = {};\n        pushbullet.api = $.trim($('#pushbullet_api').val());\n        if (!pushbullet.api) {\n            $('#testPushbullet-result').html('Please fill out the necessary fields above.');\n            $('#pushbullet_api').addClass('warning');\n            return;\n        }\n        $('#pushbullet_api').removeClass('warning');\n        $(this).prop('disabled', true);\n        $('#testPushbullet-result').html(MEDUSA.config.loading);\n        $.get('home/testPushbullet', {\n            api: pushbullet.api\n        }).done(function (data) {\n            $('#testPushbullet-result').html(data);\n            $('#testPushbullet').prop('disabled', false);\n        });\n    });\n\n    function getPushbulletDevices(msg) {\n        var pushbullet = {};\n        pushbullet.api = $('#pushbullet_api').val();\n\n        if (msg) {\n            $('#testPushbullet-result').html(MEDUSA.config.loading);\n        }\n\n        if (!pushbullet.api) {\n            $('#testPushbullet-result').html('You didn\\'t supply a Pushbullet api key');\n            $('#pushbullet_api').focus();\n            return false;\n        }\n\n        $.get('home/getPushbulletDevices', {\n            api: pushbullet.api\n        }, function (data) {\n            pushbullet.devices = $.parseJSON(data).devices;\n            pushbullet.currentDevice = $('#pushbullet_device').val();\n            $('#pushbullet_device_list').html('');\n            for (var i = 0, len = pushbullet.devices.length; i < len; i++) {\n                if (pushbullet.devices[i].active === true) {\n                    if (pushbullet.currentDevice === pushbullet.devices[i].iden) {\n                        $('#pushbullet_device_list').append('<option value=\"' + pushbullet.devices[i].iden + '\" selected>' + pushbullet.devices[i].nickname + '</option>');\n                    } else {\n                        $('#pushbullet_device_list').append('<option value=\"' + pushbullet.devices[i].iden + '\">' + pushbullet.devices[i].nickname + '</option>');\n                    }\n                }\n            }\n            $('#pushbullet_device_list').prepend('<option value=\"\" ' + (pushbullet.currentDevice === '' ? 'selected' : '') + '>All devices</option>');\n            if (msg) {\n                $('#testPushbullet-result').html(msg);\n            }\n        });\n\n        $('#pushbullet_device_list').on('change', function () {\n            $('#pushbullet_device').val($('#pushbullet_device_list').val());\n            $('#testPushbullet-result').html('Don\\'t forget to save your new pushbullet settings.');\n        });\n    }\n\n    $('#getPushbulletDevices').on('click', function () {\n        getPushbulletDevices('Device list updated. Please choose a device to push to.');\n    });\n\n    // We have to call this function on dom ready to create the devices select\n    getPushbulletDevices();\n\n    $('#email_show').on('change', function () {\n        var key = parseInt($('#email_show').val(), 10);\n        $.getJSON('home/loadShowNotifyLists', function (notifyData) {\n            if (notifyData._size > 0) {\n                $('#email_show_list').val(key >= 0 ? notifyData[key.toString()].list : '');\n            }\n        });\n    });\n    $('#prowl_show').on('change', function () {\n        var key = parseInt($('#prowl_show').val(), 10);\n        $.getJSON('home/loadShowNotifyLists', function (notifyData) {\n            if (notifyData._size > 0) {\n                $('#prowl_show_list').val(key >= 0 ? notifyData[key.toString()].prowl_notify_list : '');\n            }\n        });\n    });\n\n    function loadShowNotifyLists() {\n        $.getJSON('home/loadShowNotifyLists', function (list) {\n            var html;\n            var s;\n            if (list._size === 0) {\n                return;\n            }\n\n            // Convert the 'list' object to a js array of objects so that we can sort it\n            var _list = [];\n            for (s in list) {\n                if (s.charAt(0) !== '_') {\n                    _list.push(list[s]);\n                }\n            }\n            var sortedList = _list.sort(function (a, b) {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            });\n            html = '<option value=\"-1\">-- Select --</option>';\n            for (s in sortedList) {\n                if (sortedList[s].id && sortedList[s].name) {\n                    html += '<option value=\"' + sortedList[s].id + '\">' + $('<div/>').text(sortedList[s].name).html() + '</option>';\n                }\n            }\n            $('#email_show').html(html);\n            $('#email_show_list').val('');\n\n            $('#prowl_show').html(html);\n            $('#prowl_show_list').val('');\n        });\n    }\n    // Load the per show notify lists everytime this page is loaded\n    loadShowNotifyLists();\n\n    // Update the internal data struct anytime settings are saved to the server\n    $('#email_show').on('notify', loadShowNotifyLists);\n    $('#prowl_show').on('notify', loadShowNotifyLists);\n\n    $('#email_show_save').on('click', function () {\n        $.post('home/saveShowNotifyList', {\n            show: $('#email_show').val(),\n            emails: $('#email_show_list').val()\n        }, loadShowNotifyLists);\n    });\n    $('#prowl_show_save').on('click', function () {\n        $.post('home/saveShowNotifyList', {\n            show: $('#prowl_show').val(),\n            prowlAPIs: $('#prowl_show_list').val()\n        }, function () {\n            // Reload the per show notify lists to reflect changes\n            loadShowNotifyLists();\n        });\n    });\n\n    // Show instructions for plex when enabled\n    $('#use_plex_server').on('click', function () {\n        if ($(this).is(':checked')) {\n            $('.plexinfo').removeClass('hide');\n        } else {\n            $('.plexinfo').addClass('hide');\n        }\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"notifications.js"}