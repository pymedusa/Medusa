{"version":3,"names":[],"mappings":"","sources":["js/manage/manage-searches.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nMEDUSA.manage.manageSearches = function () {\n    /**\n     * Get total number current scene exceptions per source. Will request medusa, xem and anidb name exceptions.\n     * @param exceptions - A list of exception types with their last_updates.\n     */\n    var updateExceptionTable = function (exceptions) {\n        var status = $('#sceneExceptionStatus');\n\n        var medusaException = exceptions.data.filter(function (obj) {\n            return obj.id === 'local';\n        });\n        var cusExceptionDate = new Date(medusaException[0].lastRefresh * 1000).toLocaleDateString();\n\n        var xemException = exceptions.data.filter(function (obj) {\n            return obj.id === 'xem';\n        });\n        var xemExceptionDate = new Date(xemException[0].lastRefresh * 1000).toLocaleDateString();\n\n        var anidbException = exceptions.data.filter(function (obj) {\n            return obj.id === 'anidb';\n        });\n        var anidbExceptionDate = new Date(anidbException[0].lastRefresh * 1000).toLocaleDateString();\n\n        var table = $('<ul class=\"simpleList\"></ul>').append('<li>' + '<a href=\"' + MEDUSA.config.anonRedirect + 'https://github.com/pymedusa/Medusa/wiki/Scene-exceptions-and-numbering\">' + 'Last updated medusa\\'s exceptions</a> ' + cusExceptionDate).append('<li>' + '<a href=\"' + MEDUSA.config.anonRedirect + 'http://thexem.de\">' + 'Last updated xem exceptions</a> ' + xemExceptionDate).append('<li>Last updated anidb exceptions ' + anidbExceptionDate);\n\n        status.append(table);\n        $('.forceSceneExceptionRefresh').removeClass('disabled');\n    };\n\n    /**\n     * Update an element with a spinner gif and a descriptive message.\n     * @param spinnerContainer - An element we can use to add the spinner and message to.\n     * @param message - A string with the message to display behind the spinner.\n     * @param showSpinner - A boolean to show or not show the spinner (gif).\n     */\n    var updateSpinner = function (spinnerContainer, message, showSpinner) {\n        if (showSpinner) {\n            message = '<img id=\"searchingAnim\" src=\"images/loading32' + MEDUSA.config.themeSpinner + '.gif\" height=\"16\" width=\"16\" />&nbsp;' + message;\n        }\n        $(spinnerContainer).empty().append(message);\n    };\n\n    /**\n     * Trigger the force refresh of all the exception types.\n     */\n    $('.forceSceneExceptionRefresh').on('click', function () {\n        var status = $('#sceneExceptionStatus');\n        // Start a spinner.\n        updateSpinner(status, 'Retrieving scene exceptions...', true);\n\n        api.post('alias-source/all/operation', { type: 'REFRESH' }, {\n            timeout: 60000\n        }).then(function (response) {\n            status[0].innerHTML = '';\n            status.append($('<span></span>').text(response.data.result));\n\n            api.get('alias-source').then(function (response) {\n                updateExceptionTable(response);\n                $('.forceSceneExceptionRefresh').addClass('disabled');\n            }).catch(function (err) {\n                log.error('Trying to get scene exceptions failed with error: ' + err);\n                updateSpinner(status, 'Trying to get scene exceptions failed with error: ' + err, false);\n            });\n            updateSpinner(status, 'Finished updating scene exceptions.', false);\n        }).catch(function (err) {\n            log.error('Trying to update scene exceptions failed with error: ' + err);\n            updateSpinner(status, 'Trying to update scene exceptions failed with error: ' + err, false);\n        });\n    });\n\n    // Initially load the exception types last updates on page load.\n    api.get('alias-source').then(function (response) {\n        updateExceptionTable(response);\n    }).catch(function (err) {\n        log.error('Trying to get scene exceptions failed with error: ' + err);\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"manage-searches.js"}