"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkslim"] = self["webpackChunkslim"] || []).push([["app"],{

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\");\n/* harmony import */ var _global_vue_shim__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global-vue-shim */ \"./src/global-vue-shim.js\");\n/* harmony import */ var _router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router */ \"./src/router/index.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store */ \"./src/store/index.js\");\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var _utils_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/core */ \"./src/utils/core.js\");\n\n\n\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_4__[\"default\"].config.devtools = true;\nvue__WEBPACK_IMPORTED_MODULE_4__[\"default\"].config.performance = true;\n(0,_global_vue_shim__WEBPACK_IMPORTED_MODULE_0__.registerPlugins)(); // @TODO: Remove this before v1.0.0\n\n(0,_global_vue_shim__WEBPACK_IMPORTED_MODULE_0__.registerGlobalComponents)();\nconst app = new vue__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n  name: 'index',\n  router: _router__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  store: _store__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n\n  data() {\n    return {\n      globalLoading: false,\n      pageComponent: false\n    };\n  },\n\n  async mounted() {\n    const {\n      getShows,\n      setLoadingDisplay,\n      setLoadingFinished\n    } = this;\n\n    if (_utils_core__WEBPACK_IMPORTED_MODULE_3__.isDevelopment) {\n      console.log('App Mounted!');\n    } // Create the api client object.\n\n\n    await this.$store.dispatch('auth');\n\n    if (!window.location.pathname.includes('/login')) {\n      const {\n        $store\n      } = this;\n      await $store.dispatch('login');\n      Promise.all([$store.dispatch('getConfig'), $store.dispatch('getStats')]).then(_ref => {\n        let [config] = _ref;\n\n        if (_utils_core__WEBPACK_IMPORTED_MODULE_3__.isDevelopment) {\n          console.log('App Loaded!');\n        } // Legacy - send config.general to jQuery (received by index.js)\n\n\n        const event = new CustomEvent('medusa-config-loaded', {\n          detail: {\n            general: config.general,\n            layout: config.layout\n          }\n        });\n        window.dispatchEvent(event); // Let's bootstrap the app with essential data like the shows.\n        // For the storing of the shows in the browsers cache, we depend on config/general.\n\n        getShows().then(() => {\n          console.log('Finished loading all shows.');\n          setTimeout(() => {\n            setLoadingFinished(true);\n            setLoadingDisplay(false);\n          }, 2000);\n        });\n      }).catch(error => {\n        console.debug(error);\n        alert('Unable to connect to Medusa!'); // eslint-disable-line no-alert\n      });\n    }\n  },\n\n  methods: { ...(0,vuex__WEBPACK_IMPORTED_MODULE_5__.mapActions)({\n      getShows: 'getShows'\n    }),\n    ...(0,vuex__WEBPACK_IMPORTED_MODULE_5__.mapMutations)(['setLoadingDisplay', 'setLoadingFinished'])\n  }\n}).$mount('#vue-wrap');\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n\n//# sourceURL=webpack://slim/./src/app.js?");

/***/ }),

/***/ "./src/router/index.js":
/*!*****************************!*\
  !*** ./src/router/index.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\");\n/* harmony import */ var vue_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vue-router */ \"./node_modules/vue-router/dist/vue-router.esm.js\");\n/* harmony import */ var _routes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./routes */ \"./src/router/routes.js\");\n\n\n\nvue__WEBPACK_IMPORTED_MODULE_1__[\"default\"].use(vue_router__WEBPACK_IMPORTED_MODULE_2__[\"default\"]); // export const base = document.body.getAttribute('web-root') + '/';\n\nconst router = new vue_router__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n  // base,\n  mode: 'history',\n  routes: _routes__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\n});\nrouter.beforeEach((to, from, next) => {\n  const {\n    meta\n  } = to;\n  const {\n    title\n  } = meta; // If there's no title then it's not a .vue route\n  // or it's handling its own title\n\n  if (title) {\n    document.title = `${title} | Medusa`;\n  } // Always call next otherwise the <router-view> will be empty\n\n\n  next();\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (router);\n\n//# sourceURL=webpack://slim/./src/router/index.js?");

/***/ }),

/***/ "./src/router/routes.js":
/*!******************************!*\
  !*** ./src/router/routes.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _sub_menus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sub-menus */ \"./src/router/sub-menus.js\");\n\n/** @type {import('.').Route[]} */\n\nconst homeRoutes = [{\n  path: '/home',\n  name: 'home',\n  meta: {\n    title: 'Home',\n    topMenu: 'home',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/home.vue */ \"./src/components/home.vue\"))\n}, {\n  path: '/home/editShow',\n  name: 'editShow',\n  meta: {\n    topMenu: 'home',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.showSubMenu,\n    converted: true,\n    nocache: true // Use this flag, to have the router-view use :key=\"$route.fullPath\"\n\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/edit-show.vue */ \"./src/components/edit-show.vue\"))\n}, {\n  path: '/home/displayShow',\n  name: 'show',\n  meta: {\n    topMenu: 'home',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.showSubMenu,\n    converted: true,\n    nocache: true // Use this flag, to have the router-view use :key=\"$route.fullPath\"\n\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/display-show.vue */ \"./src/components/display-show.vue\"))\n}, {\n  path: '/home/snatchSelection',\n  name: 'snatchSelection',\n  meta: {\n    topMenu: 'home',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.showSubMenu,\n    converted: true,\n    nocache: true // Use this flag, to have the router-view use :key=\"$route.fullPath\"\n\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/snatch-selection.vue */ \"./src/components/snatch-selection.vue\"))\n}, {\n  path: '/home/testRename',\n  name: 'testRename',\n  meta: {\n    topMenu: 'home',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.showSubMenu,\n    title: 'Preview Rename',\n    header: 'Preview Rename',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/test-rename.vue */ \"./src/components/test-rename.vue\"))\n}, {\n  path: '/home/postprocess',\n  name: 'postprocess',\n  meta: {\n    title: 'Manual Post-Processing',\n    header: 'Manual Post-Processing',\n    topMenu: 'home',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manual-post-process.vue */ \"./src/components/manual-post-process.vue\"))\n}, {\n  path: '/home/status',\n  name: 'status',\n  meta: {\n    title: 'Status',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/status.vue */ \"./src/components/status.vue\"))\n}, {\n  path: '/home/restart',\n  name: 'restart',\n  meta: {\n    title: 'Restarting...',\n    header: 'Performing Restart',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/restart.vue */ \"./src/components/restart.vue\"))\n}, {\n  path: '/home/shutdown',\n  name: 'shutdown',\n  meta: {\n    header: 'Shutting down',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/restart.vue */ \"./src/components/restart.vue\")),\n  props: {\n    shutdown: true\n  }\n}, {\n  path: '/home/update',\n  name: 'update',\n  meta: {\n    header: 'Update Medusa',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/update.vue */ \"./src/components/update.vue\"))\n}];\n/** @type {import('.').Route[]} */\n\nconst configRoutes = [{\n  path: '/config',\n  name: 'config',\n  meta: {\n    title: 'Help & Info',\n    header: 'Medusa Configuration',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config.vue */ \"./src/components/config.vue\"))\n}, {\n  path: '/config/anime',\n  name: 'configAnime',\n  meta: {\n    title: 'Config - Anime',\n    header: 'Anime',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-anime.vue */ \"./src/components/config-anime.vue\"))\n}, {\n  path: '/config/backuprestore',\n  name: 'configBackupRestore',\n  meta: {\n    title: 'Config - Backup/Restore',\n    header: 'Backup/Restore',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-backup-restore.vue */ \"./src/components/config-backup-restore.vue\"))\n}, {\n  path: '/config/general',\n  name: 'configGeneral',\n  meta: {\n    title: 'Config - General',\n    header: 'General Configuration',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-general.vue */ \"./src/components/config-general.vue\"))\n}, {\n  path: '/config/notifications',\n  name: 'configNotifications',\n  meta: {\n    title: 'Config - Notifications',\n    header: 'Notifications',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-notifications.vue */ \"./src/components/config-notifications.vue\"))\n}, {\n  path: '/config/postProcessing',\n  name: 'configPostProcessing',\n  meta: {\n    title: 'Config - Post-Processing',\n    header: 'Post-Processing',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-post-processing.vue */ \"./src/components/config-post-processing.vue\"))\n}, {\n  path: '/config/providers',\n  name: 'configSearchProviders',\n  meta: {\n    title: 'Config - Providers',\n    header: 'Search Providers',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-providers.vue */ \"./src/components/config-providers.vue\"))\n}, {\n  path: '/config/search',\n  name: 'configSearchSettings',\n  meta: {\n    title: 'Config - Episode Search',\n    header: 'Search Settings',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-search.vue */ \"./src/components/config-search.vue\"))\n}, {\n  path: '/config/subtitles',\n  name: 'configSubtitles',\n  meta: {\n    title: 'Config - Subtitles',\n    header: 'Subtitles',\n    topMenu: 'config',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.configSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/config-subtitles.vue */ \"./src/components/config-subtitles.vue\"))\n}];\n/** @type {import('.').Route[]} */\n\nconst addShowRoutes = [{\n  path: '/addShows',\n  name: 'addShows',\n  meta: {\n    title: 'Add Shows',\n    header: 'Add Shows',\n    topMenu: 'home',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/add-shows.vue */ \"./src/components/add-shows.vue\"))\n}, {\n  path: '/addShows/existingShows',\n  name: 'addExistingShows',\n  meta: {\n    title: 'Add Existing Shows',\n    header: 'Add Existing Shows',\n    topMenu: 'home',\n    converted: true,\n    nocache: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/new-shows-existing.vue */ \"./src/components/new-shows-existing.vue\"))\n}, {\n  path: '/addShows/newShow',\n  name: 'addNewShow',\n  meta: {\n    title: 'Add New Show',\n    header: 'Add New Show',\n    topMenu: 'home',\n    converted: true,\n    nocache: true\n  },\n  props: route => ({ ...route.params\n  }),\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/new-show.vue */ \"./src/components/new-show.vue\"))\n}];\n/** @type {import('.').Route} */\n\nconst loginRoute = {\n  path: '/login',\n  name: 'login',\n  meta: {\n    title: 'Login'\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/login.vue */ \"./src/components/login.vue\"))\n};\n/** @type {import('.').Route} */\n\nconst addRecommendedRoute = {\n  path: '/addRecommended',\n  name: 'addRecommended',\n  meta: {\n    title: 'Add Recommended Shows',\n    header: 'Add Recommended Shows',\n    topMenu: 'home',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/recommended.vue */ \"./src/components/recommended.vue\"))\n};\n/** @type {import('.').Route} */\n\nconst scheduleRoute = {\n  path: '/schedule',\n  name: 'schedule',\n  meta: {\n    title: 'Schedule',\n    header: 'Schedule',\n    topMenu: 'schedule',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/schedule.vue */ \"./src/components/schedule.vue\"))\n};\n/** @type {import('.').Route} */\n\nconst historyRoute = {\n  path: '/history',\n  name: 'history',\n  meta: {\n    title: 'History',\n    header: 'History',\n    topMenu: 'history',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.historySubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/history.vue */ \"./src/components/history.vue\"))\n};\n/** @type {import('.').Route} */\n\nconst downloadsRoute = {\n  path: '/downloads',\n  name: 'downloads',\n  meta: {\n    title: 'Downloads',\n    header: 'Downloads',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/current-downloads.vue */ \"./src/components/current-downloads.vue\"))\n};\n/** @type {import('.').Route[]} */\n\nconst manageRoutes = [{\n  path: '/manage',\n  name: 'manage',\n  meta: {\n    title: 'Mass Update',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-mass-update.vue */ \"./src/components/manage-mass-update.vue\")),\n  props: true\n}, {\n  path: '/manage/changeIndexer',\n  name: 'manageChangeIndexer',\n  meta: {\n    title: 'Change show indexer',\n    header: 'Change show indexer',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/change-indexer.vue */ \"./src/components/change-indexer.vue\"))\n}, {\n  path: '/manage/backlogOverview',\n  name: 'manageBacklogOverview',\n  meta: {\n    title: 'Backlog Overview',\n    header: 'Backlog Overview',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-backlog.vue */ \"./src/components/manage-backlog.vue\"))\n}, {\n  path: '/manage/episodeStatuses',\n  name: 'manageEpisodeOverview',\n  meta: {\n    title: 'Episode Overview',\n    header: 'Episode Overview',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-episode-status.vue */ \"./src/components/manage-episode-status.vue\"))\n}, {\n  path: '/manage/failedDownloads',\n  name: 'manageFailedDownloads',\n  meta: {\n    title: 'Failed Downloads',\n    header: 'Failed Downloads',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-failed-downloads.vue */ \"./src/components/manage-failed-downloads.vue\"))\n}, {\n  path: '/manage/manageSearches',\n  name: 'manageManageSearches',\n  meta: {\n    title: 'Manage Searches',\n    header: 'Manage Searches',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-searches.vue */ \"./src/components/manage-searches.vue\"))\n}, {\n  path: '/manage/massEdit',\n  name: 'manageMassEdit',\n  meta: {\n    title: 'Mass Edit',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-mass-edit.vue */ \"./src/components/manage-mass-edit.vue\")),\n  props: true\n}, {\n  path: '/manage/subtitleMissed',\n  name: 'manageSubtitleMissed',\n  meta: {\n    title: 'Missing Subtitles',\n    header: 'Missing Subtitles',\n    topMenu: 'manage',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/manage-missing-subtitles.vue */ \"./src/components/manage-missing-subtitles.vue\"))\n}];\n/** @type {import('.').Route[]} */\n\nconst errorLogsRoutes = [{\n  path: '/errorlogs',\n  name: 'errorlogs',\n  meta: {\n    title: 'Logs & Errors',\n    topMenu: 'system',\n    subMenu: _sub_menus__WEBPACK_IMPORTED_MODULE_0__.errorlogsSubMenu,\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/log-reporter.vue */ \"./src/components/log-reporter.vue\")),\n  props: true\n}, {\n  path: '/errorlogs/viewlog',\n  name: 'viewlog',\n  meta: {\n    title: 'Logs',\n    header: 'Log File',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/logs.vue */ \"./src/components/logs.vue\"))\n}];\n/** @type {import('.').Route} */\n\nconst newsRoute = {\n  path: '/news',\n  name: 'news',\n  meta: {\n    title: 'News',\n    header: 'News',\n    topMenu: 'system'\n  }\n};\n/** @type {import('.').Route} */\n\nconst changesRoute = {\n  path: '/changes',\n  name: 'changes',\n  meta: {\n    title: 'Changelog',\n    header: 'Changelog',\n    topMenu: 'system'\n  }\n};\n/** @type {import('.').Route} */\n\nconst ircRoute = {\n  path: '/IRC',\n  name: 'IRC',\n  meta: {\n    title: 'IRC',\n    topMenu: 'system',\n    converted: true\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/irc.vue */ \"./src/components/irc.vue\"))\n};\n/** @type {import('.').Route} */\n\nconst notFoundRoute = {\n  path: '/not-found',\n  name: 'not-found',\n  meta: {\n    title: '404',\n    header: '404 - page not found'\n  },\n  component: () => Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../components/http/404.vue */ \"./src/components/http/404.vue\"))\n}; // @NOTE: Redirect can only be added once all routes are vue\n\n/** @type {import('.').Route} */\n\nconst notFoundRedirect = {\n  path: '*',\n  redirect: '/not-found'\n};\n/** @type {import('.').Route[]} */\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([...homeRoutes, ...configRoutes, ...addShowRoutes, loginRoute, addRecommendedRoute, scheduleRoute, historyRoute, downloadsRoute, ...manageRoutes, ...errorLogsRoutes, newsRoute, changesRoute, ircRoute, notFoundRoute, notFoundRedirect]);\n\n//# sourceURL=webpack://slim/./src/router/routes.js?");

/***/ }),

/***/ "./src/router/sub-menus.js":
/*!*********************************!*\
  !*** ./src/router/sub-menus.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"configSubMenu\": () => (/* binding */ configSubMenu),\n/* harmony export */   \"errorlogsSubMenu\": () => (/* binding */ errorlogsSubMenu),\n/* harmony export */   \"historySubMenu\": () => (/* binding */ historySubMenu),\n/* harmony export */   \"showSubMenu\": () => (/* binding */ showSubMenu)\n/* harmony export */ });\n/** @type {import('.').SubMenu} */\nconst configSubMenu = [{\n  title: 'General',\n  path: 'config/general/',\n  icon: 'menu-icon-config'\n}, {\n  title: 'Backup/Restore',\n  path: 'config/backuprestore/',\n  icon: 'menu-icon-backup'\n}, {\n  title: 'Search Settings',\n  path: 'config/search/',\n  icon: 'menu-icon-manage-searches'\n}, {\n  title: 'Search Providers',\n  path: 'config/providers/',\n  icon: 'menu-icon-provider'\n}, {\n  title: 'Subtitles Settings',\n  path: 'config/subtitles/',\n  icon: 'menu-icon-backlog'\n}, {\n  title: 'Post-Processing',\n  path: 'config/postProcessing/',\n  icon: 'menu-icon-postprocess'\n}, {\n  title: 'Notifications',\n  path: 'config/notifications/',\n  icon: 'menu-icon-notification'\n}, {\n  title: 'Anime',\n  path: 'config/anime/',\n  icon: 'menu-icon-anime'\n}]; // eslint-disable-next-line valid-jsdoc\n\n/** @type {import('.').SubMenuFunction} */\n\nconst errorlogsSubMenu = vm => {\n  const {\n    $route,\n    $store\n  } = vm;\n  const level = $route.params.level || $route.query.level;\n  const {\n    config\n  } = $store.state;\n  const {\n    loggingLevels,\n    numErrors,\n    numWarnings\n  } = config.general.logs;\n\n  if (Object.keys(loggingLevels).length === 0) {\n    return [];\n  }\n\n  const isLevelError = level === undefined || Number(level) === loggingLevels.error;\n  return [{\n    title: 'Clear Errors',\n    path: 'errorlogs/clearerrors/',\n    requires: numErrors >= 1 && isLevelError,\n    icon: 'ui-icon ui-icon-trash'\n  }, {\n    title: 'Clear Warnings',\n    path: `errorlogs/clearerrors/?level=${loggingLevels.warning}`,\n    requires: numWarnings >= 1 && Number(level) === loggingLevels.warning,\n    icon: 'ui-icon ui-icon-trash'\n  }, {\n    title: 'Submit Errors',\n    path: 'errorlogs/submit_errors/',\n    requires: numErrors >= 1 && isLevelError,\n    confirm: 'submiterrors',\n    icon: 'ui-icon ui-icon-arrowreturnthick-1-n'\n  }];\n};\n/** @type {import('.').SubMenu} */\n\nconst historySubMenu = [{\n  title: 'Clear History',\n  path: 'history/clearHistory',\n  icon: 'ui-icon ui-icon-trash',\n  confirm: 'clearhistory'\n}, {\n  title: 'Trim History',\n  path: 'history/trimHistory',\n  icon: 'menu-icon-cut',\n  confirm: 'trimhistory'\n}]; // eslint-disable-next-line valid-jsdoc\n\n/** @type {import('.').SubMenuFunction} */\n\nconst showSubMenu = vm => {\n  const {\n    $route,\n    $store\n  } = vm;\n  const {\n    config\n  } = $store.state;\n  const {\n    notifiers\n  } = config;\n  const showSlug = $route.params.showSlug || $route.query.showslug;\n  const show = $store.getters.getCurrentShow;\n  const {\n    showQueueStatus\n  } = show;\n\n  const queuedActionStatus = action => {\n    if (!showQueueStatus) {\n      return false;\n    }\n\n    return Boolean(showQueueStatus.find(status => status.action === action && status.active === true));\n  };\n\n  const isBeingAdded = queuedActionStatus('isBeingAdded');\n  const isBeingUpdated = queuedActionStatus('isBeingUpdated');\n  const isBeingSubtitled = queuedActionStatus('isBeingSubtitled');\n  /** @type {import('.').SubMenu} */\n\n  let menu = [{\n    title: 'Edit',\n    path: `home/editShow?showslug=${showSlug}`,\n    icon: 'ui-icon ui-icon-pencil'\n  }];\n\n  if (!isBeingAdded && !isBeingUpdated) {\n    menu = menu.concat([{\n      title: show.config.paused ? 'Resume' : 'Pause',\n      path: `home/togglePause?showslug=${showSlug}`,\n      icon: `ui-icon ui-icon-${show.config.paused ? 'play' : 'pause'}`\n    }, {\n      title: 'Remove',\n      path: `home/deleteShow?showslug=${showSlug}`,\n      confirm: 'removeshow',\n      icon: 'ui-icon ui-icon-trash'\n    }, {\n      title: 'Re-scan files',\n      path: `home/refreshShow?showslug=${showSlug}`,\n      icon: 'ui-icon ui-icon-refresh'\n    }, {\n      title: 'Force Full Update',\n      path: `home/updateShow?showslug=${showSlug}`,\n      icon: 'ui-icon ui-icon-transfer-e-w'\n    }, {\n      title: 'Update show in KODI',\n      path: `home/updateKODI?showslug=${showSlug}`,\n      method: 'updatekodi',\n      requires: notifiers.kodi.enabled && notifiers.kodi.update.library,\n      icon: 'menu-icon-kodi'\n    }, {\n      title: 'Update show in Emby',\n      path: `home/updateEMBY?showslug=${showSlug}`,\n      requires: notifiers.emby.enabled,\n      icon: 'menu-icon-emby'\n    }, {\n      title: 'Preview Rename',\n      path: `home/testRename?showslug=${showSlug}`,\n      icon: 'ui-icon ui-icon-tag'\n    }, {\n      title: 'Download Subtitles',\n      path: `home/subtitleShow?showslug=${showSlug}`,\n      requires: config.subtitles.enabled && !isBeingSubtitled && show.config.subtitlesEnabled,\n      icon: 'menu-icon-backlog'\n    }]);\n  }\n\n  return menu;\n};\n\n//# sourceURL=webpack://slim/./src/router/sub-menus.js?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["medusa-runtime","vendors~date-fns"], () => (__webpack_exec__("./src/app.js")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);