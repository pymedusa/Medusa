{"version":3,"names":[],"mappings":"","sources":["js/edit-show.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nlet allExceptions = [];\n\nfunction metaToBool(pyVar) {\n    let meta = $('meta[data-var=\"' + pyVar + '\"]').data('content');\n    if (typeof meta === 'undefined') {\n        console.log(pyVar + ' is empty, did you forget to add this to main.mako?');\n        return meta;\n    }\n    meta = isNaN(meta) ? meta.toLowerCase() : meta.toString();\n    return !(meta === 'false' || meta === 'none' || meta === '0');\n}\n\n$('#location').fileBrowser({\n    title: 'Select Show Location'\n});\n\n$('#submit').on('click', () => {\n    const allExceptions = [];\n\n    $('#exceptions_list option').each(function () {\n        allExceptions.push($(this).val());\n    });\n\n    $('#exceptions_list').val(allExceptions);\n\n    if (metaToBool('show.is_anime')) {\n        generateBlackWhiteList(); // eslint-disable-line no-undef\n    }\n});\n$('#addSceneName').on('click', () => {\n    const sceneEx = $('#SceneName').val();\n    const option = $('<option>');\n    allExceptions = [];\n\n    $('#exceptions_list option').each(function () {\n        allExceptions.push($(this).val());\n    });\n\n    $('#SceneName').val('');\n\n    if ($.inArray(sceneEx, allExceptions) > -1 || sceneEx === '') {\n        return;\n    }\n\n    $('#SceneException').show();\n\n    option.prop('value', sceneEx);\n    option.html(sceneEx);\n    return option.appendTo('#exceptions_list');\n});\n\n$('#removeSceneName').on('click', function () {\n    $('#exceptions_list option:selected').remove();\n\n    $(this).toggleSceneException();\n});\n\n$.fn.toggleSceneException = function () {\n    allExceptions = [];\n\n    $('#exceptions_list option').each(function () {\n        allExceptions.push($(this).val());\n    });\n\n    if (allExceptions === '') {\n        $('#SceneException').hide();\n    } else {\n        $('#SceneException').show();\n    }\n};\n\n$(this).toggleSceneException();\n\n},{}]},{},[1]);\n"],"file":"edit-show.js"}