{"version":3,"names":[],"mappings":"","sources":["js/manage/index.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nMEDUSA.manage.index = function () {\n    $('.resetsorting').on('click', function () {\n        $('table').trigger('filterReset');\n    });\n\n    $('#massUpdateTable:has(tbody tr)').tablesorter({\n        sortList: [[1, 0]],\n        textExtraction: {\n            2: function _(node) {\n                return $(node).find('span').text().toLowerCase();\n            },\n            // eslint-disable-line brace-style\n            3: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            4: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            5: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            6: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            7: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            8: function _(node) {\n                return $(node).find('img').attr('alt');\n            },\n            // eslint-disable-line brace-style\n            9: function _(node) {\n                return $(node).find('img').attr('alt');\n            } // eslint-disable-line brace-style\n\n        },\n        widgets: ['zebra', 'filter', 'columnSelector'],\n        headers: {\n            0: { sorter: false, filter: false },\n            1: { sorter: 'showNames' },\n            2: { sorter: 'quality' },\n            3: { sorter: 'sports' },\n            4: { sorter: 'scene' },\n            5: { sorter: 'anime' },\n            6: { sorter: 'flatfold' },\n            7: { sorter: 'paused' },\n            8: { sorter: 'subtitle' },\n            9: { sorter: 'default_ep_status' },\n            10: { sorter: 'status' },\n            11: { sorter: false },\n            12: { sorter: false },\n            13: { sorter: false },\n            14: { sorter: false },\n            15: { sorter: false },\n            16: { sorter: false }\n        },\n        widgetOptions: {\n            columnSelector_mediaquery: false // eslint-disable-line camelcase\n        }\n    });\n    $('#popover').popover({\n        placement: 'bottom',\n        html: true, // Required if content has HTML\n        content: '<div id=\"popover-target\"></div>'\n    }).on('shown.bs.popover', function () {\n        // Bootstrap popover event triggered when the popover opens\n        // call this function to copy the column selection code into the popover\n        $.tablesorter.columnSelector.attachTo($('#massUpdateTable'), '#popover-target');\n    });\n};\n\n},{}]},{},[1]);\n"],"file":"index.js"}